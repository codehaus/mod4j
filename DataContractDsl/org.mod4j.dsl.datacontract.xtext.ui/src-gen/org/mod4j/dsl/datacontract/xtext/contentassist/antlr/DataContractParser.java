/*
* generated by Xtext
*/
package org.mod4j.dsl.datacontract.xtext.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.CharStream;
import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.common.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.common.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.common.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.mod4j.dsl.datacontract.xtext.services.DataContractGrammarAccess;

public class DataContractParser extends AbstractContentAssistParser {
	
	@Inject
	private DataContractGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.mod4j.dsl.datacontract.xtext.contentassist.antlr.internal.InternalDataContractLexer createLexer(CharStream stream) {
		return new org.mod4j.dsl.datacontract.xtext.contentassist.antlr.internal.InternalDataContractLexer(stream);
	}
	
	@Override
	protected org.mod4j.dsl.datacontract.xtext.contentassist.antlr.internal.InternalDataContractParser createParser() {
		org.mod4j.dsl.datacontract.xtext.contentassist.antlr.internal.InternalDataContractParser result = new org.mod4j.dsl.datacontract.xtext.contentassist.antlr.internal.InternalDataContractParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				{
					put(grammarAccess.getDataContractModelAccess().getAlternatives_5(), "rule__DataContractModel__Alternatives_5");
					put(grammarAccess.getDtoAccess().getAlternatives(), "rule__Dto__Alternatives");
					put(grammarAccess.getDtoPropertyAccess().getAlternatives_0(), "rule__DtoProperty__Alternatives_0");
					put(grammarAccess.getDataContractModelAccess().getGroup(), "rule__DataContractModel__Group");
					put(grammarAccess.getExternalReferenceAccess().getGroup(), "rule__ExternalReference__Group");
					put(grammarAccess.getBusinessClassDtoAccess().getGroup(), "rule__BusinessClassDto__Group");
					put(grammarAccess.getBusinessClassDtoAccess().getGroup_5(), "rule__BusinessClassDto__Group_5");
					put(grammarAccess.getBusinessClassDtoAccess().getGroup_5_2(), "rule__BusinessClassDto__Group_5_2");
					put(grammarAccess.getEnumerationDtoAccess().getGroup(), "rule__EnumerationDto__Group");
					put(grammarAccess.getBusinessClassPropertyReferenceAccess().getGroup(), "rule__BusinessClassPropertyReference__Group");
					put(grammarAccess.getBusinessClassAssociationRoleReferenceAccess().getGroup(), "rule__BusinessClassAssociationRoleReference__Group");
					put(grammarAccess.getListDtoAccess().getGroup(), "rule__ListDto__Group");
					put(grammarAccess.getCustomDtoAccess().getGroup(), "rule__CustomDto__Group");
					put(grammarAccess.getDtoPropertyAccess().getGroup(), "rule__DtoProperty__Group");
					put(grammarAccess.getDtoBooleanPropertyAccess().getGroup(), "rule__DtoBooleanProperty__Group");
					put(grammarAccess.getDtoStringPropertyAccess().getGroup(), "rule__DtoStringProperty__Group");
					put(grammarAccess.getDtoDateTimePropertyAccess().getGroup(), "rule__DtoDateTimeProperty__Group");
					put(grammarAccess.getDtoIntegerPropertyAccess().getGroup(), "rule__DtoIntegerProperty__Group");
					put(grammarAccess.getDtoDecimalPropertyAccess().getGroup(), "rule__DtoDecimalProperty__Group");
					put(grammarAccess.getDtoEnumerationPropertyAccess().getGroup(), "rule__DtoEnumerationProperty__Group");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.mod4j.dsl.datacontract.xtext.contentassist.antlr.internal.InternalDataContractParser typedParser = (org.mod4j.dsl.datacontract.xtext.contentassist.antlr.internal.InternalDataContractParser) parser;
			typedParser.entryRuleDataContractModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public DataContractGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(DataContractGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
