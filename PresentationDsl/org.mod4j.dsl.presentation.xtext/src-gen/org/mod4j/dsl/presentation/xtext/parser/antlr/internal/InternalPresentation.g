/*
* generated by Xtext
*/
grammar InternalPresentation;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.mod4j.dsl.presentation.xtext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.mod4j.dsl.presentation.xtext.parser.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.xtext.conversion.ValueConverterException;
import org.mod4j.dsl.presentation.xtext.services.PresentationGrammarAccess;

}

@parser::members {
 
 	private PresentationGrammarAccess grammarAccess;
 	
    public InternalPresentationParser(TokenStream input, IAstFactory factory, PresentationGrammarAccess grammarAccess) {
        this(input);
        this.factory = factory;
        registerRules(grammarAccess.getGrammar());
        this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected InputStream getTokenFile() {
    	ClassLoader classLoader = getClass().getClassLoader();
    	return classLoader.getResourceAsStream("org/mod4j/dsl/presentation/xtext/parser/antlr/internal/InternalPresentation.tokens");
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "PresentationModel";	
   	} 
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRulePresentationModel
entryRulePresentationModel returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getPresentationModelRule(), currentNode); }
	 iv_rulePresentationModel=rulePresentationModel 
	 { $current=$iv_rulePresentationModel.current; } 
	 EOF 
;

// Rule PresentationModel
rulePresentationModel returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	
	
	    lv_description_0=	RULE_STRING
	{
		createLeafNode(grammarAccess.getPresentationModelAccess().getDescriptionSTRINGTerminalRuleCall_0_0(), "description"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPresentationModelRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "description", lv_description_0, "STRING", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)?'PresentationModel' 
    {
        createLeafNode(grammarAccess.getPresentationModelAccess().getPresentationModelKeyword_1(), null); 
    }
(	
	
	    lv_name_2=	RULE_ID
	{
		createLeafNode(grammarAccess.getPresentationModelAccess().getNameIDTerminalRuleCall_2_0(), "name"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPresentationModelRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "name", lv_name_2, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getPresentationModelAccess().getExternalReferencesExternalReferenceParserRuleCall_3_0(), currentNode); 
	    }
	    lv_externalReferences_3=ruleExternalReference 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPresentationModelRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "externalReferences", lv_externalReferences_3, "ExternalReference", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)*(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getPresentationModelAccess().getElementsModelElementParserRuleCall_4_0(), currentNode); 
	    }
	    lv_elements_4=ruleModelElement 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPresentationModelRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "elements", lv_elements_4, "ModelElement", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)*);





// Entry rule entryRuleExternalReference
entryRuleExternalReference returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getExternalReferenceRule(), currentNode); }
	 iv_ruleExternalReference=ruleExternalReference 
	 { $current=$iv_ruleExternalReference.current; } 
	 EOF 
;

// Rule ExternalReference
ruleExternalReference returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
('from' 
    {
        createLeafNode(grammarAccess.getExternalReferenceAccess().getFromKeyword_0(), null); 
    }
(	
	
	    lv_modelName_1=	RULE_ID
	{
		createLeafNode(grammarAccess.getExternalReferenceAccess().getModelNameIDTerminalRuleCall_1_0(), "modelName"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getExternalReferenceRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "modelName", lv_modelName_1, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)'import' 
    {
        createLeafNode(grammarAccess.getExternalReferenceAccess().getImportKeyword_2(), null); 
    }
(	
	
	    lv_name_3=	RULE_ID
	{
		createLeafNode(grammarAccess.getExternalReferenceAccess().getNameIDTerminalRuleCall_3_0(), "name"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getExternalReferenceRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "name", lv_name_3, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
));





// Entry rule entryRuleModelElement
entryRuleModelElement returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getModelElementRule(), currentNode); }
	 iv_ruleModelElement=ruleModelElement 
	 { $current=$iv_ruleModelElement.current; } 
	 EOF 
;

// Rule ModelElement
ruleModelElement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getModelElementAccess().getUIModelElementParserRuleCall_0(), currentNode); 
    }
    this_UIModelElement_0=ruleUIModelElement
    { 
        $current = $this_UIModelElement_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getModelElementAccess().getLinkParserRuleCall_1(), currentNode); 
    }
    this_Link_1=ruleLink
    { 
        $current = $this_Link_1.current; 
        currentNode = currentNode.getParent();
    }
);





// Entry rule entryRuleUIModelElement
entryRuleUIModelElement returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getUIModelElementRule(), currentNode); }
	 iv_ruleUIModelElement=ruleUIModelElement 
	 { $current=$iv_ruleUIModelElement.current; } 
	 EOF 
;

// Rule UIModelElement
ruleUIModelElement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getUIModelElementAccess().getDialogueParserRuleCall_0(), currentNode); 
    }
    this_Dialogue_0=ruleDialogue
    { 
        $current = $this_Dialogue_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getUIModelElementAccess().getProcessParserRuleCall_1(), currentNode); 
    }
    this_Process_1=ruleProcess
    { 
        $current = $this_Process_1.current; 
        currentNode = currentNode.getParent();
    }
);





// Entry rule entryRuleDialogue
entryRuleDialogue returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getDialogueRule(), currentNode); }
	 iv_ruleDialogue=ruleDialogue 
	 { $current=$iv_ruleDialogue.current; } 
	 EOF 
;

// Rule Dialogue
ruleDialogue returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getDialogueAccess().getContentFormParserRuleCall_0(), currentNode); 
    }
    this_ContentForm_0=ruleContentForm
    { 
        $current = $this_ContentForm_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getDialogueAccess().getCompoundDialogueParserRuleCall_1(), currentNode); 
    }
    this_CompoundDialogue_1=ruleCompoundDialogue
    { 
        $current = $this_CompoundDialogue_1.current; 
        currentNode = currentNode.getParent();
    }
);





// Entry rule entryRuleContentForm
entryRuleContentForm returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getContentFormRule(), currentNode); }
	 iv_ruleContentForm=ruleContentForm 
	 { $current=$iv_ruleContentForm.current; } 
	 EOF 
;

// Rule ContentForm
ruleContentForm returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	
	
	    lv_description_0=	RULE_STRING
	{
		createLeafNode(grammarAccess.getContentFormAccess().getDescriptionSTRINGTerminalRuleCall_0_0(), "description"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getContentFormRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "description", lv_description_0, "STRING", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)?'ContentForm' 
    {
        createLeafNode(grammarAccess.getContentFormAccess().getContentFormKeyword_1(), null); 
    }
(	
	
	    lv_name_2=	RULE_ID
	{
		createLeafNode(grammarAccess.getContentFormAccess().getNameIDTerminalRuleCall_2_0(), "name"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getContentFormRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "name", lv_name_2, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)'using' 
    {
        createLeafNode(grammarAccess.getContentFormAccess().getUsingKeyword_3(), null); 
    }
(	
	
		
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getContentFormRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getContentFormAccess().getContextRefExternalReferenceCrossReference_4_0(), "contextRef"); 
	}

		// TODO assign feature to currentNode
	
)('readonly' 
    {
        createLeafNode(grammarAccess.getContentFormAccess().getReadonlyKeyword_5_0(), null); 
    }
((	
	
	    lv_readonly_6='true' 
    {
        createLeafNode(grammarAccess.getContentFormAccess().getReadonlyTrueKeyword_5_1_0_0(), "readonly"); 
    }

 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getContentFormRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "readonly", true, "true", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)
    |'false' 
    {
        createLeafNode(grammarAccess.getContentFormAccess().getFalseKeyword_5_1_1(), null); 
    }
)';' 
    {
        createLeafNode(grammarAccess.getContentFormAccess().getSemicolonKeyword_5_2(), null); 
    }
)?(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getContentFormAccess().getFormElementsFormElementParserRuleCall_6_0(), currentNode); 
	    }
	    lv_formElements_9=ruleFormElement 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getContentFormRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "formElements", lv_formElements_9, "FormElement", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)*('processes' 
    {
        createLeafNode(grammarAccess.getContentFormAccess().getProcessesKeyword_7_0(), null); 
    }
'[' 
    {
        createLeafNode(grammarAccess.getContentFormAccess().getLeftSquareBracketKeyword_7_1(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getContentFormAccess().getProcessesProcessCallParserRuleCall_7_2_0(), currentNode); 
	    }
	    lv_processes_12=ruleProcessCall 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getContentFormRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "processes", lv_processes_12, "ProcessCall", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)*']' 
    {
        createLeafNode(grammarAccess.getContentFormAccess().getRightSquareBracketKeyword_7_3(), null); 
    }
)?);





// Entry rule entryRuleCompoundDialogue
entryRuleCompoundDialogue returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getCompoundDialogueRule(), currentNode); }
	 iv_ruleCompoundDialogue=ruleCompoundDialogue 
	 { $current=$iv_ruleCompoundDialogue.current; } 
	 EOF 
;

// Rule CompoundDialogue
ruleCompoundDialogue returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(((	
	
	    lv_description_0=	RULE_STRING
	{
		createLeafNode(grammarAccess.getCompoundDialogueAccess().getDescriptionSTRINGTerminalRuleCall_0_0_0(), "description"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCompoundDialogueRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "description", lv_description_0, "STRING", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)?'CompoundDialogue' 
    {
        createLeafNode(grammarAccess.getCompoundDialogueAccess().getCompoundDialogueKeyword_0_1(), null); 
    }
(	
	
	    lv_name_2=	RULE_ID
	{
		createLeafNode(grammarAccess.getCompoundDialogueAccess().getNameIDTerminalRuleCall_0_2_0(), "name"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCompoundDialogueRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "name", lv_name_2, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)'using' 
    {
        createLeafNode(grammarAccess.getCompoundDialogueAccess().getUsingKeyword_0_3(), null); 
    }
(	
	
		
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getCompoundDialogueRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getCompoundDialogueAccess().getContextRefExternalReferenceCrossReference_0_4_0(), "contextRef"); 
	}

		// TODO assign feature to currentNode
	
)('readonly' 
    {
        createLeafNode(grammarAccess.getCompoundDialogueAccess().getReadonlyKeyword_0_5_0(), null); 
    }
((	
	
	    lv_readonly_6='true' 
    {
        createLeafNode(grammarAccess.getCompoundDialogueAccess().getReadonlyTrueKeyword_0_5_1_0_0(), "readonly"); 
    }

 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCompoundDialogueRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "readonly", true, "true", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)
    |'false' 
    {
        createLeafNode(grammarAccess.getCompoundDialogueAccess().getFalseKeyword_0_5_1_1(), null); 
    }
)';' 
    {
        createLeafNode(grammarAccess.getCompoundDialogueAccess().getSemicolonKeyword_0_5_2(), null); 
    }
)?('dialogues' 
    {
        createLeafNode(grammarAccess.getCompoundDialogueAccess().getDialoguesKeyword_0_6_0(), null); 
    }
'[' 
    {
        createLeafNode(grammarAccess.getCompoundDialogueAccess().getLeftSquareBracketKeyword_0_6_1(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getCompoundDialogueAccess().getDialoguesDialogueCallParserRuleCall_0_6_2_0(), currentNode); 
	    }
	    lv_dialogues_11=ruleDialogueCall 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCompoundDialogueRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "dialogues", lv_dialogues_11, "DialogueCall", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)*']' 
    {
        createLeafNode(grammarAccess.getCompoundDialogueAccess().getRightSquareBracketKeyword_0_6_3(), null); 
    }
)?('processes' 
    {
        createLeafNode(grammarAccess.getCompoundDialogueAccess().getProcessesKeyword_0_7_0(), null); 
    }
'[' 
    {
        createLeafNode(grammarAccess.getCompoundDialogueAccess().getLeftSquareBracketKeyword_0_7_1(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getCompoundDialogueAccess().getProcessesProcessCallParserRuleCall_0_7_2_0(), currentNode); 
	    }
	    lv_processes_15=ruleProcessCall 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCompoundDialogueRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "processes", lv_processes_15, "ProcessCall", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)*']' 
    {
        createLeafNode(grammarAccess.getCompoundDialogueAccess().getRightSquareBracketKeyword_0_7_3(), null); 
    }
)?)
    |
    { 
        currentNode=createCompositeNode(grammarAccess.getCompoundDialogueAccess().getCollectionDialogueParserRuleCall_1(), currentNode); 
    }
    this_CollectionDialogue_17=ruleCollectionDialogue
    { 
        $current = $this_CollectionDialogue_17.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getCompoundDialogueAccess().getMasterDetailParserRuleCall_2(), currentNode); 
    }
    this_MasterDetail_18=ruleMasterDetail
    { 
        $current = $this_MasterDetail_18.current; 
        currentNode = currentNode.getParent();
    }
);





// Entry rule entryRuleCollectionDialogue
entryRuleCollectionDialogue returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getCollectionDialogueRule(), currentNode); }
	 iv_ruleCollectionDialogue=ruleCollectionDialogue 
	 { $current=$iv_ruleCollectionDialogue.current; } 
	 EOF 
;

// Rule CollectionDialogue
ruleCollectionDialogue returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	
	
	    lv_description_0=	RULE_STRING
	{
		createLeafNode(grammarAccess.getCollectionDialogueAccess().getDescriptionSTRINGTerminalRuleCall_0_0(), "description"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCollectionDialogueRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "description", lv_description_0, "STRING", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)?'CollectionDialogue' 
    {
        createLeafNode(grammarAccess.getCollectionDialogueAccess().getCollectionDialogueKeyword_1(), null); 
    }
(	
	
	    lv_name_2=	RULE_ID
	{
		createLeafNode(grammarAccess.getCollectionDialogueAccess().getNameIDTerminalRuleCall_2_0(), "name"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCollectionDialogueRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "name", lv_name_2, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)'using' 
    {
        createLeafNode(grammarAccess.getCollectionDialogueAccess().getUsingKeyword_3(), null); 
    }
(	
	
		
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getCollectionDialogueRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getCollectionDialogueAccess().getContextRefExternalReferenceCrossReference_4_0(), "contextRef"); 
	}

		// TODO assign feature to currentNode
	
)('readonly' 
    {
        createLeafNode(grammarAccess.getCollectionDialogueAccess().getReadonlyKeyword_5_0(), null); 
    }
((	
	
	    lv_readonly_6='true' 
    {
        createLeafNode(grammarAccess.getCollectionDialogueAccess().getReadonlyTrueKeyword_5_1_0_0(), "readonly"); 
    }

 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCollectionDialogueRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "readonly", true, "true", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)
    |'false' 
    {
        createLeafNode(grammarAccess.getCollectionDialogueAccess().getFalseKeyword_5_1_1(), null); 
    }
)';' 
    {
        createLeafNode(grammarAccess.getCollectionDialogueAccess().getSemicolonKeyword_5_2(), null); 
    }
)?('dialogues' 
    {
        createLeafNode(grammarAccess.getCollectionDialogueAccess().getDialoguesKeyword_6_0(), null); 
    }
'[' 
    {
        createLeafNode(grammarAccess.getCollectionDialogueAccess().getLeftSquareBracketKeyword_6_1(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getCollectionDialogueAccess().getDialoguesDialogueCallParserRuleCall_6_2_0(), currentNode); 
	    }
	    lv_dialogues_11=ruleDialogueCall 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCollectionDialogueRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "dialogues", lv_dialogues_11, "DialogueCall", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)*']' 
    {
        createLeafNode(grammarAccess.getCollectionDialogueAccess().getRightSquareBracketKeyword_6_3(), null); 
    }
)?('processes' 
    {
        createLeafNode(grammarAccess.getCollectionDialogueAccess().getProcessesKeyword_7_0(), null); 
    }
'[' 
    {
        createLeafNode(grammarAccess.getCollectionDialogueAccess().getLeftSquareBracketKeyword_7_1(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getCollectionDialogueAccess().getProcessesProcessCallParserRuleCall_7_2_0(), currentNode); 
	    }
	    lv_processes_15=ruleProcessCall 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCollectionDialogueRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "processes", lv_processes_15, "ProcessCall", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)*']' 
    {
        createLeafNode(grammarAccess.getCollectionDialogueAccess().getRightSquareBracketKeyword_7_3(), null); 
    }
)?);





// Entry rule entryRuleMasterDetail
entryRuleMasterDetail returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getMasterDetailRule(), currentNode); }
	 iv_ruleMasterDetail=ruleMasterDetail 
	 { $current=$iv_ruleMasterDetail.current; } 
	 EOF 
;

// Rule MasterDetail
ruleMasterDetail returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	
	
	    lv_description_0=	RULE_STRING
	{
		createLeafNode(grammarAccess.getMasterDetailAccess().getDescriptionSTRINGTerminalRuleCall_0_0(), "description"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMasterDetailRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "description", lv_description_0, "STRING", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)?'MasterDetail' 
    {
        createLeafNode(grammarAccess.getMasterDetailAccess().getMasterDetailKeyword_1(), null); 
    }
(	
	
	    lv_name_2=	RULE_ID
	{
		createLeafNode(grammarAccess.getMasterDetailAccess().getNameIDTerminalRuleCall_2_0(), "name"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMasterDetailRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "name", lv_name_2, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)'using' 
    {
        createLeafNode(grammarAccess.getMasterDetailAccess().getUsingKeyword_3(), null); 
    }
(	
	
		
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getMasterDetailRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getMasterDetailAccess().getContextRefExternalReferenceCrossReference_4_0(), "contextRef"); 
	}

		// TODO assign feature to currentNode
	
)('readonly' 
    {
        createLeafNode(grammarAccess.getMasterDetailAccess().getReadonlyKeyword_5_0(), null); 
    }
((	
	
	    lv_readonly_6='true' 
    {
        createLeafNode(grammarAccess.getMasterDetailAccess().getReadonlyTrueKeyword_5_1_0_0(), "readonly"); 
    }

 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMasterDetailRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "readonly", true, "true", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)
    |'false' 
    {
        createLeafNode(grammarAccess.getMasterDetailAccess().getFalseKeyword_5_1_1(), null); 
    }
)';' 
    {
        createLeafNode(grammarAccess.getMasterDetailAccess().getSemicolonKeyword_5_2(), null); 
    }
)?'master' 
    {
        createLeafNode(grammarAccess.getMasterDetailAccess().getMasterKeyword_6(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getMasterDetailAccess().getMasterDialogueCallParserRuleCall_7_0(), currentNode); 
	    }
	    lv_master_10=ruleDialogueCall 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMasterDetailRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "master", lv_master_10, "DialogueCall", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)';' 
    {
        createLeafNode(grammarAccess.getMasterDetailAccess().getSemicolonKeyword_8(), null); 
    }
'detail' 
    {
        createLeafNode(grammarAccess.getMasterDetailAccess().getDetailKeyword_9(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getMasterDetailAccess().getDetailDialogueCallParserRuleCall_10_0(), currentNode); 
	    }
	    lv_detail_13=ruleDialogueCall 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMasterDetailRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "detail", lv_detail_13, "DialogueCall", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)';' 
    {
        createLeafNode(grammarAccess.getMasterDetailAccess().getSemicolonKeyword_11(), null); 
    }
('processes' 
    {
        createLeafNode(grammarAccess.getMasterDetailAccess().getProcessesKeyword_12_0(), null); 
    }
'[' 
    {
        createLeafNode(grammarAccess.getMasterDetailAccess().getLeftSquareBracketKeyword_12_1(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getMasterDetailAccess().getProcessesProcessCallParserRuleCall_12_2_0(), currentNode); 
	    }
	    lv_processes_17=ruleProcessCall 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMasterDetailRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "processes", lv_processes_17, "ProcessCall", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)*']' 
    {
        createLeafNode(grammarAccess.getMasterDetailAccess().getRightSquareBracketKeyword_12_3(), null); 
    }
)?);





// Entry rule entryRuleProcess
entryRuleProcess returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getProcessRule(), currentNode); }
	 iv_ruleProcess=ruleProcess 
	 { $current=$iv_ruleProcess.current; } 
	 EOF 
;

// Rule Process
ruleProcess returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getProcessAccess().getAutomatedProcessParserRuleCall_0(), currentNode); 
    }
    this_AutomatedProcess_0=ruleAutomatedProcess
    { 
        $current = $this_AutomatedProcess_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getProcessAccess().getInteractiveProcessParserRuleCall_1(), currentNode); 
    }
    this_InteractiveProcess_1=ruleInteractiveProcess
    { 
        $current = $this_InteractiveProcess_1.current; 
        currentNode = currentNode.getParent();
    }
);





// Entry rule entryRuleAutomatedProcess
entryRuleAutomatedProcess returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getAutomatedProcessRule(), currentNode); }
	 iv_ruleAutomatedProcess=ruleAutomatedProcess 
	 { $current=$iv_ruleAutomatedProcess.current; } 
	 EOF 
;

// Rule AutomatedProcess
ruleAutomatedProcess returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	
	
	    lv_description_0=	RULE_STRING
	{
		createLeafNode(grammarAccess.getAutomatedProcessAccess().getDescriptionSTRINGTerminalRuleCall_0_0(), "description"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAutomatedProcessRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "description", lv_description_0, "STRING", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)?'AutomatedProcess' 
    {
        createLeafNode(grammarAccess.getAutomatedProcessAccess().getAutomatedProcessKeyword_1(), null); 
    }
(	
	
	    lv_name_2=	RULE_ID
	{
		createLeafNode(grammarAccess.getAutomatedProcessAccess().getNameIDTerminalRuleCall_2_0(), "name"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAutomatedProcessRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "name", lv_name_2, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)'using' 
    {
        createLeafNode(grammarAccess.getAutomatedProcessAccess().getUsingKeyword_3(), null); 
    }
(	
	
		
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getAutomatedProcessRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getAutomatedProcessAccess().getContextRefExternalReferenceCrossReference_4_0(), "contextRef"); 
	}

		// TODO assign feature to currentNode
	
));





// Entry rule entryRuleInteractiveProcess
entryRuleInteractiveProcess returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getInteractiveProcessRule(), currentNode); }
	 iv_ruleInteractiveProcess=ruleInteractiveProcess 
	 { $current=$iv_ruleInteractiveProcess.current; } 
	 EOF 
;

// Rule InteractiveProcess
ruleInteractiveProcess returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	
	
	    lv_description_0=	RULE_STRING
	{
		createLeafNode(grammarAccess.getInteractiveProcessAccess().getDescriptionSTRINGTerminalRuleCall_0_0(), "description"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInteractiveProcessRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "description", lv_description_0, "STRING", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)?'InteractiveProcess' 
    {
        createLeafNode(grammarAccess.getInteractiveProcessAccess().getInteractiveProcessKeyword_1(), null); 
    }
(	
	
	    lv_name_2=	RULE_ID
	{
		createLeafNode(grammarAccess.getInteractiveProcessAccess().getNameIDTerminalRuleCall_2_0(), "name"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInteractiveProcessRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "name", lv_name_2, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)'using' 
    {
        createLeafNode(grammarAccess.getInteractiveProcessAccess().getUsingKeyword_3(), null); 
    }
(	
	
		
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getInteractiveProcessRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getInteractiveProcessAccess().getContextRefExternalReferenceCrossReference_4_0(), "contextRef"); 
	}

		// TODO assign feature to currentNode
	
));





// Entry rule entryRuleFormElement
entryRuleFormElement returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getFormElementRule(), currentNode); }
	 iv_ruleFormElement=ruleFormElement 
	 { $current=$iv_ruleFormElement.current; } 
	 EOF 
;

// Rule FormElement
ruleFormElement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
('formElement' 
    {
        createLeafNode(grammarAccess.getFormElementAccess().getFormElementKeyword_0(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getFormElementAccess().getReferencesDtoPropertyReferenceParserRuleCall_1_0(), currentNode); 
	    }
	    lv_references_1=ruleDtoPropertyReference 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFormElementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "references", lv_references_1, "DtoPropertyReference", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)'named' 
    {
        createLeafNode(grammarAccess.getFormElementAccess().getNamedKeyword_2(), null); 
    }
(	
	
	    lv_name_3=	RULE_ID
	{
		createLeafNode(grammarAccess.getFormElementAccess().getNameIDTerminalRuleCall_3_0(), "name"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFormElementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "name", lv_name_3, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)('readonly' 
    {
        createLeafNode(grammarAccess.getFormElementAccess().getReadonlyKeyword_4_0(), null); 
    }
((	
	
	    lv_readonly_5='true' 
    {
        createLeafNode(grammarAccess.getFormElementAccess().getReadonlyTrueKeyword_4_1_0_0(), "readonly"); 
    }

 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFormElementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "readonly", true, "true", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)
    |'false' 
    {
        createLeafNode(grammarAccess.getFormElementAccess().getFalseKeyword_4_1_1(), null); 
    }
))?';' 
    {
        createLeafNode(grammarAccess.getFormElementAccess().getSemicolonKeyword_5(), null); 
    }
);





// Entry rule entryRuleDialogueCall
entryRuleDialogueCall returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getDialogueCallRule(), currentNode); }
	 iv_ruleDialogueCall=ruleDialogueCall 
	 { $current=$iv_ruleDialogueCall.current; } 
	 EOF 
;

// Rule DialogueCall
ruleDialogueCall returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getDialogueCallAccess().getDirectDialogueCallParserRuleCall_0(), currentNode); 
    }
    this_DirectDialogueCall_0=ruleDirectDialogueCall
    { 
        $current = $this_DirectDialogueCall_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getDialogueCallAccess().getLinkedDialogueCallParserRuleCall_1(), currentNode); 
    }
    this_LinkedDialogueCall_1=ruleLinkedDialogueCall
    { 
        $current = $this_LinkedDialogueCall_1.current; 
        currentNode = currentNode.getParent();
    }
);





// Entry rule entryRuleLinkedDialogueCall
entryRuleLinkedDialogueCall returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getLinkedDialogueCallRule(), currentNode); }
	 iv_ruleLinkedDialogueCall=ruleLinkedDialogueCall 
	 { $current=$iv_ruleLinkedDialogueCall.current; } 
	 EOF 
;

// Rule LinkedDialogueCall
ruleLinkedDialogueCall returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
('navigate' 
    {
        createLeafNode(grammarAccess.getLinkedDialogueCallAccess().getNavigateKeyword_0(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getLinkedDialogueCallAccess().getLinkLinkRefParserRuleCall_1_0(), currentNode); 
	    }
	    lv_link_1=ruleLinkRef 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getLinkedDialogueCallRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "link", lv_link_1, "LinkRef", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)'to' 
    {
        createLeafNode(grammarAccess.getLinkedDialogueCallAccess().getToKeyword_2(), null); 
    }
(	
	
	    lv_name_3=	RULE_ID
	{
		createLeafNode(grammarAccess.getLinkedDialogueCallAccess().getNameIDTerminalRuleCall_3_0(), "name"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getLinkedDialogueCallRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "name", lv_name_3, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)';' 
    {
        createLeafNode(grammarAccess.getLinkedDialogueCallAccess().getSemicolonKeyword_4(), null); 
    }
);





// Entry rule entryRuleDirectDialogueCall
entryRuleDirectDialogueCall returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getDirectDialogueCallRule(), currentNode); }
	 iv_ruleDirectDialogueCall=ruleDirectDialogueCall 
	 { $current=$iv_ruleDirectDialogueCall.current; } 
	 EOF 
;

// Rule DirectDialogueCall
ruleDirectDialogueCall returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	
	
	    lv_name_0=	RULE_ID
	{
		createLeafNode(grammarAccess.getDirectDialogueCallAccess().getNameIDTerminalRuleCall_0_0(), "name"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDirectDialogueCallRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "name", lv_name_0, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)';' 
    {
        createLeafNode(grammarAccess.getDirectDialogueCallAccess().getSemicolonKeyword_1(), null); 
    }
);





// Entry rule entryRuleProcessCall
entryRuleProcessCall returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getProcessCallRule(), currentNode); }
	 iv_ruleProcessCall=ruleProcessCall 
	 { $current=$iv_ruleProcessCall.current; } 
	 EOF 
;

// Rule ProcessCall
ruleProcessCall returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	
	
	    lv_name_0=	RULE_ID
	{
		createLeafNode(grammarAccess.getProcessCallAccess().getNameIDTerminalRuleCall_0_0(), "name"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getProcessCallRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "name", lv_name_0, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)';' 
    {
        createLeafNode(grammarAccess.getProcessCallAccess().getSemicolonKeyword_1(), null); 
    }
);





// Entry rule entryRuleLinkRef
entryRuleLinkRef returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getLinkRefRule(), currentNode); }
	 iv_ruleLinkRef=ruleLinkRef 
	 { $current=$iv_ruleLinkRef.current; } 
	 EOF 
;

// Rule LinkRef
ruleLinkRef returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	
	
	    lv_name_0=	RULE_ID
	{
		createLeafNode(grammarAccess.getLinkRefAccess().getNameIDTerminalRuleCall_0(), "name"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getLinkRefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "name", lv_name_0, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
);





// Entry rule entryRuleLink
entryRuleLink returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getLinkRule(), currentNode); }
	 iv_ruleLink=ruleLink 
	 { $current=$iv_ruleLink.current; } 
	 EOF 
;

// Rule Link
ruleLink returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getLinkAccess().getLinkStepParserRuleCall_0(), currentNode); 
    }
    this_LinkStep_0=ruleLinkStep
    { 
        $current = $this_LinkStep_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getLinkAccess().getLinkPathParserRuleCall_1(), currentNode); 
    }
    this_LinkPath_1=ruleLinkPath
    { 
        $current = $this_LinkPath_1.current; 
        currentNode = currentNode.getParent();
    }
);





// Entry rule entryRuleLinkStep
entryRuleLinkStep returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getLinkStepRule(), currentNode); }
	 iv_ruleLinkStep=ruleLinkStep 
	 { $current=$iv_ruleLinkStep.current; } 
	 EOF 
;

// Rule LinkStep
ruleLinkStep returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	
	
	    lv_description_0=	RULE_STRING
	{
		createLeafNode(grammarAccess.getLinkStepAccess().getDescriptionSTRINGTerminalRuleCall_0_0(), "description"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getLinkStepRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "description", lv_description_0, "STRING", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)?'LinkStep' 
    {
        createLeafNode(grammarAccess.getLinkStepAccess().getLinkStepKeyword_1(), null); 
    }
(	
	
	    lv_name_2=	RULE_ID
	{
		createLeafNode(grammarAccess.getLinkStepAccess().getNameIDTerminalRuleCall_2_0(), "name"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getLinkStepRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "name", lv_name_2, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)'using' 
    {
        createLeafNode(grammarAccess.getLinkStepAccess().getUsingKeyword_3(), null); 
    }
(	
	
		
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getLinkStepRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getLinkStepAccess().getContextRefExternalReferenceCrossReference_4_0(), "contextRef"); 
	}

		// TODO assign feature to currentNode
	
)'navigate' 
    {
        createLeafNode(grammarAccess.getLinkStepAccess().getNavigateKeyword_5(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getLinkStepAccess().getReferenceAssociationRoleReferenceParserRuleCall_6_0(), currentNode); 
	    }
	    lv_reference_6=ruleAssociationRoleReference 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getLinkStepRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "reference", lv_reference_6, "AssociationRoleReference", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
));





// Entry rule entryRuleLinkPath
entryRuleLinkPath returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getLinkPathRule(), currentNode); }
	 iv_ruleLinkPath=ruleLinkPath 
	 { $current=$iv_ruleLinkPath.current; } 
	 EOF 
;

// Rule LinkPath
ruleLinkPath returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	
	
	    lv_description_0=	RULE_STRING
	{
		createLeafNode(grammarAccess.getLinkPathAccess().getDescriptionSTRINGTerminalRuleCall_0_0(), "description"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getLinkPathRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "description", lv_description_0, "STRING", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)?'LinkPath' 
    {
        createLeafNode(grammarAccess.getLinkPathAccess().getLinkPathKeyword_1(), null); 
    }
(	
	
	    lv_name_2=	RULE_ID
	{
		createLeafNode(grammarAccess.getLinkPathAccess().getNameIDTerminalRuleCall_2_0(), "name"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getLinkPathRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "name", lv_name_2, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)'using' 
    {
        createLeafNode(grammarAccess.getLinkPathAccess().getUsingKeyword_3(), null); 
    }
(	
	
		
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getLinkPathRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getLinkPathAccess().getContextRefExternalReferenceCrossReference_4_0(), "contextRef"); 
	}

		// TODO assign feature to currentNode
	
));





// Entry rule entryRuleDtoPropertyReference
entryRuleDtoPropertyReference returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getDtoPropertyReferenceRule(), currentNode); }
	 iv_ruleDtoPropertyReference=ruleDtoPropertyReference 
	 { $current=$iv_ruleDtoPropertyReference.current; } 
	 EOF 
;

// Rule DtoPropertyReference
ruleDtoPropertyReference returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	
	
	    lv_name_0=	RULE_ID
	{
		createLeafNode(grammarAccess.getDtoPropertyReferenceAccess().getNameIDTerminalRuleCall_0(), "name"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDtoPropertyReferenceRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "name", lv_name_0, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
);





// Entry rule entryRuleAssociationRoleReference
entryRuleAssociationRoleReference returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getAssociationRoleReferenceRule(), currentNode); }
	 iv_ruleAssociationRoleReference=ruleAssociationRoleReference 
	 { $current=$iv_ruleAssociationRoleReference.current; } 
	 EOF 
;

// Rule AssociationRoleReference
ruleAssociationRoleReference returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	
	
	    lv_name_0=	RULE_ID
	{
		createLeafNode(grammarAccess.getAssociationRoleReferenceAccess().getNameIDTerminalRuleCall_0(), "name"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAssociationRoleReferenceRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "name", lv_name_0, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
);





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


