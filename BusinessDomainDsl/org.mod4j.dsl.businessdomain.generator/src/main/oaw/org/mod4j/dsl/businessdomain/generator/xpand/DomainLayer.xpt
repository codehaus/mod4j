«REM»
 Copyright (c) 2009 Ordina and committers to Mod4j
 All rights reserved. This program and the accompanying materials
 are made available under the terms of the Eclipse Public License v1.0
 which accompanies this distribution, and is available at
 http://www.eclipse.org/legal/epl-v10.html
  Contributors:
     Ordina - initial implementation
«ENDREM»
«IMPORT BusinessDomainDsl»
«IMPORT maven»
«IMPORT org::mod4j::dsl::businessdomain::generator::xpand::java»
«IMPORT org::mod4j::dsl::businessdomain::generator::xpand::maven»

«EXTENSION org::mod4j::dslcommon::xtend::generatorutil»
«EXTENSION org::mod4j::dslcommon::xtend::ProjectProperties»
«EXTENSION org::mod4j::common::xtend::NameMapper»
«EXTENSION org::mod4j::common::xtend::FileTracker»


«DEFINE Root FOR BusinessDomainDsl::BusinessDomainModel »

	«print("MOD4J INFO: Running Business Domain generator on model [" + this.name + "]")»
«REM»
	«model  ( this.name()                  )»
	«module ( getDomainModuleName()        )»
	«package( javaDomainBaseClassPackage() )»
«ENDREM»
    «FOREACH types.typeSelect(BusinessClass) AS class»
        «FILE generate(getDomainModuleName(), javaPathFileName(javaDomainBaseClassPath(class.name) ))»
            «EXPAND NewJavaBean::BeanClassImplBase FOR class»
        «ENDFILE»

	    «FOREACH class.businessRules.typeSelect(BusinessRule) AS br»
		    «FILE generate(getDomainModuleName(), javaPathFileName(javaBusinessRuleBaseClassPath(br.name) ))»
		        «EXPAND NewBusinessRules::BusinessRuleImplBase (class) FOR br»
			«ENDFILE»
	    «ENDFOREACH»
    «ENDFOREACH»

	«FOREACH enumerations AS enum»
	    «FILE generate(getDomainModuleName(), javaPathFileName(javaDomainClassPath(enum.name) ))»
			«EXPAND Enumeration::createEnum FOR enum»
		«ENDFILE»
	«ENDFOREACH»
«ENDDEFINE»

«REM»
	Generation of Extention Points of the implementation base classes.
	If they don't exist already these classes typically are generated to the srcMan folder. 
«ENDREM»
«REM»

«ENDREM»
«DEFINE ExtensionPointGeneration FOR BusinessDomainDsl::BusinessDomainModel»
	«print("MOD4J INFO: Running Business Domain extension point generator on model [" + this.name + "]")»
    «FOREACH types.typeSelect(BusinessClass) AS class»
		«REM»Extension point for JavaBean domain class«ENDREM»
		«IF shouldRegenerate(fullExtendPath(getDomainModuleName(), javaPathFileName(javaDomainClassPath(class.name) )))»
			«print("MOD4J REGENERATE: [" + javaPathFileName(javaDomainClassPath(class.name)) + "]")»
			«FILE extend(getDomainModuleName(), javaPathFileName(javaDomainClassPath(class.name) ))»
	            «EXPAND NewJavaBean::BeanClassExtensionPoint FOR class»
	        «ENDFILE»
		«ELSE»
			«print("MOD4J RETAIN    : [" + javaPathFileName(javaDomainClassPath(class.name)) + "]")»
			«retain(getDomainModuleName(), javaPathFileName(javaDomainClassPath(class.name) ))»
	    «ENDIF»

		«REM»ExampleClass for JavaBean domain class to enable query bu example«ENDREM»
	    «FILE generate(getDomainModuleName(), javaPathFileName(javaDomainExampleClassPath(class.name) ))»
		    «EXPAND NewJavaBean::BeanClassQueryExample FOR class»
		«ENDFILE»

	    «FOREACH class.businessRules.typeSelect(BusinessRule) AS br»
			«IF shouldRegenerate(fullExtendPath(getDomainModuleName(), javaPathFileName(javaBusinessRuleClassPath(br.name) )))»
				«print("MOD4J REGENERATE RULE: [" + javaPathFileName(javaBusinessRuleClassPath(br.name)) + "]")»
				«FILE extend(getDomainModuleName(), javaPathFileName(javaBusinessRuleClassPath(br.name) ))»
					«EXPAND NewBusinessRules::BusinessRuleExtensionPoint  FOR br»
				«ENDFILE»
			«ELSE»
				«print("MOD4J RETAIN     RULE: [" + javaPathFileName(javaBusinessRuleClassPath(br.name)) + "]")»
				«retain(getDomainModuleName(), javaPathFileName(javaBusinessRuleClassPath(br.name) ))»
			«ENDIF»
	    «ENDFOREACH»
    «ENDFOREACH»

    
«ENDDEFINE»

«REM»
	Generation of Maven configuration files. 
«ENDREM»
«DEFINE CreateMavenConfiguration FOR BusinessDomainDsl::BusinessDomainModel»
	«print("MOD4J INFO: Running Business Domain Maven generator on model [" + this.name + "]")»
    «IF shouldRegenerate(getDslModelsModulePath() + "/pom.xml")»
        «FILE extend( getDslModelsModuleName(), "pom.xml" )-»
		    «EXPAND DslModelsModulePom::createDslModelsModulePom»
		«ENDFILE»
	«ELSE»
		«retain(getDslModelsModuleName(), "pom.xml" )»
	«ENDIF»
	
	«IF shouldRegenerate(getApplicationPath() + "/pom.xml")»
		«FILE extend("", "pom.xml")»
		    «EXPAND ParentPom::createParentPom»
		«ENDFILE»
	«ELSE»
		«retain("", "pom.xml" )»
	«ENDIF»

    «IF shouldRegenerate(getDomainModulePath() + "/pom.xml")»
        «FILE extend( getDomainModuleName(), "pom.xml" )-»
			«EXPAND DomainModulePom::createDomainModulePom»
		«ENDFILE»
	«ELSE»
		«retain(getDomainModuleName(), "pom.xml" )»
	«ENDIF»

    «IF shouldRegenerate(getDataModulePath() + "/pom.xml")»
        «FILE extend( getDataModuleName(), "pom.xml" )-»
			«EXPAND DataModulePom::createDataModulePom»
		«ENDFILE»
	«ELSE»
		«retain(getDataModuleName(), "pom.xml" )»
	«ENDIF»
«ENDDEFINE»
