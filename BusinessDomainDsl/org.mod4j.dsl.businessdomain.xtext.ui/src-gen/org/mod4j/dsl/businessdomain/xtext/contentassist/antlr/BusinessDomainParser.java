/*
* generated by Xtext
*/
package org.mod4j.dsl.businessdomain.xtext.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.CharStream;
import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.common.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.common.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.common.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.mod4j.dsl.businessdomain.xtext.services.BusinessDomainGrammarAccess;

public class BusinessDomainParser extends AbstractContentAssistParser {
	
	@Inject
	private BusinessDomainGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.mod4j.dsl.businessdomain.xtext.contentassist.antlr.internal.InternalBusinessDomainLexer createLexer(CharStream stream) {
		return new org.mod4j.dsl.businessdomain.xtext.contentassist.antlr.internal.InternalBusinessDomainLexer(stream);
	}
	
	@Override
	protected org.mod4j.dsl.businessdomain.xtext.contentassist.antlr.internal.InternalBusinessDomainParser createParser() {
		org.mod4j.dsl.businessdomain.xtext.contentassist.antlr.internal.InternalBusinessDomainParser result = new org.mod4j.dsl.businessdomain.xtext.contentassist.antlr.internal.InternalBusinessDomainParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				{
					put(grammarAccess.getBusinessDomainModelAccess().getAlternatives_5(), "rule__BusinessDomainModel__Alternatives_5");
					put(grammarAccess.getAssociationAccess().getAlternatives_5(), "rule__Association__Alternatives_5");
					put(grammarAccess.getAbstractBusinessRuleAccess().getAlternatives(), "rule__AbstractBusinessRule__Alternatives");
					put(grammarAccess.getPropertyAccess().getAlternatives_0(), "rule__Property__Alternatives_0");
					put(grammarAccess.getBoolPropertyAccess().getAlternatives_3_1(), "rule__BoolProperty__Alternatives_3_1");
					put(grammarAccess.getMultiplicityAccess().getAlternatives(), "rule__Multiplicity__Alternatives");
					put(grammarAccess.getDateTimeAccuracyAccess().getAlternatives(), "rule__DateTimeAccuracy__Alternatives");
					put(grammarAccess.getPersistencyModeAccess().getAlternatives(), "rule__PersistencyMode__Alternatives");
					put(grammarAccess.getBusinessDomainModelAccess().getGroup(), "rule__BusinessDomainModel__Group");
					put(grammarAccess.getBusinessClassReferenceAccess().getGroup(), "rule__BusinessClassReference__Group");
					put(grammarAccess.getAssociationAccess().getGroup(), "rule__Association__Group");
					put(grammarAccess.getBusinessClassAccess().getGroup(), "rule__BusinessClass__Group");
					put(grammarAccess.getBusinessClassAccess().getGroup_3(), "rule__BusinessClass__Group_3");
					put(grammarAccess.getBusinessClassAccess().getGroup_6(), "rule__BusinessClass__Group_6");
					put(grammarAccess.getEnumerationAccess().getGroup(), "rule__Enumeration__Group");
					put(grammarAccess.getEnumerationLiteralAccess().getGroup(), "rule__EnumerationLiteral__Group");
					put(grammarAccess.getEnumerationLiteralAccess().getGroup_1(), "rule__EnumerationLiteral__Group_1");
					put(grammarAccess.getBusinessRuleAccess().getGroup(), "rule__BusinessRule__Group");
					put(grammarAccess.getUniqueRuleAccess().getGroup(), "rule__UniqueRule__Group");
					put(grammarAccess.getUniqueRuleAccess().getGroup_5(), "rule__UniqueRule__Group_5");
					put(grammarAccess.getPropertyAccess().getGroup(), "rule__Property__Group");
					put(grammarAccess.getPropertyAccess().getGroup_2(), "rule__Property__Group_2");
					put(grammarAccess.getBoolPropertyAccess().getGroup(), "rule__BoolProperty__Group");
					put(grammarAccess.getBoolPropertyAccess().getGroup_3(), "rule__BoolProperty__Group_3");
					put(grammarAccess.getStringPropertyAccess().getGroup(), "rule__StringProperty__Group");
					put(grammarAccess.getStringPropertyAccess().getGroup_3(), "rule__StringProperty__Group_3");
					put(grammarAccess.getStringPropertyAccess().getGroup_4(), "rule__StringProperty__Group_4");
					put(grammarAccess.getStringPropertyAccess().getGroup_5(), "rule__StringProperty__Group_5");
					put(grammarAccess.getStringPropertyAccess().getGroup_6(), "rule__StringProperty__Group_6");
					put(grammarAccess.getDateTimePropertyAccess().getGroup(), "rule__DateTimeProperty__Group");
					put(grammarAccess.getDateTimePropertyAccess().getGroup_3(), "rule__DateTimeProperty__Group_3");
					put(grammarAccess.getIntegerPropertyAccess().getGroup(), "rule__IntegerProperty__Group");
					put(grammarAccess.getIntegerPropertyAccess().getGroup_3(), "rule__IntegerProperty__Group_3");
					put(grammarAccess.getIntegerPropertyAccess().getGroup_4(), "rule__IntegerProperty__Group_4");
					put(grammarAccess.getIntegerPropertyAccess().getGroup_5(), "rule__IntegerProperty__Group_5");
					put(grammarAccess.getDecimalPropertyAccess().getGroup(), "rule__DecimalProperty__Group");
					put(grammarAccess.getEnumerationPropertyAccess().getGroup(), "rule__EnumerationProperty__Group");
					put(grammarAccess.getEnumerationPropertyAccess().getGroup_3(), "rule__EnumerationProperty__Group_3");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.mod4j.dsl.businessdomain.xtext.contentassist.antlr.internal.InternalBusinessDomainParser typedParser = (org.mod4j.dsl.businessdomain.xtext.contentassist.antlr.internal.InternalBusinessDomainParser) parser;
			typedParser.entryRuleBusinessDomainModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public BusinessDomainGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(BusinessDomainGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
