<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd">

	<bean id="wicketApplication" class="nl.ordina.mod4j.rbs.web.RBSApplication"/>

	<bean id="maxItemsPerPage" class="java.lang.Integer">
		<constructor-arg value="${maxItemsPerPage}"/>
	</bean>
	
	<bean id="breakfastDAO" class="nl.ordina.mod4j.rbs.dao.stub.BreakfastDAOImpl"/>

	<bean id="comestibleDAO" class="nl.ordina.mod4j.rbs.dao.stub.ComestibleDAOImpl">
		<constructor-arg>
			<list>
				<bean class="nl.ordina.mod4j.rbs.model.Comestible">
					<constructor-arg index="0" value="0"/>
					<constructor-arg index="1" value="Sandwich"/>
					<constructor-arg index="2" value="1"/>
					<constructor-arg index="3" value="4.0"/>
					<constructor-arg index="4" value=""/>
				</bean>
				<bean class="nl.ordina.mod4j.rbs.model.Comestible">
					<constructor-arg index="0" value="1"/>
					<constructor-arg index="1" value="Milk"/>
					<constructor-arg index="2" value="1"/>
					<constructor-arg index="3" value="1.0"/>
					<constructor-arg index="4" value=""/>
				</bean>
			</list>
		</constructor-arg>
	</bean>

	<!--bean id="breakfastDAOTarget" class="nl.ordina.mod4j.rbs.dao.jdo.spring.BreakfastDAOImpl">
		<property name="persistenceManagerFactory" ref="pmf"/>
	</bean>

	<bean id="breakfastDAO" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager" ref="jdoTransactionManager"/>
		<property name="target" ref="breakfastDAOTarget"/>
		<property name="transactionAttributes">
			<props>
				<prop key="get*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="save">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>

	<bean id="comestibleDAOTarget" class="nl.ordina.mod4j.rbs.dao.jdo.spring.ComestibleDAOImpl">
		<property name="persistenceManagerFactory" ref="pmf"/>
	</bean>

	<bean id="comestibleDAO" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager" ref="jdoTransactionManager"/>
		<property name="target" ref="comestibleDAOTarget"/>
		<property name="transactionAttributes">
			<props>
				<prop key="get*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>

	<bean id="jdoTransactionManager" class="org.springframework.orm.jdo.JdoTransactionManager">
		<property name="persistenceManagerFactory" ref="pmf"/>
		<property name="jdoDialect" ref="jpoxDialect"/>
	</bean>

  <bean id="jpoxDialect" class="org.jpox.springframework.JPOXJdoDialect">
  </bean>

	<bean id="pmf" class="org.jpox.jdo.JDOPersistenceManagerFactory" destroy-method="close">
		<property name="connectionFactory" ref="dataSource"/>
		<property name="nontransactionalRead" value="false"/>
		<property name="nontransactionalWrite" value="false"/>
		<property name="options">
			<map>
				<entry key="org.jpox.storeManagerType" value="rdbms"/>
				<entry key="org.jpox.validateTables" value="false"/>
				<entry key="org.jpox.validateConstraints" value="false"/>
				<entry key="org.jpox.validateColumns" value="false"/>
				<entry key="org.jpox.fixedDatastore" value="true"/>
			</map>
		</property>
	</bean>

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${rbs.jdbc.driverClassName}"/>
		<property name="url" value="${rbs.jdbc.url}"/>
		<property name="username" value="${rbs.jdbc.username}"/>
		<property name="password" value="${rbs.jdbc.password}"/>
		<property name="defaultAutoCommit"><value>${rbs.pool.defaultAutoCommit}</value></property>
		<property name="defaultTransactionIsolation"><value>${rbs.pool.defaultTransactionIsolation}</value></property>
		<property name="initialSize"><value>${rbs.pool.initialSize}</value></property>
		<property name="maxActive"><value>${rbs.pool.maxActive}</value></property>
		<property name="maxIdle"><value>${rbs.pool.maxIdle}</value></property>
		<property name="minIdle"><value>${rbs.pool.minIdle}</value></property>
		<property name="maxWait"><value>${rbs.pool.maxWait}</value></property>
		<property name="validationQuery"><value>${rbs.pool.validationQuery}</value></property>
		<property name="testOnBorrow"><value>${rbs.pool.testOnBorrow}</value></property>
		<property name="testOnReturn"><value>${rbs.pool.testOnReturn}</value></property>
		<property name="testWhileIdle"><value>${rbs.pool.testWhileIdle}</value></property>
		<property name="timeBetweenEvictionRunsMillis"><value>${rbs.pool.timeBetweenEvictionRunsMillis}</value></property>
		<property name="numTestsPerEvictionRun"><value>${rbs.pool.numTestsPerEvictionRun}</value></property>
		<property name="minEvictableIdleTimeMillis"><value>${rbs.pool.minEvictableIdleTimeMillis}</value></property>
		<property name="poolPreparedStatements"><value>${rbs.pool.poolPreparedStatements}</value></property>
		<property name="maxOpenPreparedStatements"><value>${rbs.pool.maxOpenPreparedStatements}</value></property>
		<property name="removeAbandoned"><value>${rbs.pool.removeAbandoned}</value></property>
		<property name="removeAbandonedTimeout"><value>${rbs.pool.removeAbandonedTimeout}</value></property>
		<property name="logAbandoned"><value>${rbs.pool.logAbandoned}</value></property>
	</bean-->

</beans>