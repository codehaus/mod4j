«IMPORT BusinessDomainDsl»

«EXTENSION template::GeneratorExtensions»

«DEFINE addToReferenceVariable FOR Association»
	/**
     *  «targetRoleName»: «description»
     */
    «IF targetMultiplicity.toString()=="One" || targetMultiplicity.toString()=="ZeroOne" -»
		private «target.name» «targetRoleName»;
		«EXPAND addToOneAccessorMethods FOR this»
	«ELSE -»
		private List<«target.name»> «targetRoleName» = new ArrayList<«target.name»>();
		«EXPAND addToManyAccessorMethods FOR this»
	«ENDIF»
«ENDDEFINE»

«DEFINE addFromReferenceVariable FOR Association»
	/**
     *  «sourceRoleName»: «description»
     */
	private «source.name» «sourceRoleName»;
	
	/**
	 *
	 * @param «sourceRoleName» («source.name») «source.description»
	 */
	public void set«source.name.toFirstUpper()» (final «source.name» «sourceRoleName») {
   		this.«sourceRoleName» = «sourceRoleName»;
	}
	
	/**
	 *
	 * @return «sourceRoleName» («source.name»)  «source.description»
	 */
	public «source.name» get«sourceRoleName.toFirstUpper()» () {
   		return this.«sourceRoleName»;
	}
«ENDDEFINE»

«DEFINE addToOneAccessorMethods FOR Association»
	/**
	 *
	 * @return «targetRoleName» («target.name»)  «target.description»
	 */
	public «target.name» get«targetRoleName.toFirstUpper()» () {
   		return this.«targetRoleName»;
	}
	
	/**
	 *
	 * @param «targetRoleName» («target.name»)  «target.description»
	 */
	public void set«target.name.toFirstUpper()» (final «target.name» «targetRoleName») {
   		this.«targetRoleName» = «targetRoleName»;
	}
«ENDDEFINE»

«DEFINE addToManyAccessorMethods FOR Association»
	/**
	 *
	 * @return «targetRoleName» (List<«target.name»>) «target.description»
	 */
	public List<«target.name»> get«targetRoleName.toFirstUpper()» () {
   		return this.«targetRoleName»;
	}
	
	/**
	 *
	 * @param «targetRoleName» (List<«target.name»>) «target.description»
	 */
	public void set«target.name.toFirstUpper()» (final List<«target.name»> «targetRoleName») {
   		this.«targetRoleName» = «targetRoleName»;
	}
«ENDDEFINE»
