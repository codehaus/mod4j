«IMPORT BusinessDomainDsl»

«EXTENSION util»

«DEFINE BeanClassImplBase (String rootPackage) FOR AbstractType»
	«FILE rootPackage.replaceAll("\\.", "/") + "/" + name + ".java"»
		package «rootPackage»;
		
		«EXPAND Imports::addImports FOREACH properties»
		/**
		* Generated at: «timestamp()»
		*/
        public class «name» {
        
        	«EXPAND Attributes::addAttribute FOREACH properties»
 			«EXPAND Attributes::addGetter FOREACH properties»
 			«EXPAND Attributes::addSetter FOREACH properties» 		
        }
	«ENDFILE»
«ENDDEFINE»

«DEFINE BeanClassImplBase (String rootPackage) FOR BusinessClass»
	«FILE rootPackage.replaceAll("\\.", "/") + "/" + name + "ImplBase" +  ".java"»
		package «rootPackage»;
		
		«EXPAND Imports::addImports FOREACH properties»
		«EXPAND Imports::addImports FOREACH associationsTo»
		
		/**
		* Generated at: «timestamp()»
		*/
        public abstract class «name»ImplBase «IF superclass != null»extends «superclass.name» «ENDIF»implements java.io.Serializable {
            	
 			«EXPAND Attributes::addAttribute FOREACH properties»
 			«EXPAND Associations::addReferenceVariable FOREACH associationsTo»
 			«EXPAND Constructors::addMinimalConstructor ("ImplBase") FOR this»
 			«EXPAND Attributes::addGetter FOREACH properties»
 			«EXPAND Attributes::addSetter FOREACH properties»
 			«EXPAND Associations::addGetter FOREACH associationsTo»
 			«EXPAND Associations::addSetter FOREACH associationsTo»
        }
	«ENDFILE»
«ENDDEFINE»

«DEFINE BeanClassCustomImpl (String rootPackage) FOR AbstractType»
	«REM»No generation of AbstracTypes other then BusinessClasses«ENDREM»
«ENDDEFINE»

«DEFINE BeanClassCustomImpl (String rootPackage) FOR BusinessClass»
	«FILE rootPackage.replaceAll("\\.", "/") + "/" + name +  ".java"»
		package «rootPackage»;
				
		/**
		* Initially generated at: «timestamp()»
		*/
        public class «name» extends «name»ImplBase {
            	
        «EXPAND Constructors::addCallToSuperOnlyMinimalConstructor ("") FOR this»
 		}	
	«ENDFILE»
«ENDDEFINE»