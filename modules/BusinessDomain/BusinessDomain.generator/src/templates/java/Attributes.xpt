«IMPORT BusinessDomainDsl»

«EXTENSION template::GeneratorExtensions»

«DEFINE instanceVariable FOR Property»
	/**
     *  «name»: «description»
     */
     private «dataType» «name»;
«ENDDEFINE»

«DEFINE addGetter FOR Property»
	/**
	*
	* @return «name» («dataType») «description»
	*/
	public «dataType» get«name.toFirstUpper()» () {
   		return this.«name»;
	}
«ENDDEFINE»

«DEFINE addSetter FOR Property»
	/**
	*
	* @param «name» («dataType») «description»
	*/
	public void set«name.toFirstUpper()» (final «dataType» «name») {
   		this.«name» = «name»;
	}
«ENDDEFINE»

«DEFINE addAttribute FOR Property»
    /**
     *  Unknown Property type. It is not a subclass of Property or it is not expanded by this generator.
     *  Name: «name» 
     * 	Description: «description»
     */
«ENDDEFINE»

«DEFINE addAttribute FOR BlobBinaryProperty»
    «EXPAND instanceVariable FOR this»
«ENDDEFINE»

«DEFINE addAttribute FOR BlobTextProperty»
    «EXPAND instanceVariable FOR this»
«ENDDEFINE»

«DEFINE addAttribute FOR BoolProperty»
    «EXPAND instanceVariable FOR this»
«ENDDEFINE»

«DEFINE addAttribute FOR EnumerationProperty»
	«EXPAND instanceVariable FOR this»
«REM»	
    «IF type != null»
		public static final int «name.toUpperCase()»_ENUMERATIONDATATYPE = «customDataType»;
	«ENDIF»
«ENDREM»
«ENDDEFINE»

«DEFINE addAttribute FOR DateTimeProperty»
	«EXPAND instanceVariable FOR this»
	public static final DateTimeAccuracy «name.toUpperCase()»_ACCURACY = DateTimeAccuracy.getByName("«accuracy»");
«ENDDEFINE»

«DEFINE addAttribute FOR NumberProperty»
	«EXPAND instanceVariable FOR this»
	«IF minValue.length>0»
		public static final «dataType» «name.toUpperCase()»_MINVALUE = «minValue»;
	«ENDIF»
	«IF maxValue.length>0»
		public static final «dataType» «name.toUpperCase()»_MAXVALUE = «maxValue»;
	«ENDIF»
	public static final boolean «name.toUpperCase()»_MININCLUSIVE = «minInclusive»;
	public static final boolean «name.toUpperCase()»_MAXINCLUSIVE = «maxInclusive»;
«ENDDEFINE»

«DEFINE addAttribute FOR StringProperty»	
	«EXPAND instanceVariable FOR this» 
	«IF regularExpression.length>0»
		public static final «dataType» «name.toUpperCase()»_REGEXP = «regularExpression»;
	«ENDIF»
	«IF minLength>0»
		public static final Integer «name.toUpperCase()»_MINLENGTH = «minLength»;
	«ENDIF»
	«IF maxLength>0»
		public static final Integer «name.toUpperCase()»_MAXLENGTH = «maxLength»;
	«ENDIF»
«ENDDEFINE»
