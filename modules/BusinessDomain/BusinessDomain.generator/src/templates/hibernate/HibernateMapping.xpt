«IMPORT BusinessDomainDsl»

«EXTENSION BusinessClass»
«EXTENSION Association»
«EXTENSION util»
«EXTENSION ProjectProperties»

«DEFINE header FOR BusinessDomainDsl::BusinessClass»
<?xml version="1.0"?>
<!-- Generated by Mod4j Hibernate Generator at «timestamp()» -->
<!DOCTYPE hibernate-mapping PUBLIC
        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
«ENDDEFINE»

«DEFINE mapping FOR BusinessDomainDsl::BusinessClass»
«FILE javaClassName(this.name) + ".hbm.xml"»
«EXPAND header FOR this»

<!-- Mapping for class «this.name»
     Description «this.description»
  -->
<hibernate-mapping default-access="field">
    <class name="«getDomainRootPackage()».«javaClassName(this)»"
           table="«javaClassName(this)»_TABLE"
           optimistic-lock="version">
        <cache usage="read-write" />
        <id name="id" column="id" type="java.lang.Long">
            <generator class="native" />
        </id>
        <version name="version" unsaved-value="negative" />
		«EXPAND mapping      FOREACH this.getAllProperties()»
		«EXPAND mappingsTo   FOREACH this.associationsTo»
		«EXPAND mappingsFrom FOREACH this.associationsFrom.select(a | a.bidirectional)»

    </class>
</hibernate-mapping>
«ENDFILE»
«ENDDEFINE»

«DEFINE mapping FOR BusinessDomainDsl::Property»
    <property name="«this.name»" />
«ENDDEFINE»

«DEFINE mapping FOR EnumerationProperty»
    <property name="«this.name»">
        <type name="«getDataRootPackage()».GenericEnumUserType">
            <param name="enumClass">
                «getDomainRootPackage()».«this.type.name»
            </param>
        </type>
    </property>
«ENDDEFINE»

«DEFINE mapping FOR DateTimeProperty»
    <property name="«this.name»" 
              type="org.joda.time.contrib.hibernate.PersistentDateTime" />
«ENDDEFINE»

«REM»mapping for outgoing associations«ENDREM»
«DEFINE mappingsTo FOR Association»
    «IF isOne2Many(this)»
		«EXPAND one2manyMappingTo FOR this»
	«ELSEIF isOne2One(this)»
		«EXPAND one2oneMappingTo FOR this»
	«ELSEIF isMany2One(this)»
		«EXPAND many2oneMappingTo FOR this»
	«ELSEIF isMany2Many(this)»
		«EXPAND many2manyMappingTo FOR this»
    «ELSE»
	<!-- WARNING mappingsTo(Association) no generation for : «this.name» -->
    «ENDIF»
«ENDDEFINE»

«DEFINE mappingsFrom FOR Association»
	«IF this.bidirectional»
	    «IF isOne2Many(this)»
			«EXPAND one2manyMappingFrom FOR this»
		«ELSEIF isOne2One(this)»
			«EXPAND one2oneMappingFrom FOR this»
		«ELSEIF isMany2One(this)»
			«EXPAND many2oneMappingFrom FOR this»
		«ELSEIF isMany2Many(this)»
			«EXPAND many2manyMappingFrom FOR this»
	    «ELSE»
		<!-- WARNING mappingsFrom(Association) no generation for : «this.name» -->
	    «ENDIF»
	«ENDIF»

«ENDDEFINE»

«DEFINE one2manyMappingTo FOR Association»
		<!-- one2manyMappingTo -->
        <set name="«this.targetRoleName»" inverse="false" lazy="false"
            cascade="save-update">
            <key>
                <column name="«this.sourceRoleName»_ID" />
            </key>
            <one-to-many
                class="«getDomainRootPackage()».«javaClassName(this.target)»" 
             />
        </set>
«ENDDEFINE»

«REM»Reverse navigable association from the target.
     This is generat3ed in the target class.
«ENDREM»
«DEFINE one2manyMappingFrom FOR Association»
		<!-- one2manyMappingFrom -->
        <many-to-one name="«sourceRoleName»"
            class="«getDomainRootPackage()».«javaClassName(this.source)»"
            not-null="false" column="«this.sourceRoleName»_ID" />
«ENDDEFINE»

«DEFINE many2oneMappingTo FOR Association»
		<!-- many2oneMappingTo -->
        <many-to-one name="«targetRoleName»"
            class="«getDomainRootPackage()».«javaClassName(this.target)»" 
            not-null="false" column="«this.targetRoleName»_ID"
        />
«ENDDEFINE»

«REM»Reverse navigable association from the target.
     This is generat3ed in the target class.
«ENDREM»
«DEFINE many2oneMappingFrom FOR Association»
        <!-- many2oneMappingFrom -->
        <set name="«this.sourceRoleName»" inverse="false" lazy="false"
            cascade="save-update">
            <key>
                <column name="«this.targetRoleName»_ID" />
            </key>
            <one-to-many
                class="«getDomainRootPackage()».«javaClassName(this.source)»" 
             />
        </set>
«ENDDEFINE»

«DEFINE one2oneMappingTo FOR Association»
		<!-- one2oneMappingTo -->
        <one-to-one name="«targetRoleName»" 
                    class="«getDomainRootPackage()».«javaClassName(this.target)»"
         /> 
«ENDDEFINE»

«DEFINE one2oneMappingFrom FOR Association»
		<!-- one2oneMappingFrom -->
        <one-to-one name="«sourceRoleName»" 
                    class="«getDomainRootPackage()».«javaClassName(this.source)»"
         /> 
«ENDDEFINE»

«DEFINE many2manyMappingTo FOR Association»
		<!-- many2manyMappingTo  -->
<class name="events.Person" table="PERSON">
    <id name="id" column="PERSON_ID">
        <generator class="native"/>
    </id>
    <property name="age"/>
    <property name="firstname"/>
    <property name="lastname"/>

    <set name="events" table="PERSON_EVENT">
        <key column="PERSON_ID"/>
        <many-to-many column="EVENT_ID" class="events.Event"/>
    </set>
«ENDDEFINE»

«DEFINE many2manyMappingFrom FOR Association»
«REM»Add to Event.hbm  «ENDREM»
<!-- many2manyFrom -->
<set name="participants" table="PERSON_EVENT" inverse="true">
    <key column="EVENT_ID"/>
    <many-to-many column="PERSON_ID" class="events.Person"/>
</set>
«ENDDEFINE»

«DEFINE primitiveCollection FOR Association»
private Set emailAddresses = new HashSet(); /// type String

public Set getEmailAddresses() {
    return emailAddresses;
}

public void setEmailAddresses(Set emailAddresses) {
    this.emailAddresses = emailAddresses;
}

// The mapping of this Set:

<set name="emailAddresses" table="PERSON_EMAIL_ADDR">
    <key column="PERSON_ID"/>
    <element type="string" column="EMAIL_ADDR"/>
</set>
«ENDDEFINE»