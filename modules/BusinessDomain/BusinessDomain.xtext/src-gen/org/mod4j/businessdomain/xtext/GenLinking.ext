
extension org::mod4j::businessdomain::xtext::Extensions;
extension org::openarchitectureware::xtext::parser::LinkerUtils;

link(emf::EObject this) :
	let all = allLocalElements() :
		all.typeSelect(BusinessDomainDsl::Association).collect(e|e.link_source()) ->
		all.typeSelect(BusinessDomainDsl::Association).collect(e|e.link_target()) ->
		all.typeSelect(BusinessDomainDsl::BusinessClass).collect(e|e.link_superclass()) ->
		all.typeSelect(BusinessDomainDsl::UniqueRule).collect(e|e.link_properties()) ->
		all.typeSelect(BusinessDomainDsl::EnumerationProperty).collect(e|e.link_type()) ->
        null;




Void link_source(BusinessDomainDsl::Association this) :
	(let ents = this.allVisibleElements().typeSelect(BusinessDomainDsl::BusinessClass) :

		this.setSource(ents.select(e|e.id() == this.parsedString("source")).first())
);


Void link_target(BusinessDomainDsl::Association this) :
	(let ents = this.allVisibleElements().typeSelect(BusinessDomainDsl::AbstractBusinessClass) :

		this.setTarget(ents.select(e|e.id() == this.parsedString("target")).first())
);




Void link_superclass(BusinessDomainDsl::BusinessClass this) :
	(let ents = this.allVisibleElements().typeSelect(BusinessDomainDsl::BusinessClass) :

		this.setSuperclass(ents.select(e|e.id() == this.parsedString("superclass")).first())
);




Void link_properties(BusinessDomainDsl::UniqueRule this) :
	(let ents = this.allVisibleElements().typeSelect(BusinessDomainDsl::Property) :

		this.properties.addAll(
			this.parsed("properties").collect(f|
				ents.select(e|e.id() == f).first()
		).reject(e|e == null))
);




Void link_type(BusinessDomainDsl::EnumerationProperty this) :
	(let ents = this.allVisibleElements().typeSelect(BusinessDomainDsl::Enumeration) :

		this.setType(ents.select(e|e.id() == this.parsedString("type")).first())
);



