/* 
   This file contains the code to create a Crossx model from a BusinesDomainDsl model.
   Needed for crosssreference purposes.
*/
import crossx;
import PresentationDsl;


ServiceExpression getServiceExpression(Action call) :
  JAVA org.mod4j.dsl.presentation.mm.helpers.PresentationHelpers.getServiceExpression(org.mod4j.dsl.presentation.mm.PresentationDsl.Action);
  
NavigationExpression getNavigationExpression(Action call) :
  JAVA org.mod4j.dsl.presentation.mm.helpers.PresentationHelpers.getNavigationExpression(org.mod4j.dsl.presentation.mm.PresentationDsl.Action);
  
OperationExpression getOperationExpression(Action call) :
  JAVA org.mod4j.dsl.presentation.mm.helpers.PresentationHelpers.getOperationExpression(org.mod4j.dsl.presentation.mm.PresentationDsl.Action);
  
StandardExpression getStandardExpression(Action call) :
  JAVA org.mod4j.dsl.presentation.mm.helpers.PresentationHelpers.getStandardExpression(org.mod4j.dsl.presentation.mm.PresentationDsl.Action);
  
String getResultType(String model, String dto, NavigationExpression nav) :
    JAVA org.mod4j.dsl.presentation.mm.helpers.PresentationHelpers.getResultType(
      java.lang.String, java.lang.String, org.mod4j.dsl.presentation.mm.PresentationDsl.NavigationExpression);
  
String checkAction(Action a) :
    JAVA org.mod4j.dsl.presentation.mm.helpers.PresentationHelpers.checkAction(
      org.mod4j.dsl.presentation.mm.PresentationDsl.Action);
  
String serviceCallResultType(String contex, ServiceExpression exp):
    JAVA org.mod4j.dsl.presentation.mm.helpers.PresentationHelpers.serviceCallResultType(java.lang.String , 
                         org.mod4j.dsl.presentation.mm.PresentationDsl.ServiceExpression );

PresentationModel findModel(ModelElement elem) :
  JAVA org.mod4j.dsl.presentation.mm.helpers.PresentationHelpers.findModel(org.mod4j.dsl.presentation.mm.PresentationDsl.ModelElement);

String actionClass(Action a) :
    ( a.view != null ) ? 
    	 (a.view.name.toFirstUpper() + a.name.toFirstUpper())
    	:("MenuAction" + a.name.toFirstUpper())
    	 ;  
String actionClassImplBase(Action a) :
    actionClass(a) + "ImplBase";
    	 