«REM»
      Copyright (c) 2010 Ordina and committers to Mod4j
      All rights reserved. This program and the accompanying materials
      are made available under the terms of the Eclipse Public License v1.0
      which accompanies this distribution, and is available at
      http://www.eclipse.org/legal/epl-v10.html
     
      Contributors:
          Ordina - initial implementation
«ENDREM»
«IMPORT PresentationDsl»
«IMPORT org::mod4j::dsl::presentation::generator::xpand::maven»
«IMPORT org::mod4j::dsl::presentation::generator::xpand::panels»
«IMPORT org::mod4j::dsl::presentation::generator::xpand::application»
«IMPORT org::mod4j::dsl::presentation::generator::xpand::webapp»

«EXTENSION org::mod4j::dsl::presentation::mm::helpers::PresentationHelpers»
«EXTENSION org::mod4j::dslcommon::xtend::generatorutil»
«EXTENSION org::mod4j::common::xtend::FileTracker»
«EXTENSION org::mod4j::common::xtend::NameMapper»
«EXTENSION org::mod4j::dslcommon::xtend::ProjectProperties»

«DEFINE GenerateApplicationWide FOR PresentationModel»
    «print("MOD4J INFO: Running Presentation Wide generator on model [" + this.name + "]")»
    
    «REM»
        Generate all webapp folders and content
    «ENDREM»
    «EXPAND WebApp::AllWebAppContent FOR this»
    
    «REM»Generate application wide files«ENDREM»
	«FILE generate(getPresentationModuleName(""), javaPathFileName(getPresentationRootPackage() + "." + getWicketApplicationClass() ))»
	    «EXPAND Presentation::GenerateApplication FOR this»
	«ENDFILE»
	«FILE generate(getPresentationModuleName(""), javaPathFileName(getPresentationRootPackage() + "." + getWicketSesssionClass()))»
	    «EXPAND Presentation::GenerateSession FOR this»
	«ENDFILE»
	«FILE generate(getPresentationModuleName(""), getPresentationRootPackageAsPath() + "/" + getWicketApplicationClass() + ".properties")»
	    «EXPAND ContentFormProperties::ApplicationProperties FOR this»
	«ENDFILE»

	«FILE generate(getPresentationModuleName(""), javaPathFileName(getPresentationRootPackage() + "." + getWicketRequestCycleClass() ))»
	    «EXPAND Presentation::GenerateRequestCycle FOR this»
	«ENDFILE»
    «LET javaPathFileName(getPresentationRootPackage() + ".pages." + getWicketMasterPageClass() ) AS masterPageFilePath»
    «LET getPresentationRootPackageAsPath() + "/pages/" + getWicketMasterPageClass() + ".html" AS masterPageHtmlFilePath»
	«IF this.mainMenu != null»
		«FILE generate(getPresentationModuleName(""), masterPageFilePath) »
		    «EXPAND Presentation::GenerateMasterPage FOR this»
		«ENDFILE»
		«FILE generate(getPresentationModuleName(""), getPresentationRootPackageAsPath() + "/pages/" + getWicketMasterPageClass() + ".html")»
		    «EXPAND Presentation::GenerateMasterPageHtml FOR this»
		«ENDFILE»
    «ELSE»
        «FILE generate(getPresentationModuleName(""), javaPathFileName(getPresentationRootPackage() + ".pages." + "ServiceFacade"))»
            «EXPAND ServiceFacade::ServiceFacade FOR this»
        «ENDFILE»
        «IF ! fileExist(  fullGeneratePath(getPresentationModuleName(""),  masterPageFilePath) ) -»
        «print("NOT EXIST IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII : " + fullGeneratePath(getPresentationModuleName(""),  masterPageFilePath)  )»
            «FILE generate( getPresentationModuleName(""), masterPageFilePath)-»
                «EXPAND Presentation::GenerateMasterPage FOR this»
            «ENDFILE»
        «ENDIF» 
        «IF ! fileExist(  fullGenerateResourcePath(getPresentationModuleName(""),  masterPageHtmlFilePath) ) -»
        «print("NOT EXIST KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKK : " + fullGenerateResourcePath(getPresentationModuleName(""),  masterPageHtmlFilePath)  )»
            «FILE generate( getPresentationModuleName(""), masterPageHtmlFilePath)-»
                «EXPAND Presentation::GenerateMasterPageHtml FOR this»
            «ENDFILE»
        «ENDIF» 
    «ENDIF»
    «ENDLET»
    «ENDLET»
        
	«FILE generate(getPresentationModuleName(""), javaPathFileName(getPresentationRootPackage() + ".pages." + getWicketHomePageClass() ))»
	    «EXPAND Presentation::GenerateHomePage FOR this»
	«ENDFILE»
	«FILE generate(getPresentationModuleName(""), javaPathFileName(getPresentationRootPackage() + ".pages." + getWicketHomePageClass() + "Dummy" ))»
	    «EXPAND Presentation::GenerateDummyPage FOR this»
	«ENDFILE»
	«FILE generate(getPresentationModuleName(""), getPresentationRootPackageAsPath() + "/pages/" + getWicketHomePageClass() + ".html")»
	    «EXPAND Presentation::GenerateHomePageHtml FOR this»
	«ENDFILE»
	«FILE generate(getPresentationModuleName(""), getPresentationRootPackageAsPath() + "/pages/" + getWicketHomePageClass() + "Dummy" + ".html")»
	    «EXPAND Presentation::GenerateDummyPageHtml FOR this»
	«ENDFILE»

	«FILE generate(getPresentationModuleName(""), javaPathFileName(getPresentationRootPackage() + ".panels." + getWicketHtmlPanelClass() ))»
	    «EXPAND Presentation::GenerateHtmlPanel FOR this»
	«ENDFILE»
	«FILE generate(getPresentationModuleName(""), getPresentationRootPackageAsPath() + "/panels/" + getWicketHtmlPanelClass() + ".html")»
	    «EXPAND Presentation::GenerateHtmlPanelHtml FOR this»
	«ENDFILE»

	«REM»expection pages«ENDREM»    
	«FILE generate(getPresentationModuleName(""), javaPathFileName(getPresentationRootPackage() + ".pages.exceptions." + getWicketPageNotFoundPageClass() ))»
	    «EXPAND Exceptions::GeneratePageNotFoundPage FOR this»
	«ENDFILE»
	«FILE generate(getPresentationModuleName(""), getPresentationRootPackageAsPath() + "/pages/exceptions/" + getWicketPageNotFoundPageClass() + ".html")»
	    «EXPAND Exceptions::GeneratePageNotFoundPageHtml FOR this»
	«ENDFILE»
	«FILE generate(getPresentationModuleName(""), javaPathFileName(getPresentationRootPackage() + ".pages.exceptions." + getWicketExceptionPageClass() ))»
	    «EXPAND Exceptions::GenerateExceptionPage FOR this»
	«ENDFILE»
	«FILE generate(getPresentationModuleName(""), getPresentationRootPackageAsPath() + "/pages/exceptions/" + getWicketExceptionPageClass() + ".html")»
	    «EXPAND Exceptions::GenerateExceptionPageHtml FOR this»
	«ENDFILE»
    
«ENDDEFINE»