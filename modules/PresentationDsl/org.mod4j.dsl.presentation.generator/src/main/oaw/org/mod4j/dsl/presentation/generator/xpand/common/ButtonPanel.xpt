«REM»
      Copyright (c) 2009 Ordina and committers to Mod4j
      All rights reserved. This program and the accompanying materials
      are made available under the terms of the Eclipse Public License v1.0
      which accompanies this distribution, and is available at
      http://www.eclipse.org/legal/epl-v10.html
     
      Contributors:
          Ordina - initial implementation
«ENDREM»
«IMPORT PresentationDsl»
«IMPORT org::mod4j::dsl::presentation::generator::xpand::maven»
«IMPORT org::mod4j::dsl::presentation::generator::xpand::panels»

«EXTENSION org::mod4j::dslcommon::xtend::generatorutil»
«EXTENSION org::mod4j::common::xtend::FileTracker»
«EXTENSION org::mod4j::common::xtend::NameMapper»
«EXTENSION org::mod4j::dslcommon::xtend::ProjectProperties»

«DEFINE ButtonPanel FOR PresentationModel»
package «getPresentationCommonPackage()».ext.components;

import org.apache.wicket.MarkupContainer;
import org.apache.wicket.ajax.AjaxRequestTarget;
import org.apache.wicket.ajax.markup.html.form.AjaxFallbackButton;
import org.apache.wicket.markup.IMarkupResourceStreamProvider;
import org.apache.wicket.markup.html.form.Form;
import org.apache.wicket.markup.html.panel.Panel;
import org.apache.wicket.model.IModel;
import org.apache.wicket.util.resource.IResourceStream;
import org.apache.wicket.util.resource.StringResourceStream;

@SuppressWarnings("serial")
public abstract class ButtonPanel<T> extends Panel implements IMarkupResourceStreamProvider {

    IModel<String> displayModel;
    
    public ButtonPanel(String id, final IModel<String> displayModel, final Form<Object> form) {
        
        super(id, displayModel);
        this.displayModel = displayModel;
        
        add(new AjaxFallbackButton("button", form) {
            @Override
            protected void onSubmit(AjaxRequestTarget target, Form<?> form) {
                ButtonPanel.this.onSubmit(target, form);
            }
        });
    }
    
    public abstract void onSubmit(AjaxRequestTarget target, Form<?> form);

    public IResourceStream getMarkupResourceStream(MarkupContainer container, Class<?> containerClass) {
        return new StringResourceStream("<wicket:panel><input wicket:id=\"button\" type=\"button\" value=\""
                + displayModel.getObject() + "\"/></wicket:panel>");
    }
}
«ENDDEFINE»