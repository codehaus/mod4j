/* 
   This file contains the code to create a Crossx model from a BusinesDomainDsl model.
   Needed for crosssreference purposes.
*/
import crossx;
import PresentationDsl;

extension org::mod4j::crossx::broker::xtend::Crossx;
extension org::mod4j::dslcommon::xtend::generatorutil;

// Complete the model such that all higher level constructs and all implicit definitions are added.
completeModel(PresentationModel pmfModel) :
    let formElements = pmfModel.elements.typeSelect(ContentForm).formElements :    
    let contentForms = pmfModel.elements.typeSelect(ContentForm):

    formElements.addDataProperty()
    -> contentForms.convertActions()
	-> pmfModel.elements.typeSelect(Process).fillLabel()
	
	;
	
DataProperty addDataProperty(FormElement element) :
    let dtoSymbol = lookupSymbol(element.form.contextRef.modelName, element.form.contextRef.name, "Dto") :
    let symbol = dtoSymbol.subSymbols.select(s|s.type.matches("DataProperty")).select(sym | sym.name.equalsIgnoreCase(element.references.name)).first() :
    element.setDataProperty(newDataProperty(symbol))
;

/**
 * Create a new DtoProperty for 'ref''
 * 'symbols' is the list of Symbols from Crossx containing the "Property" definitions
 */
    
PresentationDsl::DataProperty newDataProperty(Symbol symbol) :
    let result = new DataProperty :
    let dataType = symbol.getPropertyValue("DataType") :
    let owner = (Symbol)(symbol.eContainer) :
    let ref = lookupSymbol(owner.owner.modelname, dataType, "EnumerationDto") :
    result.setName(symbol.name)->
    result.setDataType(dataType)->
    result.setIsEnumeration(ref != null)->
    result;

fillLabel(Process p) :
    (   (p.label == null) || (p.label == "")
      ? (p.setLabel(p.name))
      : null
    )
;
Boolean convertActions(ContentForm form) :
    form.actions.createProcess(form)
;

Boolean createProcess(SimpleProcess action, ContentForm form) :
    let tmp = (action.dialogueProcess == null ? 
                   (action.process != null ? action.process : new AutomatedProcess) :
                    action.dialogueProcess):
    let result = (Process) tmp :
//    let dialogue = new DialogueCall :
    let name = form.name + action.name.toFirstUpper() + "Action" :
    let processCall = new ProcessCall :
//    dialogue.setName(action.dialogue.name)->
    result.setName(name)->
    result.setLabel(action.name)->
    result.setContextRef(form.contextRef)->
//    ((action.dialogue != null) ? result.processElements.add(dialogue) : null)->
    result.setType(action.type)->
    processCall.setName(name)->
    form.processes.add(processCall)->
    print("MOD4J CompletePMF: adding process [" + result.name + "]")->
    form.presentationModel.elements.add(result)->
    action.setProcess(null)->
    action.setDialogueProcess(null)
    ;
