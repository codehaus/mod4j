«IMPORT PresentationDsl»
«IMPORT org::mod4j::dslcommon::xpand::java»
«IMPORT org::mod4j::dslcommon::xpand::xml»

«EXTENSION org::mod4j::dsl::presentation::mm::helpers::PresentationHelpers»
«EXTENSION org::mod4j::dslcommon::xtend::generatorutil»
«EXTENSION org::mod4j::common::xtend::NameMapper»
«EXTENSION org::mod4j::dslcommon::xtend::ProjectProperties»

«DEFINE ModelDataProvider FOR PresentationModel»
    «EXPAND JavaComments::regenerationWarningHeader ("Mod4j PresentationDsl generator: ModelDataProvider.xpt") FOR this»
package «getPresentationRootPackage()».dataproviders;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Set;

import org.apache.wicket.markup.repeater.data.IDataProvider;
import org.apache.wicket.model.IModel;
import org.apache.wicket.model.Model;

@SuppressWarnings("serial")
public class ModelDataProvider<T> implements IDataProvider<T> {

	private IModel<T> list;

	public void setList(IModel<T> list) {
		this.list = list;
	}

	public ModelDataProvider(IModel<T> list) {
		this.list = list;
	}

	@SuppressWarnings("unchecked")
	public Iterator iterator(final int first, final int count)
	{
		int toIndex = first + count;

		if (toIndex > size()) {
			toIndex = size();
		}
		return getList().subList(first, toIndex).listIterator();
	}

	public int size(){
		return getList().size();
	}

	public IModel model(Object object)
	{
		return new Model((Serializable) object);
	}

	public void detach(){
	}

	@SuppressWarnings("unchecked")
	public List getList() {
		List result = new ArrayList<T>((Set<T>)(list.getObject()));
		return result;
	}
}
«ENDDEFINE»