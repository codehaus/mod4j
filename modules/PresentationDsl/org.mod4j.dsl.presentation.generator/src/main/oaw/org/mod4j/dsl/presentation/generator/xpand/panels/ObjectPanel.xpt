«IMPORT PresentationDsl»
«IMPORT org::mod4j::dslcommon::xpand::java»

«EXTENSION org::mod4j::dslcommon::xtend::generatorutil»
«EXTENSION org::mod4j::dslcommon::xtend::ProjectProperties»
«EXTENSION org::mod4j::common::xtend::NameMapper»
«EXTENSION  org::mod4j::dsl::presentation::mm::helpers::PresentationHelpers»

«DEFINE GenerateObjectPanel FOR ContentForm -»
    «EXPAND JavaComments::regenerationWarningHeader ("Mod4j PresentationDsl generator: Objectpanel.xpt") FOR this»
«LET this.processes.referredProcess().select(p|p.type == ProcessType::CUSTOM) AS customProcesses»
package «getPresentationRootPackage()».panels;

import «getPresentationRootPackage()».pages.«getWicketMasterPageClass()»;
import «javaDtoClassPath(this.contextRef.name)»;
import java.util.ArrayList;
import java.util.List;

import org.apache.wicket.markup.html.form.Button;
import org.apache.wicket.markup.html.basic.Label;
import org.apache.wicket.markup.html.link.Link;
import org.apache.wicket.markup.html.list.ListItem;
import org.apache.wicket.markup.html.list.ListView;
import org.apache.wicket.markup.html.panel.Panel;
import org.apache.wicket.model.CompoundPropertyModel;
import org.apache.wicket.model.Model;
import org.apache.wicket.model.IModel;
import org.apache.wicket.model.PropertyModel;

«FOREACH this.formElements.dataProperty AS dp»
	«IF dp.isEnumeration»
	import «javaDtoClassPath(dp.dataType)»;
	«ENDIF»
«ENDFOREACH»

@SuppressWarnings("serial")
public class «this.name»Panel extends Panel {

	public «this.name»Panel(String id, final IModel<«this.contextRef.name»> model) {
        super(id);
    «EXPAND addWicketComponent FOREACH this.formElements»
        add(new Link<Object>("edit") {
        @Override
        public void onClick() {
            // TODO Genereate Edit code
        }
    });    
        
 «IF (customProcesses != null) && (!customProcesses.isEmpty)»
     «FOREACH customProcesses AS p»
		add(new Link<Object>("«p.name»custom") {
			@Override
			public void onClick() {
			// TODO GEnerate process start
//					page().startProcess("«p.name»Process", model.getObject());
			}
		});
    «ENDFOREACH»
«ENDIF»
        
    }

    protected «getWicketMasterPageClass()» page() {
        return («getWicketMasterPageClass()»)findPage();
    }

}
«ENDLET»
«ENDDEFINE»

«DEFINE addWicketComponent FOR FormElement»

    «IF this.dataProperty.dataType == "string"»
        add(new Label("«this.dataProperty.name»", new PropertyModel<String>(model, "«this.dataProperty.name»")));
    «ELSEIF this.dataProperty.dataType == "boolean"»
        add(new Label("«this.dataProperty.name»", new PropertyModel<Boolean>(model, "«this.dataProperty.name»")));
    «ELSEIF this.dataProperty.dataType == "integer"»
        add(new Label("«this.dataProperty.name»", new PropertyModel<Integer>(model, "«this.dataProperty.name»")));
    «ELSEIF this.dataProperty.dataType == "decimal"»
        add(new Label("«this.dataProperty.name»", new PropertyModel<Float>(model, "«this.dataProperty.name»")));
	«ELSEIF this.dataProperty.isEnumeration»
        add(new Label("«this.dataProperty.name»", new PropertyModel<«this.dataProperty.dataType»>(model, "«this.dataProperty.name»")));
	«ELSE»
		// No code generated for form element «this.dataProperty.name» as «this.label» with type «this.dataProperty.dataType»
    «ENDIF»
«ENDDEFINE»