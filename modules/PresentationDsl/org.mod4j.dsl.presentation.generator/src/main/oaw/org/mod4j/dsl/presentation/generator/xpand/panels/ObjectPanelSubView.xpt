«REM»
 Copyright (c) 2010 Ordina and committers to Mod4j
 All rights reserved. This program and the accompanying materials
 are made available under the terms of the Eclipse Public License v1.0
 which accompanies this distribution, and is available at
 http://www.eclipse.org/legal/epl-v10.html
  Contributors:
     Ordina - initial implementation
«ENDREM»
«IMPORT PresentationDsl»
«IMPORT org::mod4j::dslcommon::xpand::java»

«EXTENSION org::mod4j::dsl::presentation::generator::xtend::helpers»
«EXTENSION org::mod4j::dslcommon::xtend::generatorutil»
«EXTENSION org::mod4j::dslcommon::xtend::ProjectProperties»
«EXTENSION org::mod4j::common::xtend::NameMapper»
«EXTENSION org::mod4j::dsl::presentation::mm::helpers::PresentationHelpers»
 
«DEFINE GenerateObjectPanelSubView FOR View -»
«EXPAND JavaComments::regenerationWarningHeader ("Mod4j PresentationDsl generator: ObjectPanelSubView.xpt") FOR this»
«LET this.name.toFirstUpper() AS className»
package «getPresentationRootPackage()».panels;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

«FOREACH this.actions AS p»
import «getPresentationRootPackage()».actions.«p.actionClass()»;
«ENDFOREACH»

import «getPresentationRootPackage()».pages.«getWicketMasterPageClass()»;
import «getPresentationCommonPackage()».ext.components.AjaxEditableLabel;
import «getPresentationCommonPackage()».ext.components.AjaxIndicator;
import «getPresentationCommonPackage()».ext.components.AjaxUpdatingBehaviour;
import «getPresentationCommonPackage()».ext.components.ComponentsFeedbackMessageFilter;
import «getPresentationCommonPackage()».ext.components.FieldFeedbackPanel;
import «getPresentationCommonPackage()».ext.components.FormFeedbackPanel;
import «getPresentationCommonPackage()».ext.components.ConfirmAjaxButton;
import «getPresentationCommonPackage()».ext.components.IndicatingAjaxButton;
import «getPresentationCommonPackage()».ext.components.ModalWindow;
import «getPresentationCommonPackage()».ext.components.JodaModel;

import org.joda.time.DateTime;
import org.apache.wicket.extensions.yui.calendar.DateTimeField;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.apache.wicket.ajax.AjaxRequestTarget;
import org.apache.wicket.ajax.markup.html.form.AjaxCheckBox;
import org.apache.wicket.ajax.markup.html.form.AjaxFallbackButton;
import org.apache.wicket.behavior.SimpleAttributeModifier;
import org.apache.wicket.feedback.ComponentFeedbackMessageFilter;
import org.apache.wicket.markup.html.basic.Label;
import org.apache.wicket.markup.html.form.Button;
import org.apache.wicket.markup.html.form.DropDownChoice;
import org.apache.wicket.markup.html.form.Form;
import org.apache.wicket.markup.html.form.IChoiceRenderer;
import org.apache.wicket.markup.html.form.TextField;
import org.apache.wicket.markup.html.list.ListItem;
import org.apache.wicket.markup.html.list.ListView;
import org.apache.wicket.markup.html.panel.Panel;
import org.apache.wicket.markup.html.panel.FeedbackPanel;
import org.apache.wicket.model.CompoundPropertyModel;
import org.apache.wicket.model.IModel;
import org.apache.wicket.model.PropertyModel;
import org.apache.wicket.model.Model;
import org.apache.wicket.model.ResourceModel;
import org.apache.wicket.spring.injection.annot.SpringBean;
import org.apache.wicket.validation.validator.PatternValidator;
import org.apache.wicket.validation.validator.RangeValidator;
import org.apache.wicket.markup.html.form.CheckBox;
import org.apache.wicket.datetime.StyleDateConverter;

import org.springframework.validation.Errors;
import org.springframework.validation.FieldError;
import org.springframework.validation.ObjectError;
import org.mod4j.runtime.exception.BusinessRuleException;


import «javaDtoClassPath(this.contextRef.name)»;

«FOREACH this.baseView.formElements.dataProperty AS dp»
	«IF dp.isEnumeration»
	import «javaDtoClassPath(dp.dataType)»;
	«ENDIF»
«ENDFOREACH»

/**
 * A reusable panel that allows the user to edit an object.
 * The object may be an existing one or a new one.
 */
@SuppressWarnings("serial")
public class «className» extends «this.baseView.name.toFirstUpper()» {
	private Log log = LogFactory.getLog(getClass());

	protected «getWicketMasterPageClass()» page() {
	    return («getWicketMasterPageClass()»)findPage();
	}
	
    public «className»(String id, final IModel<«this.contextRef.name»> model) {
        super(id, model);
        boolean isNew = (model.getObject() != null)
        				&& ((model.getObject()).getId() == null);
    
    «EXPAND ObjectPanelView::addActions(className) FOR this»
    }     
}
«ENDLET»
«ENDDEFINE»
