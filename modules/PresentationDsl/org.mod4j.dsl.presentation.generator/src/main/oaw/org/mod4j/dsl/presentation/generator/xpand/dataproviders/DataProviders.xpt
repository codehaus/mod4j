«REM»
      Copyright (c) 2009 Ordina and committers to Mod4j
      All rights reserved. This program and the accompanying materials
      are made available under the terms of the Eclipse Public License v1.0
      which accompanies this distribution, and is available at
      http://www.eclipse.org/legal/epl-v10.html
     
      Contributors:
          Ordina - initial implementation
«ENDREM»
«IMPORT PresentationDsl»
«IMPORT org::mod4j::dsl::presentation::generator::xpand::maven»
«IMPORT org::mod4j::dsl::presentation::generator::xpand::panels»
«IMPORT org::mod4j::dsl::presentation::generator::xpand::webapp»
«IMPORT org::mod4j::dsl::presentation::generator::xpand::process»

«EXTENSION org::mod4j::dsl::presentation::mm::helpers::PresentationHelpers»
«EXTENSION org::mod4j::dslcommon::xtend::generatorutil»
«EXTENSION org::mod4j::common::xtend::FileTracker»
«EXTENSION org::mod4j::common::xtend::NameMapper»
«EXTENSION org::mod4j::dslcommon::xtend::ProjectProperties»

«DEFINE GenerateDataProviders FOR PresentationModel»
    «print("MOD4J INFO: Running data providers generator on model [" + this.name + "]")»
    
    «FILE generate(getPresentationModuleName(""), javaPathFileName(getPresentationRootPackage() + ".dataproviders." + "Mod4jDataProvider"))»
	    «EXPAND Mod4jDataProvider::Mod4jDataProvider FOR this»
	«ENDFILE»
    «FILE generate(getPresentationModuleName(""), javaPathFileName(getPresentationRootPackage() + ".dataproviders." + "ModelDataProvider"))»
        «EXPAND ModelDataProvider::ModelDataProvider FOR this»
    «ENDFILE»
    «FILE generate(getPresentationModuleName(""), javaPathFileName(getPresentationRootPackage() + ".dataproviders." + "PmfListDataProvider"))»
        «EXPAND PmfListDataProvider::PmfListDataProvider FOR this»
    «ENDFILE»

	«REM»The page containing the Dialogue referred to in the process«ENDREM»
    «print("MOD4J INFO: Running Presentation generator process pages")»
	«FOREACH this.elements.typeSelect(Process).select(e|e.isInteractive()) AS process»
«REM»        «LET process.processElements.typeSelect(DialogueCall).first() AS uiCall»«ENDREM»
        «FOREACH process.processElements.typeSelect(DialogueCall) AS uiCall»
        «LET uiCall.referredContentForm() AS form »
		«IF form != null»
			«IF form.collectionContext »
				«IF uiCall.getNavigationExpression() != null »
			    	«print("Navigation data provider generated for process [" + process.name + "] form [" + form.name + "]")»
«REM»
                    «IF uiCall.getNavigationExpression().composition»
						«FILE generate(getPresentationModuleName(""), javaPathFileName(getPresentationRootPackage() + ".dataproviders." + 
						                       	getWicketCompositeDataProviderClass(process.contextRef.name , form.contextRef.name )) )»
				    	    «EXPAND CompositeDataProvider::CompositeDataProvider FOR uiCall»
						«ENDFILE»
					«ELSE»
                        «FILE generate(getPresentationModuleName(""), javaPathFileName(getPresentationRootPackage() + ".dataproviders." + 
                                                getWicketReferenceDataProviderClass(process.contextRef.name , form.contextRef.name )) )»
                            «EXPAND ReferenceDataProvider::ReferenceDataProvider FOR uiCall»
                        «ENDFILE»
					«ENDIF»
«ENDREM»
				«ELSEIF uiCall.getServiceExpression() != null»
			    	«print("01 Service data provider generated for process [" + process.name + "] form [" + form.name + "]")»
					«FILE generate(getPresentationModuleName(""), javaPathFileName(getPresentationRootPackage() + ".dataproviders." 
					                                                    + getWicketServiceDataProviderClass(form.contextRef.name) ))»
                        «EXPAND DtoServiceDataProvider::ServiceDataProvider(process.contextRef.name) FOR uiCall.getServiceExpression()»
					«ENDFILE»
				«ELSEIF uiCall.getStandardExpression() != null»
				    «IF uiCall.getStandardExpression().type == ExpressionType::ALL»
						«print("02 Generating advanced data provider for process [" + process.name + "] form [" + form.name + "]")»
                        «FILE generate(getPresentationModuleName(""), javaPathFileName(getPresentationRootPackage() + ".dataproviders." 
                                                                            + getWicketDataProviderClass(form.contextRef.name) ))»
                            «EXPAND DtoDataProvider::generateDataProvider FOR uiCall»
                        «ENDFILE»						
					«ELSEIF uiCall.getStandardExpression().type == ExpressionType::FIND »
				    	«print("03 Finder Service data provider generated for process [" + process.name + "] form [" + form.name + "]")»
						«FILE generate(getPresentationModuleName(""), javaPathFileName(getPresentationRootPackage() + ".dataproviders." 
						                                                    + getWicketFinderDataProviderClass(form.contextRef.name) ))»
				    	    «EXPAND FinderDataProvider::FinderDataProvider FOR uiCall»
						«ENDFILE»
					«ENDIF»
				«ELSE»
«REM»                    «EXPAND DtoListAllDataProvider::ListAllDataProvider FOR uiCall»«ENDREM»
				«ENDIF»
			«ENDIF»
		«ELSE»
		    «print("No dataprovider generated for process [" + process.name + "] form [" + form.name + "]")»
        «ENDIF»
		«ENDLET»
    «ENDFOREACH»
	«ENDFOREACH»
    
«ENDDEFINE»