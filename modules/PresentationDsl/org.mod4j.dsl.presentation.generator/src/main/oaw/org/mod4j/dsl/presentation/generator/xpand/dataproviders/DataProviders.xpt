«REM»
      Copyright (c) 2009 Ordina and committers to Mod4j
      All rights reserved. This program and the accompanying materials
      are made available under the terms of the Eclipse Public License v1.0
      which accompanies this distribution, and is available at
      http://www.eclipse.org/legal/epl-v10.html
     
      Contributors:
          Ordina - initial implementation
«ENDREM»
«IMPORT PresentationDsl»
«IMPORT org::mod4j::dsl::presentation::generator::xpand::maven»
«IMPORT org::mod4j::dsl::presentation::generator::xpand::panels»
«IMPORT org::mod4j::dsl::presentation::generator::xpand::webapp»
«IMPORT org::mod4j::dsl::presentation::generator::xpand::process»

«EXTENSION org::mod4j::dsl::presentation::mm::helpers::PresentationHelpers»
«EXTENSION org::mod4j::dslcommon::xtend::generatorutil»
«EXTENSION org::mod4j::common::xtend::FileTracker»
«EXTENSION org::mod4j::common::xtend::NameMapper»
«EXTENSION org::mod4j::dslcommon::xtend::ProjectProperties»

«DEFINE GenerateDataProviders FOR PresentationModel»
    «print("MOD4J INFO: Running data providers generator on model [" + this.name + "]")»
    
    «FILE generate(getPresentationModuleName(""), javaPathFileName(getPresentationRootPackage() + ".dataproviders." + "Mod4jDataProvider"))»
	    «EXPAND Mod4jDataProvider::Mod4jDataProvider FOR this»
	«ENDFILE»
    «FILE generate(getPresentationModuleName(""), javaPathFileName(getPresentationRootPackage() + ".dataproviders." + "ModelDataProvider"))»
        «EXPAND ModelDataProvider::ModelDataProvider FOR this»
    «ENDFILE»

	«REM»The page containing the Dialogue referred to in the process«ENDREM»
    «print("MOD4J INFO: Running Presentation generator action dataproviders")»
	«FOREACH this.elements.typeSelect(View).actions.union(this.mainMenu.startActions) AS action»
	    «print("action [" + action.name + "]")»
		«IF action.nextPage != null»
	    	«print("action.Nextpage != null")»
			«IF action.nextPage.collectionContext »
	    		«print("action. is collection")»
				«IF action.getNavigationExpression() != null »
			    	«print("Navigation data provider generated for action [" + action.name + "] view [" + action.view.name + "]")»
				«ELSEIF action.getServiceExpression() != null»
			    	«print("01 Service data provider generated for action [" + action.name + "] view [" + action.view.name + "]")»
					«FILE generate(getPresentationModuleName(""), javaPathFileName(getPresentationRootPackage() + ".dataproviders." 
					                                                    + getWicketServiceDataProviderClass(action.getServiceExpression().service.name) ))»
                        «EXPAND DtoServiceDataProvider::ServiceDataProvider(action.contextRef.name) FOR action.getServiceExpression()»
					«ENDFILE»
				«ELSEIF action.getStandardExpression() != null»
		    		«print("action has stabndard expression")»
				    «IF action.getStandardExpression().type == ExpressionType::ALL || action.getStandardExpression().type == ExpressionType::FIND»
						«print("02 Generating advanced data provider for action [" + action.name + "] nextPage [" + action.nextPage.name + "]")»
                        «FILE generate(getPresentationModuleName(""), javaPathFileName(getPresentationRootPackage() + ".dataproviders." 
                                                                            + getWicketDataProviderClass(action.nextPage.contextRef.name) ))»
                            «EXPAND DtoDataProvider::generateDataProvider FOR action»
                        «ENDFILE»						
				    «ELSE»
«REM»                    «EXPAND DtoDataProvider::generateDataProvider FOR uiCall»«ENDREM»
				    «ENDIF»
				«ELSE»
		    		«print("action HAS NO EXPRESSION")»
			    «ENDIF»
		    «ELSE»
		        «print("No dataprovider generated for process [" + action.name + "] nextPage [" + action.nextPage.name + "]")»
            «ENDIF»
        «ENDIF»
	«ENDFOREACH»
    
«ENDDEFINE»