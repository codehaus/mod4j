«REM»
 Copyright (c) 2010 Ordina and committers to Mod4j
 All rights reserved. This program and the accompanying materials
 are made available under the terms of the Eclipse Public License v1.0
 which accompanies this distribution, and is available at
 http://www.eclipse.org/legal/epl-v10.html
  Contributors:
     Ordina - initial implementation
«ENDREM»
«IMPORT PresentationDsl»
«IMPORT org::mod4j::dslcommon::xpand::java»

«EXTENSION org::mod4j::common::xtend::NameMapper»
«EXTENSION org::mod4j::dsl::presentation::generator::xtend::helpers»
«EXTENSION org::mod4j::dsl::presentation::mm::helpers::PresentationHelpers»
«EXTENSION org::mod4j::dsl::presentation::generator::xtend::helpers»
«EXTENSION org::mod4j::dslcommon::xtend::generatorutil»
«EXTENSION org::mod4j::dslcommon::xtend::ProjectProperties»
«EXTENSION org::mod4j::common::xtend::FileTracker»

«DEFINE ProcessType FOR PresentationModel -»
    «EXPAND JavaComments::extensionPointHeader ("Mod4j PresentationDsl generator: ProcessType.xpt") FOR this»
package «getPresentationCommonPackage()».processes;

import java.util.List;
import java.util.ArrayList;
import java.util.Collection;
import java.util.EnumSet;
import java.util.HashMap;
import java.util.Map;

/**
 * 
 *
 */
public enum ProcessType {

    NONE(0), CUSTOM(1), NEW(2), SAVE(3), EDIT(4), CANCEL(5), ADDTO(6), REMOVEFROM(7), DELETE(8), LINK(9), PREVIOUS(10);

    private static final Map<Integer, ProcessType> lookup = new HashMap<Integer, ProcessType>();
    static {
        for (ProcessType s : EnumSet.allOf(ProcessType.class))
            lookup.put(s.id(), s);
    }

    private Integer id;

    private ProcessType(Integer id) {
        this.id = id;
    }

    public Integer id() {
        return id;
    }

    public static ProcessType value(Integer id) {
        return lookup.get(id);
    }
    
    public static Collection<ProcessType> all() {
        List<ProcessType> all = new ArrayList<ProcessType>();
        all.addAll(lookup.values());
        return all;
    }
}
«ENDDEFINE»

