«REM»
      Copyright (c) 2009 Ordina and committers to Mod4j
      All rights reserved. This program and the accompanying materials
      are made available under the terms of the Eclipse Public License v1.0
      which accompanies this distribution, and is available at
      http://www.eclipse.org/legal/epl-v10.html
     
      Contributors:
          Ordina - initial implementation
«ENDREM»
«IMPORT PresentationDsl»
«IMPORT org::mod4j::dsl::presentation::generator::xpand::maven»
«IMPORT org::mod4j::dsl::presentation::generator::xpand::panels»

«EXTENSION org::mod4j::dslcommon::xtend::generatorutil»
«EXTENSION org::mod4j::common::xtend::FileTracker»
«EXTENSION org::mod4j::common::xtend::NameMapper»
«EXTENSION org::mod4j::dslcommon::xtend::ProjectProperties»

«DEFINE GenerateListElementModel FOR PresentationModel»
package «getPresentationCommonPackage()».ext.components;

import java.util.Collection;

import org.apache.wicket.model.IChainingModel;
import org.apache.wicket.model.IModel;
import org.apache.wicket.model.PropertyModel;

public class ListElementModel<T> implements IModel<T>, IChainingModel<T>{

    protected String field ;
    protected long id;
    protected Object value;
    protected IModel listModel;
    
    public ListElementModel(String field, Object value, IModel listModel){
        this.value = value; 
        this.field = field;
        this.listModel = listModel;
        chainedModel = listModel;
    }
    
	public void replace(T newObject, Object newValue){
		T found = null;
		Collection<T> tmp = (Collection<T>) (listModel.getObject());
		for (Object object : tmp) {
			PropertyModel tmpModel = new PropertyModel(object, field);
			Object tmpObject = tmpModel.getObject();
			if (tmpObject == null) {
				if (value == null) {
					found = (T) object;
				}
			} else if (tmpModel.getObject().equals(value)) {
				found = (T) object;
			}
		}
		if( found != null ){
			tmp.remove(found);
			tmp.add(newObject);
			value = newValue;
		}
	}

    public T getObject() {
        Collection<T> tmp = (Collection<T>) (listModel.getObject());
        for (Object object : tmp) {
            PropertyModel tmpModel = new PropertyModel(object, field);
            Object tmpObject = tmpModel.getObject();
            if( tmpObject == null) {
                if( value == null) {
                    return (T)object;
                }
            } else if ( tmpModel.getObject().equals(value) ) {
                return (T)object;
            }
        }
        return null;
    }

    public void setObject(T object) {
        // TODO Auto-generated method stub
        
    }

    public void detach() {
        // TODO Auto-generated method stub
        
    }

    protected IModel chainedModel;
    
    public IModel<?> getChainedModel() {
        return chainedModel;
    }

    public void setChainedModel(IModel<?> model) {
        chainedModel = model;
    }
}

«ENDDEFINE»