grammar org.mod4j.dsl.presentation.xtext.Presentation with org.eclipse.xtext.common.Terminals

import "platform:/resource/org.mod4j.dsl.presentation.mm/model/PresentationDsl.ecore"

//IMPORTANT: You should change the property 'overwrite.pluginresources=true' in the properties file to 'overwrite.pluginresources=false' AFTER first generation

PresentationModel :
	(description=STRING )?
	"presentation" name = ID ";"
	(externalReferences += ExternalReference)*
	(elements += ModelElementWithContext)*
	;

ExternalReference :
    "from" modelName = ID "import" name = ID ";"
	;
	
ModelElementWithContext :
	UIModelElement //| Link
	;
	
UIModelElement :
	Dialogue | Process
	;
		
Dialogue :
	ContentForm | CompoundDialogue
	;
	
ContentForm :
	(description=STRING )?
	( (isCollection?="ListForm") |
	  "ContentForm"
	)
	
	 name = ID "context" contextRef = [ExternalReference]
	"["
		("readonly" ((readonly?="true") | "false") ";")?
		(formElements += FormElement)*
		("actions" "[" (actions += SimpleProcess ";" )* "]" )?
		("processes" "[" (processes += ProcessCall ";")* "]" )?
	"]"
	;

SimpleProcess  returns Process:
	(description=STRING )? 
    name=ID (type=ProcessType)?
	("use" processElements += DialogueCall ) ?
    ;
  	
enum ProcessType :
    NEW = "new" | SAVE = "save" | EDIT = "edit" | REMOVE = "remove" | CANCEL = "Cancel"
;

CompoundDialogue :
	(description=STRING )?
	"CompoundDialogue" name = ID "context" contextRef = [ExternalReference]
	("readonly" ((readonly?="true") | "false") ";")?
	
		("dialogues" "[" (dialogues += DialogueCall ";")* "]" )?
		("processes" "[" (processes += ProcessCall ";")* "]" )?  
		| CollectionDialogue
		| MasterDetail
	
	;
		
CollectionDialogue :
	(description=STRING )?
	"CollectionDialogue" name = ID "context" contextRef = [ExternalReference]
	"["
		("readonly" ((readonly?="true") | "false") ";")?
		("dialogues" "[" (dialogues += DialogueCall ";")* "]" )?
		("processes" "[" (processes += ProcessCall ";")* "]" )?
	"]"
	;
	
MasterDetail :
	(description=STRING )?
	"MasterDetail" name = ID "context" contextRef = [ExternalReference]
	("readonly" ((readonly?="true") | "false") ";")?
	"master" master = DialogueCall ";"
	"detail" detail = DialogueCall ";"
	("processes" "[" (processes += ProcessCall ";")* "]" )?
	;

Process :
	(description=STRING )?
	"Process" name = ID "context" contextRef = [ExternalReference]
	(root ?= "start")?
	(type=ProcessType)?
	("step" "[" (processElements += DialogueCall ";") "]")?
//	("steps" "[" (processElements += UICall ";")* "]")?
	;
	
FormElement :
	(description=STRING )?
	"element" 
//	("navigate" LinkRef "to")? 
	references = DtoPropertyReference 
	"label" label = ID 
	("readonly" ((readonly?="true") | "false") )?
	";"
	;
	
DialogueCall :
	(contextExp = Expression "to")? name = ID
	("alias" alias = ID)? 
	("(" (arguments += Expression) ("," arguments += Expression)*  ")")?
	;

Expression :
    ServiceExpression | NavigationExpression | StandardExpression
    ;
   	
ProcessCall :
	(contextExp = Expression "to")? name = ID
	("alias" alias = ID)? 
	("(" (arguments += Expression) ("," arguments += Expression)*  ")")?
	;

StandardExpression :
    type = ExpressionType;
    
enum ExpressionType :
    ALL = "all" ;

ServiceExpression :
    (name = ID ":")? "call"  serviceName = ID "." serviceMethod = ID
    ;

NavigationExpression :
    (name = ID ":")? "navigate" references += AssociationRoleReference  
    ( "." references += AssociationRoleReference ) *
    ;

DtoPropertyReference :
	name = ID
	;

AssociationRoleReference :
	name = ID
	;
	
UICall :
	UIModelElementCall
	;
	
UIModelElementCall :
	"dialogue" DialogueCall | "process" ProcessCall
	;
	