/*
* generated by Xtext
*/

package org.mod4j.dsl.presentation.xtext.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import org.eclipse.xtext.*;

import org.eclipse.xtext.service.GrammarProvider;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class PresentationGrammarAccess implements IGrammarAccess {
	
	
	public class PresentationModelElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PresentationModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDescriptionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_0_0 = (RuleCall)cDescriptionAssignment_0.eContents().get(0);
		private final Keyword cPresentationKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cExternalReferencesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cExternalReferencesExternalReferenceParserRuleCall_4_0 = (RuleCall)cExternalReferencesAssignment_4.eContents().get(0);
		private final Assignment cElementsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cElementsModelElementWithContextParserRuleCall_5_0 = (RuleCall)cElementsAssignment_5.eContents().get(0);
		
		//PresentationModel:
		//  description=STRING? "presentation" name=ID ";" externalReferences+=ExternalReference
		//  * elements+=ModelElementWithContext*; 
		//
		////IMPORTANT: You should change the property 'overwrite.pluginresources=true' in the properties file to 'overwrite.pluginresources=false' AFTER first generation
		public ParserRule getRule() { return rule; }

		//description=STRING? "presentation" name=ID ";" externalReferences+=ExternalReference
		// * elements+=ModelElementWithContext*
		public Group getGroup() { return cGroup; }

		//description=STRING?
		public Assignment getDescriptionAssignment_0() { return cDescriptionAssignment_0; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_0_0() { return cDescriptionSTRINGTerminalRuleCall_0_0; }

		//"presentation"
		public Keyword getPresentationKeyword_1() { return cPresentationKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//";"
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }

		//externalReferences+=ExternalReference*
		public Assignment getExternalReferencesAssignment_4() { return cExternalReferencesAssignment_4; }

		//ExternalReference
		public RuleCall getExternalReferencesExternalReferenceParserRuleCall_4_0() { return cExternalReferencesExternalReferenceParserRuleCall_4_0; }

		//elements+=ModelElementWithContext*
		public Assignment getElementsAssignment_5() { return cElementsAssignment_5; }

		//ModelElementWithContext
		public RuleCall getElementsModelElementWithContextParserRuleCall_5_0() { return cElementsModelElementWithContextParserRuleCall_5_0; }
	}

	public class ExternalReferenceElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ExternalReference");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFromKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cModelNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cModelNameIDTerminalRuleCall_1_0 = (RuleCall)cModelNameAssignment_1.eContents().get(0);
		private final Keyword cImportKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ExternalReference:
		//  "from" modelName=ID "import" name=ID ";";
		public ParserRule getRule() { return rule; }

		//"from" modelName=ID "import" name=ID ";"
		public Group getGroup() { return cGroup; }

		//"from"
		public Keyword getFromKeyword_0() { return cFromKeyword_0; }

		//modelName=ID
		public Assignment getModelNameAssignment_1() { return cModelNameAssignment_1; }

		//ID
		public RuleCall getModelNameIDTerminalRuleCall_1_0() { return cModelNameIDTerminalRuleCall_1_0; }

		//"import"
		public Keyword getImportKeyword_2() { return cImportKeyword_2; }

		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }

		//";"
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}

	public class ModelElementWithContextElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ModelElementWithContext");
		private final RuleCall cUIModelElementParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//ModelElementWithContext:
		//  UIModelElement; 
		//	
		//  
		//	  //| Link
		public ParserRule getRule() { return rule; }

		//UIModelElement 
		//	  //| Link
		public RuleCall getUIModelElementParserRuleCall() { return cUIModelElementParserRuleCall; }
	}

	public class UIModelElementElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UIModelElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cDialogueParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cProcessParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//UIModelElement:
		//  Dialogue|Process;
		public ParserRule getRule() { return rule; }

		//Dialogue|Process
		public Alternatives getAlternatives() { return cAlternatives; }

		//Dialogue
		public RuleCall getDialogueParserRuleCall_0() { return cDialogueParserRuleCall_0; }

		//Process
		public RuleCall getProcessParserRuleCall_1() { return cProcessParserRuleCall_1; }
	}

	public class DialogueElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Dialogue");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cContentFormParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cCompoundDialogueParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Dialogue:
		//  ContentForm|CompoundDialogue;
		public ParserRule getRule() { return rule; }

		//ContentForm|CompoundDialogue
		public Alternatives getAlternatives() { return cAlternatives; }

		//ContentForm
		public RuleCall getContentFormParserRuleCall_0() { return cContentFormParserRuleCall_0; }

		//CompoundDialogue
		public RuleCall getCompoundDialogueParserRuleCall_1() { return cCompoundDialogueParserRuleCall_1; }
	}

	public class ContentFormElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ContentForm");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDescriptionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_0_0 = (RuleCall)cDescriptionAssignment_0.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Assignment cIsCollectionAssignment_1_0 = (Assignment)cAlternatives_1.eContents().get(0);
		private final Keyword cIsCollectionListFormKeyword_1_0_0 = (Keyword)cIsCollectionAssignment_1_0.eContents().get(0);
		private final Keyword cContentFormKeyword_1_1 = (Keyword)cAlternatives_1.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cContextKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cContextRefAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cContextRefExternalReferenceCrossReference_4_0 = (CrossReference)cContextRefAssignment_4.eContents().get(0);
		private final RuleCall cContextRefExternalReferenceIDTerminalRuleCall_4_0_1 = (RuleCall)cContextRefExternalReferenceCrossReference_4_0.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cReadonlyKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Alternatives cAlternatives_6_1 = (Alternatives)cGroup_6.eContents().get(1);
		private final Assignment cReadonlyAssignment_6_1_0 = (Assignment)cAlternatives_6_1.eContents().get(0);
		private final Keyword cReadonlyTrueKeyword_6_1_0_0 = (Keyword)cReadonlyAssignment_6_1_0.eContents().get(0);
		private final Keyword cFalseKeyword_6_1_1 = (Keyword)cAlternatives_6_1.eContents().get(1);
		private final Keyword cSemicolonKeyword_6_2 = (Keyword)cGroup_6.eContents().get(2);
		private final Assignment cFormElementsAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cFormElementsFormElementParserRuleCall_7_0 = (RuleCall)cFormElementsAssignment_7.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cActionsKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Group cGroup_8_2 = (Group)cGroup_8.eContents().get(2);
		private final Assignment cActionsAssignment_8_2_0 = (Assignment)cGroup_8_2.eContents().get(0);
		private final RuleCall cActionsSimpleProcessParserRuleCall_8_2_0_0 = (RuleCall)cActionsAssignment_8_2_0.eContents().get(0);
		private final Keyword cSemicolonKeyword_8_2_1 = (Keyword)cGroup_8_2.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_8_3 = (Keyword)cGroup_8.eContents().get(3);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cProcessesKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Group cGroup_9_2 = (Group)cGroup_9.eContents().get(2);
		private final Assignment cProcessesAssignment_9_2_0 = (Assignment)cGroup_9_2.eContents().get(0);
		private final RuleCall cProcessesProcessCallParserRuleCall_9_2_0_0 = (RuleCall)cProcessesAssignment_9_2_0.eContents().get(0);
		private final Keyword cSemicolonKeyword_9_2_1 = (Keyword)cGroup_9_2.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_9_3 = (Keyword)cGroup_9.eContents().get(3);
		private final Keyword cRightSquareBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//ContentForm:
		//  description=STRING? (isCollection?="ListForm"|"ContentForm") name=ID "context"
		//  contextRef=[ExternalReference] "[" ("readonly" (readonly?="true"|"false") ";")?
		//  formElements+=FormElement* ("actions" "[" (actions+=SimpleProcess ";")* "]")? (
		//  "processes" "[" (processes+=ProcessCall ";")* "]")? "]";
		public ParserRule getRule() { return rule; }

		//description=STRING? (isCollection?="ListForm"|"ContentForm") name=ID "context"
		//contextRef=[ExternalReference] "[" ("readonly" (readonly?="true"|"false") ";")?
		//formElements+=FormElement* ("actions" "[" (actions+=SimpleProcess ";")* "]")? (
		//"processes" "[" (processes+=ProcessCall ";")* "]")? "]"
		public Group getGroup() { return cGroup; }

		//description=STRING?
		public Assignment getDescriptionAssignment_0() { return cDescriptionAssignment_0; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_0_0() { return cDescriptionSTRINGTerminalRuleCall_0_0; }

		//isCollection?="ListForm"|"ContentForm"
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//isCollection?="ListForm"
		public Assignment getIsCollectionAssignment_1_0() { return cIsCollectionAssignment_1_0; }

		//"ListForm"
		public Keyword getIsCollectionListFormKeyword_1_0_0() { return cIsCollectionListFormKeyword_1_0_0; }

		//"ContentForm"
		public Keyword getContentFormKeyword_1_1() { return cContentFormKeyword_1_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//"context"
		public Keyword getContextKeyword_3() { return cContextKeyword_3; }

		//contextRef=[ExternalReference]
		public Assignment getContextRefAssignment_4() { return cContextRefAssignment_4; }

		//[ExternalReference]
		public CrossReference getContextRefExternalReferenceCrossReference_4_0() { return cContextRefExternalReferenceCrossReference_4_0; }

		//ID
		public RuleCall getContextRefExternalReferenceIDTerminalRuleCall_4_0_1() { return cContextRefExternalReferenceIDTerminalRuleCall_4_0_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_5() { return cLeftSquareBracketKeyword_5; }

		//("readonly" (readonly?="true"|"false") ";")?
		public Group getGroup_6() { return cGroup_6; }

		//"readonly"
		public Keyword getReadonlyKeyword_6_0() { return cReadonlyKeyword_6_0; }

		//readonly?="true"|"false"
		public Alternatives getAlternatives_6_1() { return cAlternatives_6_1; }

		//readonly?="true"
		public Assignment getReadonlyAssignment_6_1_0() { return cReadonlyAssignment_6_1_0; }

		//"true"
		public Keyword getReadonlyTrueKeyword_6_1_0_0() { return cReadonlyTrueKeyword_6_1_0_0; }

		//"false"
		public Keyword getFalseKeyword_6_1_1() { return cFalseKeyword_6_1_1; }

		//";"
		public Keyword getSemicolonKeyword_6_2() { return cSemicolonKeyword_6_2; }

		//formElements+=FormElement*
		public Assignment getFormElementsAssignment_7() { return cFormElementsAssignment_7; }

		//FormElement
		public RuleCall getFormElementsFormElementParserRuleCall_7_0() { return cFormElementsFormElementParserRuleCall_7_0; }

		//("actions" "[" (actions+=SimpleProcess ";")* "]")?
		public Group getGroup_8() { return cGroup_8; }

		//"actions"
		public Keyword getActionsKeyword_8_0() { return cActionsKeyword_8_0; }

		//"["
		public Keyword getLeftSquareBracketKeyword_8_1() { return cLeftSquareBracketKeyword_8_1; }

		//(actions+=SimpleProcess ";")*
		public Group getGroup_8_2() { return cGroup_8_2; }

		//actions+=SimpleProcess
		public Assignment getActionsAssignment_8_2_0() { return cActionsAssignment_8_2_0; }

		//SimpleProcess
		public RuleCall getActionsSimpleProcessParserRuleCall_8_2_0_0() { return cActionsSimpleProcessParserRuleCall_8_2_0_0; }

		//";"
		public Keyword getSemicolonKeyword_8_2_1() { return cSemicolonKeyword_8_2_1; }

		//"]"
		public Keyword getRightSquareBracketKeyword_8_3() { return cRightSquareBracketKeyword_8_3; }

		//("processes" "[" (processes+=ProcessCall ";")* "]")?
		public Group getGroup_9() { return cGroup_9; }

		//"processes"
		public Keyword getProcessesKeyword_9_0() { return cProcessesKeyword_9_0; }

		//"["
		public Keyword getLeftSquareBracketKeyword_9_1() { return cLeftSquareBracketKeyword_9_1; }

		//(processes+=ProcessCall ";")*
		public Group getGroup_9_2() { return cGroup_9_2; }

		//processes+=ProcessCall
		public Assignment getProcessesAssignment_9_2_0() { return cProcessesAssignment_9_2_0; }

		//ProcessCall
		public RuleCall getProcessesProcessCallParserRuleCall_9_2_0_0() { return cProcessesProcessCallParserRuleCall_9_2_0_0; }

		//";"
		public Keyword getSemicolonKeyword_9_2_1() { return cSemicolonKeyword_9_2_1; }

		//"]"
		public Keyword getRightSquareBracketKeyword_9_3() { return cRightSquareBracketKeyword_9_3; }

		//"]"
		public Keyword getRightSquareBracketKeyword_10() { return cRightSquareBracketKeyword_10; }
	}

	public class SimpleProcessElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SimpleProcess");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDescriptionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_0_0 = (RuleCall)cDescriptionAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTypeProcessTypeEnumRuleCall_2_0 = (RuleCall)cTypeAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cUseKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cProcessElementsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cProcessElementsDialogueCallParserRuleCall_3_1_0 = (RuleCall)cProcessElementsAssignment_3_1.eContents().get(0);
		
		//SimpleProcess returns Process:
		//  description=STRING? name=ID type=ProcessType? ("use" processElements+=DialogueCall)?
		//;
		public ParserRule getRule() { return rule; }

		//description=STRING? name=ID type=ProcessType? ("use" processElements+=DialogueCall)?
		public Group getGroup() { return cGroup; }

		//description=STRING?
		public Assignment getDescriptionAssignment_0() { return cDescriptionAssignment_0; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_0_0() { return cDescriptionSTRINGTerminalRuleCall_0_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//type=ProcessType?
		public Assignment getTypeAssignment_2() { return cTypeAssignment_2; }

		//ProcessType
		public RuleCall getTypeProcessTypeEnumRuleCall_2_0() { return cTypeProcessTypeEnumRuleCall_2_0; }

		//("use" processElements+=DialogueCall)?
		public Group getGroup_3() { return cGroup_3; }

		//"use"
		public Keyword getUseKeyword_3_0() { return cUseKeyword_3_0; }

		//processElements+=DialogueCall
		public Assignment getProcessElementsAssignment_3_1() { return cProcessElementsAssignment_3_1; }

		//DialogueCall
		public RuleCall getProcessElementsDialogueCallParserRuleCall_3_1_0() { return cProcessElementsDialogueCallParserRuleCall_3_1_0; }
	}

	public class CompoundDialogueElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CompoundDialogue");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Assignment cDescriptionAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_0_0_0 = (RuleCall)cDescriptionAssignment_0_0.eContents().get(0);
		private final Keyword cCompoundDialogueKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cNameAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_0_2_0 = (RuleCall)cNameAssignment_0_2.eContents().get(0);
		private final Keyword cContextKeyword_0_3 = (Keyword)cGroup_0.eContents().get(3);
		private final Assignment cContextRefAssignment_0_4 = (Assignment)cGroup_0.eContents().get(4);
		private final CrossReference cContextRefExternalReferenceCrossReference_0_4_0 = (CrossReference)cContextRefAssignment_0_4.eContents().get(0);
		private final RuleCall cContextRefExternalReferenceIDTerminalRuleCall_0_4_0_1 = (RuleCall)cContextRefExternalReferenceCrossReference_0_4_0.eContents().get(1);
		private final Group cGroup_0_5 = (Group)cGroup_0.eContents().get(5);
		private final Keyword cReadonlyKeyword_0_5_0 = (Keyword)cGroup_0_5.eContents().get(0);
		private final Alternatives cAlternatives_0_5_1 = (Alternatives)cGroup_0_5.eContents().get(1);
		private final Assignment cReadonlyAssignment_0_5_1_0 = (Assignment)cAlternatives_0_5_1.eContents().get(0);
		private final Keyword cReadonlyTrueKeyword_0_5_1_0_0 = (Keyword)cReadonlyAssignment_0_5_1_0.eContents().get(0);
		private final Keyword cFalseKeyword_0_5_1_1 = (Keyword)cAlternatives_0_5_1.eContents().get(1);
		private final Keyword cSemicolonKeyword_0_5_2 = (Keyword)cGroup_0_5.eContents().get(2);
		private final Group cGroup_0_6 = (Group)cGroup_0.eContents().get(6);
		private final Keyword cDialoguesKeyword_0_6_0 = (Keyword)cGroup_0_6.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_0_6_1 = (Keyword)cGroup_0_6.eContents().get(1);
		private final Group cGroup_0_6_2 = (Group)cGroup_0_6.eContents().get(2);
		private final Assignment cDialoguesAssignment_0_6_2_0 = (Assignment)cGroup_0_6_2.eContents().get(0);
		private final RuleCall cDialoguesDialogueCallParserRuleCall_0_6_2_0_0 = (RuleCall)cDialoguesAssignment_0_6_2_0.eContents().get(0);
		private final Keyword cSemicolonKeyword_0_6_2_1 = (Keyword)cGroup_0_6_2.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_0_6_3 = (Keyword)cGroup_0_6.eContents().get(3);
		private final Group cGroup_0_7 = (Group)cGroup_0.eContents().get(7);
		private final Keyword cProcessesKeyword_0_7_0 = (Keyword)cGroup_0_7.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_0_7_1 = (Keyword)cGroup_0_7.eContents().get(1);
		private final Group cGroup_0_7_2 = (Group)cGroup_0_7.eContents().get(2);
		private final Assignment cProcessesAssignment_0_7_2_0 = (Assignment)cGroup_0_7_2.eContents().get(0);
		private final RuleCall cProcessesProcessCallParserRuleCall_0_7_2_0_0 = (RuleCall)cProcessesAssignment_0_7_2_0.eContents().get(0);
		private final Keyword cSemicolonKeyword_0_7_2_1 = (Keyword)cGroup_0_7_2.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_0_7_3 = (Keyword)cGroup_0_7.eContents().get(3);
		private final RuleCall cCollectionDialogueParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cMasterDetailParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//CompoundDialogue:
		//  description=STRING? "CompoundDialogue" name=ID "context" contextRef=[
		//  ExternalReference] ("readonly" (readonly?="true"|"false") ";")? ("dialogues" "[" (
		//  dialogues+=DialogueCall ";")* "]")? ("processes" "[" (processes+=ProcessCall ";")* "]")
		//  ?|CollectionDialogue|MasterDetail;
		public ParserRule getRule() { return rule; }

		//description=STRING? "CompoundDialogue" name=ID "context" contextRef=[
		//ExternalReference] ("readonly" (readonly?="true"|"false") ";")? ("dialogues" "[" (
		//dialogues+=DialogueCall ";")* "]")? ("processes" "[" (processes+=ProcessCall ";")* "]")
		//?|CollectionDialogue|MasterDetail
		public Alternatives getAlternatives() { return cAlternatives; }

		//description=STRING? "CompoundDialogue" name=ID "context" contextRef=[
		//ExternalReference] ("readonly" (readonly?="true"|"false") ";")? ("dialogues" "[" (
		//dialogues+=DialogueCall ";")* "]")? ("processes" "[" (processes+=ProcessCall ";")* "]")
		//?
		public Group getGroup_0() { return cGroup_0; }

		//description=STRING?
		public Assignment getDescriptionAssignment_0_0() { return cDescriptionAssignment_0_0; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_0_0_0() { return cDescriptionSTRINGTerminalRuleCall_0_0_0; }

		//"CompoundDialogue"
		public Keyword getCompoundDialogueKeyword_0_1() { return cCompoundDialogueKeyword_0_1; }

		//name=ID
		public Assignment getNameAssignment_0_2() { return cNameAssignment_0_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_2_0() { return cNameIDTerminalRuleCall_0_2_0; }

		//"context"
		public Keyword getContextKeyword_0_3() { return cContextKeyword_0_3; }

		//contextRef=[ExternalReference]
		public Assignment getContextRefAssignment_0_4() { return cContextRefAssignment_0_4; }

		//[ExternalReference]
		public CrossReference getContextRefExternalReferenceCrossReference_0_4_0() { return cContextRefExternalReferenceCrossReference_0_4_0; }

		//ID
		public RuleCall getContextRefExternalReferenceIDTerminalRuleCall_0_4_0_1() { return cContextRefExternalReferenceIDTerminalRuleCall_0_4_0_1; }

		//("readonly" (readonly?="true"|"false") ";")?
		public Group getGroup_0_5() { return cGroup_0_5; }

		//"readonly"
		public Keyword getReadonlyKeyword_0_5_0() { return cReadonlyKeyword_0_5_0; }

		//readonly?="true"|"false"
		public Alternatives getAlternatives_0_5_1() { return cAlternatives_0_5_1; }

		//readonly?="true"
		public Assignment getReadonlyAssignment_0_5_1_0() { return cReadonlyAssignment_0_5_1_0; }

		//"true"
		public Keyword getReadonlyTrueKeyword_0_5_1_0_0() { return cReadonlyTrueKeyword_0_5_1_0_0; }

		//"false"
		public Keyword getFalseKeyword_0_5_1_1() { return cFalseKeyword_0_5_1_1; }

		//";"
		public Keyword getSemicolonKeyword_0_5_2() { return cSemicolonKeyword_0_5_2; }

		//("dialogues" "[" (dialogues+=DialogueCall ";")* "]")?
		public Group getGroup_0_6() { return cGroup_0_6; }

		//"dialogues"
		public Keyword getDialoguesKeyword_0_6_0() { return cDialoguesKeyword_0_6_0; }

		//"["
		public Keyword getLeftSquareBracketKeyword_0_6_1() { return cLeftSquareBracketKeyword_0_6_1; }

		//(dialogues+=DialogueCall ";")*
		public Group getGroup_0_6_2() { return cGroup_0_6_2; }

		//dialogues+=DialogueCall
		public Assignment getDialoguesAssignment_0_6_2_0() { return cDialoguesAssignment_0_6_2_0; }

		//DialogueCall
		public RuleCall getDialoguesDialogueCallParserRuleCall_0_6_2_0_0() { return cDialoguesDialogueCallParserRuleCall_0_6_2_0_0; }

		//";"
		public Keyword getSemicolonKeyword_0_6_2_1() { return cSemicolonKeyword_0_6_2_1; }

		//"]"
		public Keyword getRightSquareBracketKeyword_0_6_3() { return cRightSquareBracketKeyword_0_6_3; }

		//("processes" "[" (processes+=ProcessCall ";")* "]")?
		public Group getGroup_0_7() { return cGroup_0_7; }

		//"processes"
		public Keyword getProcessesKeyword_0_7_0() { return cProcessesKeyword_0_7_0; }

		//"["
		public Keyword getLeftSquareBracketKeyword_0_7_1() { return cLeftSquareBracketKeyword_0_7_1; }

		//(processes+=ProcessCall ";")*
		public Group getGroup_0_7_2() { return cGroup_0_7_2; }

		//processes+=ProcessCall
		public Assignment getProcessesAssignment_0_7_2_0() { return cProcessesAssignment_0_7_2_0; }

		//ProcessCall
		public RuleCall getProcessesProcessCallParserRuleCall_0_7_2_0_0() { return cProcessesProcessCallParserRuleCall_0_7_2_0_0; }

		//";"
		public Keyword getSemicolonKeyword_0_7_2_1() { return cSemicolonKeyword_0_7_2_1; }

		//"]"
		public Keyword getRightSquareBracketKeyword_0_7_3() { return cRightSquareBracketKeyword_0_7_3; }

		//CollectionDialogue
		public RuleCall getCollectionDialogueParserRuleCall_1() { return cCollectionDialogueParserRuleCall_1; }

		//MasterDetail
		public RuleCall getMasterDetailParserRuleCall_2() { return cMasterDetailParserRuleCall_2; }
	}

	public class CollectionDialogueElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CollectionDialogue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDescriptionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_0_0 = (RuleCall)cDescriptionAssignment_0.eContents().get(0);
		private final Keyword cCollectionDialogueKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cContextKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cContextRefAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cContextRefExternalReferenceCrossReference_4_0 = (CrossReference)cContextRefAssignment_4.eContents().get(0);
		private final RuleCall cContextRefExternalReferenceIDTerminalRuleCall_4_0_1 = (RuleCall)cContextRefExternalReferenceCrossReference_4_0.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cReadonlyKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Alternatives cAlternatives_6_1 = (Alternatives)cGroup_6.eContents().get(1);
		private final Assignment cReadonlyAssignment_6_1_0 = (Assignment)cAlternatives_6_1.eContents().get(0);
		private final Keyword cReadonlyTrueKeyword_6_1_0_0 = (Keyword)cReadonlyAssignment_6_1_0.eContents().get(0);
		private final Keyword cFalseKeyword_6_1_1 = (Keyword)cAlternatives_6_1.eContents().get(1);
		private final Keyword cSemicolonKeyword_6_2 = (Keyword)cGroup_6.eContents().get(2);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cDialoguesKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Group cGroup_7_2 = (Group)cGroup_7.eContents().get(2);
		private final Assignment cDialoguesAssignment_7_2_0 = (Assignment)cGroup_7_2.eContents().get(0);
		private final RuleCall cDialoguesDialogueCallParserRuleCall_7_2_0_0 = (RuleCall)cDialoguesAssignment_7_2_0.eContents().get(0);
		private final Keyword cSemicolonKeyword_7_2_1 = (Keyword)cGroup_7_2.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_7_3 = (Keyword)cGroup_7.eContents().get(3);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cProcessesKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Group cGroup_8_2 = (Group)cGroup_8.eContents().get(2);
		private final Assignment cProcessesAssignment_8_2_0 = (Assignment)cGroup_8_2.eContents().get(0);
		private final RuleCall cProcessesProcessCallParserRuleCall_8_2_0_0 = (RuleCall)cProcessesAssignment_8_2_0.eContents().get(0);
		private final Keyword cSemicolonKeyword_8_2_1 = (Keyword)cGroup_8_2.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_8_3 = (Keyword)cGroup_8.eContents().get(3);
		private final Keyword cRightSquareBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//CollectionDialogue:
		//  description=STRING? "CollectionDialogue" name=ID "context" contextRef=[
		//  ExternalReference] "[" ("readonly" (readonly?="true"|"false") ";")? ("dialogues" "[" (
		//  dialogues+=DialogueCall ";")* "]")? ("processes" "[" (processes+=ProcessCall ";")* "]")
		//  ? "]";
		public ParserRule getRule() { return rule; }

		//description=STRING? "CollectionDialogue" name=ID "context" contextRef=[
		//ExternalReference] "[" ("readonly" (readonly?="true"|"false") ";")? ("dialogues" "[" (
		//dialogues+=DialogueCall ";")* "]")? ("processes" "[" (processes+=ProcessCall ";")* "]")
		//? "]"
		public Group getGroup() { return cGroup; }

		//description=STRING?
		public Assignment getDescriptionAssignment_0() { return cDescriptionAssignment_0; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_0_0() { return cDescriptionSTRINGTerminalRuleCall_0_0; }

		//"CollectionDialogue"
		public Keyword getCollectionDialogueKeyword_1() { return cCollectionDialogueKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//"context"
		public Keyword getContextKeyword_3() { return cContextKeyword_3; }

		//contextRef=[ExternalReference]
		public Assignment getContextRefAssignment_4() { return cContextRefAssignment_4; }

		//[ExternalReference]
		public CrossReference getContextRefExternalReferenceCrossReference_4_0() { return cContextRefExternalReferenceCrossReference_4_0; }

		//ID
		public RuleCall getContextRefExternalReferenceIDTerminalRuleCall_4_0_1() { return cContextRefExternalReferenceIDTerminalRuleCall_4_0_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_5() { return cLeftSquareBracketKeyword_5; }

		//("readonly" (readonly?="true"|"false") ";")?
		public Group getGroup_6() { return cGroup_6; }

		//"readonly"
		public Keyword getReadonlyKeyword_6_0() { return cReadonlyKeyword_6_0; }

		//readonly?="true"|"false"
		public Alternatives getAlternatives_6_1() { return cAlternatives_6_1; }

		//readonly?="true"
		public Assignment getReadonlyAssignment_6_1_0() { return cReadonlyAssignment_6_1_0; }

		//"true"
		public Keyword getReadonlyTrueKeyword_6_1_0_0() { return cReadonlyTrueKeyword_6_1_0_0; }

		//"false"
		public Keyword getFalseKeyword_6_1_1() { return cFalseKeyword_6_1_1; }

		//";"
		public Keyword getSemicolonKeyword_6_2() { return cSemicolonKeyword_6_2; }

		//("dialogues" "[" (dialogues+=DialogueCall ";")* "]")?
		public Group getGroup_7() { return cGroup_7; }

		//"dialogues"
		public Keyword getDialoguesKeyword_7_0() { return cDialoguesKeyword_7_0; }

		//"["
		public Keyword getLeftSquareBracketKeyword_7_1() { return cLeftSquareBracketKeyword_7_1; }

		//(dialogues+=DialogueCall ";")*
		public Group getGroup_7_2() { return cGroup_7_2; }

		//dialogues+=DialogueCall
		public Assignment getDialoguesAssignment_7_2_0() { return cDialoguesAssignment_7_2_0; }

		//DialogueCall
		public RuleCall getDialoguesDialogueCallParserRuleCall_7_2_0_0() { return cDialoguesDialogueCallParserRuleCall_7_2_0_0; }

		//";"
		public Keyword getSemicolonKeyword_7_2_1() { return cSemicolonKeyword_7_2_1; }

		//"]"
		public Keyword getRightSquareBracketKeyword_7_3() { return cRightSquareBracketKeyword_7_3; }

		//("processes" "[" (processes+=ProcessCall ";")* "]")?
		public Group getGroup_8() { return cGroup_8; }

		//"processes"
		public Keyword getProcessesKeyword_8_0() { return cProcessesKeyword_8_0; }

		//"["
		public Keyword getLeftSquareBracketKeyword_8_1() { return cLeftSquareBracketKeyword_8_1; }

		//(processes+=ProcessCall ";")*
		public Group getGroup_8_2() { return cGroup_8_2; }

		//processes+=ProcessCall
		public Assignment getProcessesAssignment_8_2_0() { return cProcessesAssignment_8_2_0; }

		//ProcessCall
		public RuleCall getProcessesProcessCallParserRuleCall_8_2_0_0() { return cProcessesProcessCallParserRuleCall_8_2_0_0; }

		//";"
		public Keyword getSemicolonKeyword_8_2_1() { return cSemicolonKeyword_8_2_1; }

		//"]"
		public Keyword getRightSquareBracketKeyword_8_3() { return cRightSquareBracketKeyword_8_3; }

		//"]"
		public Keyword getRightSquareBracketKeyword_9() { return cRightSquareBracketKeyword_9; }
	}

	public class MasterDetailElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MasterDetail");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDescriptionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_0_0 = (RuleCall)cDescriptionAssignment_0.eContents().get(0);
		private final Keyword cMasterDetailKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cContextKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cContextRefAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cContextRefExternalReferenceCrossReference_4_0 = (CrossReference)cContextRefAssignment_4.eContents().get(0);
		private final RuleCall cContextRefExternalReferenceIDTerminalRuleCall_4_0_1 = (RuleCall)cContextRefExternalReferenceCrossReference_4_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cReadonlyKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Alternatives cAlternatives_5_1 = (Alternatives)cGroup_5.eContents().get(1);
		private final Assignment cReadonlyAssignment_5_1_0 = (Assignment)cAlternatives_5_1.eContents().get(0);
		private final Keyword cReadonlyTrueKeyword_5_1_0_0 = (Keyword)cReadonlyAssignment_5_1_0.eContents().get(0);
		private final Keyword cFalseKeyword_5_1_1 = (Keyword)cAlternatives_5_1.eContents().get(1);
		private final Keyword cSemicolonKeyword_5_2 = (Keyword)cGroup_5.eContents().get(2);
		private final Keyword cMasterKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cMasterAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cMasterDialogueCallParserRuleCall_7_0 = (RuleCall)cMasterAssignment_7.eContents().get(0);
		private final Keyword cSemicolonKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cDetailKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cDetailAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cDetailDialogueCallParserRuleCall_10_0 = (RuleCall)cDetailAssignment_10.eContents().get(0);
		private final Keyword cSemicolonKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Keyword cProcessesKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_12_1 = (Keyword)cGroup_12.eContents().get(1);
		private final Group cGroup_12_2 = (Group)cGroup_12.eContents().get(2);
		private final Assignment cProcessesAssignment_12_2_0 = (Assignment)cGroup_12_2.eContents().get(0);
		private final RuleCall cProcessesProcessCallParserRuleCall_12_2_0_0 = (RuleCall)cProcessesAssignment_12_2_0.eContents().get(0);
		private final Keyword cSemicolonKeyword_12_2_1 = (Keyword)cGroup_12_2.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_12_3 = (Keyword)cGroup_12.eContents().get(3);
		
		//MasterDetail:
		//  description=STRING? "MasterDetail" name=ID "context" contextRef=[ExternalReference] (
		//  "readonly" (readonly?="true"|"false") ";")? "master" master=DialogueCall ";" "detail"
		//  detail=DialogueCall ";" ("processes" "[" (processes+=ProcessCall ";")* "]")?;
		public ParserRule getRule() { return rule; }

		//description=STRING? "MasterDetail" name=ID "context" contextRef=[ExternalReference] (
		//"readonly" (readonly?="true"|"false") ";")? "master" master=DialogueCall ";" "detail"
		//detail=DialogueCall ";" ("processes" "[" (processes+=ProcessCall ";")* "]")?
		public Group getGroup() { return cGroup; }

		//description=STRING?
		public Assignment getDescriptionAssignment_0() { return cDescriptionAssignment_0; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_0_0() { return cDescriptionSTRINGTerminalRuleCall_0_0; }

		//"MasterDetail"
		public Keyword getMasterDetailKeyword_1() { return cMasterDetailKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//"context"
		public Keyword getContextKeyword_3() { return cContextKeyword_3; }

		//contextRef=[ExternalReference]
		public Assignment getContextRefAssignment_4() { return cContextRefAssignment_4; }

		//[ExternalReference]
		public CrossReference getContextRefExternalReferenceCrossReference_4_0() { return cContextRefExternalReferenceCrossReference_4_0; }

		//ID
		public RuleCall getContextRefExternalReferenceIDTerminalRuleCall_4_0_1() { return cContextRefExternalReferenceIDTerminalRuleCall_4_0_1; }

		//("readonly" (readonly?="true"|"false") ";")?
		public Group getGroup_5() { return cGroup_5; }

		//"readonly"
		public Keyword getReadonlyKeyword_5_0() { return cReadonlyKeyword_5_0; }

		//readonly?="true"|"false"
		public Alternatives getAlternatives_5_1() { return cAlternatives_5_1; }

		//readonly?="true"
		public Assignment getReadonlyAssignment_5_1_0() { return cReadonlyAssignment_5_1_0; }

		//"true"
		public Keyword getReadonlyTrueKeyword_5_1_0_0() { return cReadonlyTrueKeyword_5_1_0_0; }

		//"false"
		public Keyword getFalseKeyword_5_1_1() { return cFalseKeyword_5_1_1; }

		//";"
		public Keyword getSemicolonKeyword_5_2() { return cSemicolonKeyword_5_2; }

		//"master"
		public Keyword getMasterKeyword_6() { return cMasterKeyword_6; }

		//master=DialogueCall
		public Assignment getMasterAssignment_7() { return cMasterAssignment_7; }

		//DialogueCall
		public RuleCall getMasterDialogueCallParserRuleCall_7_0() { return cMasterDialogueCallParserRuleCall_7_0; }

		//";"
		public Keyword getSemicolonKeyword_8() { return cSemicolonKeyword_8; }

		//"detail"
		public Keyword getDetailKeyword_9() { return cDetailKeyword_9; }

		//detail=DialogueCall
		public Assignment getDetailAssignment_10() { return cDetailAssignment_10; }

		//DialogueCall
		public RuleCall getDetailDialogueCallParserRuleCall_10_0() { return cDetailDialogueCallParserRuleCall_10_0; }

		//";"
		public Keyword getSemicolonKeyword_11() { return cSemicolonKeyword_11; }

		//("processes" "[" (processes+=ProcessCall ";")* "]")?
		public Group getGroup_12() { return cGroup_12; }

		//"processes"
		public Keyword getProcessesKeyword_12_0() { return cProcessesKeyword_12_0; }

		//"["
		public Keyword getLeftSquareBracketKeyword_12_1() { return cLeftSquareBracketKeyword_12_1; }

		//(processes+=ProcessCall ";")*
		public Group getGroup_12_2() { return cGroup_12_2; }

		//processes+=ProcessCall
		public Assignment getProcessesAssignment_12_2_0() { return cProcessesAssignment_12_2_0; }

		//ProcessCall
		public RuleCall getProcessesProcessCallParserRuleCall_12_2_0_0() { return cProcessesProcessCallParserRuleCall_12_2_0_0; }

		//";"
		public Keyword getSemicolonKeyword_12_2_1() { return cSemicolonKeyword_12_2_1; }

		//"]"
		public Keyword getRightSquareBracketKeyword_12_3() { return cRightSquareBracketKeyword_12_3; }
	}

	public class ProcessElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Process");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDescriptionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_0_0 = (RuleCall)cDescriptionAssignment_0.eContents().get(0);
		private final Keyword cProcessKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cContextKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cContextRefAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cContextRefExternalReferenceCrossReference_4_0 = (CrossReference)cContextRefAssignment_4.eContents().get(0);
		private final RuleCall cContextRefExternalReferenceIDTerminalRuleCall_4_0_1 = (RuleCall)cContextRefExternalReferenceCrossReference_4_0.eContents().get(1);
		private final Assignment cRootAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final Keyword cRootStartKeyword_5_0 = (Keyword)cRootAssignment_5.eContents().get(0);
		private final Assignment cTypeAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cTypeProcessTypeEnumRuleCall_6_0 = (RuleCall)cTypeAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cStepKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Group cGroup_7_2 = (Group)cGroup_7.eContents().get(2);
		private final Assignment cProcessElementsAssignment_7_2_0 = (Assignment)cGroup_7_2.eContents().get(0);
		private final RuleCall cProcessElementsDialogueCallParserRuleCall_7_2_0_0 = (RuleCall)cProcessElementsAssignment_7_2_0.eContents().get(0);
		private final Keyword cSemicolonKeyword_7_2_1 = (Keyword)cGroup_7_2.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_7_3 = (Keyword)cGroup_7.eContents().get(3);
		
		//Process:
		//  description=STRING? "Process" name=ID "context" contextRef=[ExternalReference] root?=
		//  "start"? type=ProcessType? ("step" "[" (processElements+=DialogueCall ";") "]")?; 
		//
		//  
		//	  
		//	              
		//	    
		//	
		//	            
		////	("steps" "[" (processElements += UICall ";")* "]")?
		public ParserRule getRule() { return rule; }

		//description=STRING? "Process" name=ID "context" contextRef=[ExternalReference] root?=
		//"start"? type=ProcessType? ("step" "[" (processElements+=DialogueCall ";") "]")? 
		//	  
		//	              
		//	    
		//	
		//	            
		////	("steps" "[" (processElements += UICall ";")* "]")?
		public Group getGroup() { return cGroup; }

		//description=STRING?
		public Assignment getDescriptionAssignment_0() { return cDescriptionAssignment_0; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_0_0() { return cDescriptionSTRINGTerminalRuleCall_0_0; }

		//"Process"
		public Keyword getProcessKeyword_1() { return cProcessKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//"context"
		public Keyword getContextKeyword_3() { return cContextKeyword_3; }

		//contextRef=[ExternalReference]
		public Assignment getContextRefAssignment_4() { return cContextRefAssignment_4; }

		//[ExternalReference]
		public CrossReference getContextRefExternalReferenceCrossReference_4_0() { return cContextRefExternalReferenceCrossReference_4_0; }

		//ID
		public RuleCall getContextRefExternalReferenceIDTerminalRuleCall_4_0_1() { return cContextRefExternalReferenceIDTerminalRuleCall_4_0_1; }

		//root?="start"?
		public Assignment getRootAssignment_5() { return cRootAssignment_5; }

		//"start"
		public Keyword getRootStartKeyword_5_0() { return cRootStartKeyword_5_0; }

		//type=ProcessType?
		public Assignment getTypeAssignment_6() { return cTypeAssignment_6; }

		//ProcessType
		public RuleCall getTypeProcessTypeEnumRuleCall_6_0() { return cTypeProcessTypeEnumRuleCall_6_0; }

		//("step" "[" (processElements+=DialogueCall ";") "]")?
		public Group getGroup_7() { return cGroup_7; }

		//"step"
		public Keyword getStepKeyword_7_0() { return cStepKeyword_7_0; }

		//"["
		public Keyword getLeftSquareBracketKeyword_7_1() { return cLeftSquareBracketKeyword_7_1; }

		//processElements+=DialogueCall ";"
		public Group getGroup_7_2() { return cGroup_7_2; }

		//processElements+=DialogueCall
		public Assignment getProcessElementsAssignment_7_2_0() { return cProcessElementsAssignment_7_2_0; }

		//DialogueCall
		public RuleCall getProcessElementsDialogueCallParserRuleCall_7_2_0_0() { return cProcessElementsDialogueCallParserRuleCall_7_2_0_0; }

		//";"
		public Keyword getSemicolonKeyword_7_2_1() { return cSemicolonKeyword_7_2_1; }

		//"]"
		public Keyword getRightSquareBracketKeyword_7_3() { return cRightSquareBracketKeyword_7_3; }
	}

	public class FormElementElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FormElement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDescriptionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_0_0 = (RuleCall)cDescriptionAssignment_0.eContents().get(0);
		private final Keyword cElementKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cReferencesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cReferencesDtoPropertyReferenceParserRuleCall_2_0 = (RuleCall)cReferencesAssignment_2.eContents().get(0);
		private final Keyword cLabelKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cLabelAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cLabelIDTerminalRuleCall_4_0 = (RuleCall)cLabelAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cReadonlyKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Alternatives cAlternatives_5_1 = (Alternatives)cGroup_5.eContents().get(1);
		private final Assignment cReadonlyAssignment_5_1_0 = (Assignment)cAlternatives_5_1.eContents().get(0);
		private final Keyword cReadonlyTrueKeyword_5_1_0_0 = (Keyword)cReadonlyAssignment_5_1_0.eContents().get(0);
		private final Keyword cFalseKeyword_5_1_1 = (Keyword)cAlternatives_5_1.eContents().get(1);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//FormElement:
		//  description=STRING? "element" references=DtoPropertyReference "label" label=ID (
		//  "readonly" (readonly?="true"|"false"))? ";"; 
		//	
		//  
		//	  
		//	 
		////	("navigate" LinkRef "to")?
		public ParserRule getRule() { return rule; }

		//description=STRING? "element" references=DtoPropertyReference "label" label=ID (
		//"readonly" (readonly?="true"|"false"))? ";" 
		//	  
		//	 
		////	("navigate" LinkRef "to")?
		public Group getGroup() { return cGroup; }

		//description=STRING?
		public Assignment getDescriptionAssignment_0() { return cDescriptionAssignment_0; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_0_0() { return cDescriptionSTRINGTerminalRuleCall_0_0; }

		//"element" 
		//	 
		////	("navigate" LinkRef "to")?
		public Keyword getElementKeyword_1() { return cElementKeyword_1; }

		//references=DtoPropertyReference  
		////	("navigate" LinkRef "to")?
		public Assignment getReferencesAssignment_2() { return cReferencesAssignment_2; }

		//DtoPropertyReference
		public RuleCall getReferencesDtoPropertyReferenceParserRuleCall_2_0() { return cReferencesDtoPropertyReferenceParserRuleCall_2_0; }

		//"label"
		public Keyword getLabelKeyword_3() { return cLabelKeyword_3; }

		//label=ID
		public Assignment getLabelAssignment_4() { return cLabelAssignment_4; }

		//ID
		public RuleCall getLabelIDTerminalRuleCall_4_0() { return cLabelIDTerminalRuleCall_4_0; }

		//("readonly" (readonly?="true"|"false"))?
		public Group getGroup_5() { return cGroup_5; }

		//"readonly"
		public Keyword getReadonlyKeyword_5_0() { return cReadonlyKeyword_5_0; }

		//readonly?="true"|"false"
		public Alternatives getAlternatives_5_1() { return cAlternatives_5_1; }

		//readonly?="true"
		public Assignment getReadonlyAssignment_5_1_0() { return cReadonlyAssignment_5_1_0; }

		//"true"
		public Keyword getReadonlyTrueKeyword_5_1_0_0() { return cReadonlyTrueKeyword_5_1_0_0; }

		//"false"
		public Keyword getFalseKeyword_5_1_1() { return cFalseKeyword_5_1_1; }

		//";"
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
	}

	public class DialogueCallElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DialogueCall");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cContextExpAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cContextExpExpressionParserRuleCall_0_0_0 = (RuleCall)cContextExpAssignment_0_0.eContents().get(0);
		private final Keyword cToKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cAliasKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cAliasAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cAliasIDTerminalRuleCall_2_1_0 = (RuleCall)cAliasAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftParenthesisKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cArgumentsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cArgumentsExpressionParserRuleCall_3_1_0 = (RuleCall)cArgumentsAssignment_3_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cCommaKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cArgumentsAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cArgumentsExpressionParserRuleCall_3_2_1_0 = (RuleCall)cArgumentsAssignment_3_2_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		
		//DialogueCall:
		//  (contextExp=Expression "to")? name=ID ("alias" alias=ID)? ("(" arguments+=Expression (
		//  "," arguments+=Expression)* ")")?;
		public ParserRule getRule() { return rule; }

		//(contextExp=Expression "to")? name=ID ("alias" alias=ID)? ("(" arguments+=Expression (
		//"," arguments+=Expression)* ")")?
		public Group getGroup() { return cGroup; }

		//(contextExp=Expression "to")?
		public Group getGroup_0() { return cGroup_0; }

		//contextExp=Expression
		public Assignment getContextExpAssignment_0_0() { return cContextExpAssignment_0_0; }

		//Expression
		public RuleCall getContextExpExpressionParserRuleCall_0_0_0() { return cContextExpExpressionParserRuleCall_0_0_0; }

		//"to"
		public Keyword getToKeyword_0_1() { return cToKeyword_0_1; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//("alias" alias=ID)?
		public Group getGroup_2() { return cGroup_2; }

		//"alias"
		public Keyword getAliasKeyword_2_0() { return cAliasKeyword_2_0; }

		//alias=ID
		public Assignment getAliasAssignment_2_1() { return cAliasAssignment_2_1; }

		//ID
		public RuleCall getAliasIDTerminalRuleCall_2_1_0() { return cAliasIDTerminalRuleCall_2_1_0; }

		//("(" arguments+=Expression ("," arguments+=Expression)* ")")?
		public Group getGroup_3() { return cGroup_3; }

		//"("
		public Keyword getLeftParenthesisKeyword_3_0() { return cLeftParenthesisKeyword_3_0; }

		//arguments+=Expression
		public Assignment getArgumentsAssignment_3_1() { return cArgumentsAssignment_3_1; }

		//Expression
		public RuleCall getArgumentsExpressionParserRuleCall_3_1_0() { return cArgumentsExpressionParserRuleCall_3_1_0; }

		//("," arguments+=Expression)*
		public Group getGroup_3_2() { return cGroup_3_2; }

		//","
		public Keyword getCommaKeyword_3_2_0() { return cCommaKeyword_3_2_0; }

		//arguments+=Expression
		public Assignment getArgumentsAssignment_3_2_1() { return cArgumentsAssignment_3_2_1; }

		//Expression
		public RuleCall getArgumentsExpressionParserRuleCall_3_2_1_0() { return cArgumentsExpressionParserRuleCall_3_2_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_3_3() { return cRightParenthesisKeyword_3_3; }
	}

	public class ExpressionElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Expression");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cServiceExpressionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cNavigationExpressionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cStandardExpressionParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Expression:
		//  ServiceExpression|NavigationExpression|StandardExpression;
		public ParserRule getRule() { return rule; }

		//ServiceExpression|NavigationExpression|StandardExpression
		public Alternatives getAlternatives() { return cAlternatives; }

		//ServiceExpression
		public RuleCall getServiceExpressionParserRuleCall_0() { return cServiceExpressionParserRuleCall_0; }

		//NavigationExpression
		public RuleCall getNavigationExpressionParserRuleCall_1() { return cNavigationExpressionParserRuleCall_1; }

		//StandardExpression
		public RuleCall getStandardExpressionParserRuleCall_2() { return cStandardExpressionParserRuleCall_2; }
	}

	public class ProcessCallElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ProcessCall");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cContextExpAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cContextExpExpressionParserRuleCall_0_0_0 = (RuleCall)cContextExpAssignment_0_0.eContents().get(0);
		private final Keyword cToKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cAliasKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cAliasAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cAliasIDTerminalRuleCall_2_1_0 = (RuleCall)cAliasAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftParenthesisKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cArgumentsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cArgumentsExpressionParserRuleCall_3_1_0 = (RuleCall)cArgumentsAssignment_3_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cCommaKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cArgumentsAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cArgumentsExpressionParserRuleCall_3_2_1_0 = (RuleCall)cArgumentsAssignment_3_2_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		
		//ProcessCall:
		//  (contextExp=Expression "to")? name=ID ("alias" alias=ID)? ("(" arguments+=Expression (
		//  "," arguments+=Expression)* ")")?;
		public ParserRule getRule() { return rule; }

		//(contextExp=Expression "to")? name=ID ("alias" alias=ID)? ("(" arguments+=Expression (
		//"," arguments+=Expression)* ")")?
		public Group getGroup() { return cGroup; }

		//(contextExp=Expression "to")?
		public Group getGroup_0() { return cGroup_0; }

		//contextExp=Expression
		public Assignment getContextExpAssignment_0_0() { return cContextExpAssignment_0_0; }

		//Expression
		public RuleCall getContextExpExpressionParserRuleCall_0_0_0() { return cContextExpExpressionParserRuleCall_0_0_0; }

		//"to"
		public Keyword getToKeyword_0_1() { return cToKeyword_0_1; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//("alias" alias=ID)?
		public Group getGroup_2() { return cGroup_2; }

		//"alias"
		public Keyword getAliasKeyword_2_0() { return cAliasKeyword_2_0; }

		//alias=ID
		public Assignment getAliasAssignment_2_1() { return cAliasAssignment_2_1; }

		//ID
		public RuleCall getAliasIDTerminalRuleCall_2_1_0() { return cAliasIDTerminalRuleCall_2_1_0; }

		//("(" arguments+=Expression ("," arguments+=Expression)* ")")?
		public Group getGroup_3() { return cGroup_3; }

		//"("
		public Keyword getLeftParenthesisKeyword_3_0() { return cLeftParenthesisKeyword_3_0; }

		//arguments+=Expression
		public Assignment getArgumentsAssignment_3_1() { return cArgumentsAssignment_3_1; }

		//Expression
		public RuleCall getArgumentsExpressionParserRuleCall_3_1_0() { return cArgumentsExpressionParserRuleCall_3_1_0; }

		//("," arguments+=Expression)*
		public Group getGroup_3_2() { return cGroup_3_2; }

		//","
		public Keyword getCommaKeyword_3_2_0() { return cCommaKeyword_3_2_0; }

		//arguments+=Expression
		public Assignment getArgumentsAssignment_3_2_1() { return cArgumentsAssignment_3_2_1; }

		//Expression
		public RuleCall getArgumentsExpressionParserRuleCall_3_2_1_0() { return cArgumentsExpressionParserRuleCall_3_2_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_3_3() { return cRightParenthesisKeyword_3_3; }
	}

	public class StandardExpressionElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "StandardExpression");
		private final Assignment cTypeAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cTypeExpressionTypeEnumRuleCall_0 = (RuleCall)cTypeAssignment.eContents().get(0);
		
		//StandardExpression:
		//  type=ExpressionType;
		public ParserRule getRule() { return rule; }

		//type=ExpressionType
		public Assignment getTypeAssignment() { return cTypeAssignment; }

		//ExpressionType
		public RuleCall getTypeExpressionTypeEnumRuleCall_0() { return cTypeExpressionTypeEnumRuleCall_0; }
	}

	public class ServiceExpressionElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ServiceExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0_0 = (RuleCall)cNameAssignment_0_0.eContents().get(0);
		private final Keyword cColonKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Keyword cCallKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cServiceNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cServiceNameIDTerminalRuleCall_2_0 = (RuleCall)cServiceNameAssignment_2.eContents().get(0);
		private final Keyword cFullStopKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cServiceMethodAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cServiceMethodIDTerminalRuleCall_4_0 = (RuleCall)cServiceMethodAssignment_4.eContents().get(0);
		
		//ServiceExpression:
		//  (name=ID ":")? "call" serviceName=ID "." serviceMethod=ID;
		public ParserRule getRule() { return rule; }

		//(name=ID ":")? "call" serviceName=ID "." serviceMethod=ID
		public Group getGroup() { return cGroup; }

		//(name=ID ":")?
		public Group getGroup_0() { return cGroup_0; }

		//name=ID
		public Assignment getNameAssignment_0_0() { return cNameAssignment_0_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0_0() { return cNameIDTerminalRuleCall_0_0_0; }

		//":"
		public Keyword getColonKeyword_0_1() { return cColonKeyword_0_1; }

		//"call"
		public Keyword getCallKeyword_1() { return cCallKeyword_1; }

		//serviceName=ID
		public Assignment getServiceNameAssignment_2() { return cServiceNameAssignment_2; }

		//ID
		public RuleCall getServiceNameIDTerminalRuleCall_2_0() { return cServiceNameIDTerminalRuleCall_2_0; }

		//"."
		public Keyword getFullStopKeyword_3() { return cFullStopKeyword_3; }

		//serviceMethod=ID
		public Assignment getServiceMethodAssignment_4() { return cServiceMethodAssignment_4; }

		//ID
		public RuleCall getServiceMethodIDTerminalRuleCall_4_0() { return cServiceMethodIDTerminalRuleCall_4_0; }
	}

	public class NavigationExpressionElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NavigationExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0_0 = (RuleCall)cNameAssignment_0_0.eContents().get(0);
		private final Keyword cColonKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Keyword cNavigateKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cReferencesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cReferencesAssociationRoleReferenceParserRuleCall_2_0 = (RuleCall)cReferencesAssignment_2.eContents().get(0);
		
		//NavigationExpression:
		//  (name=ID ":")? "navigate" references+=AssociationRoleReference; 
		//
		//  
		//                    
		//// TODO: Only single reference for now, should become multiple    ( "." references += AssociationRoleReference ) *
		public ParserRule getRule() { return rule; }

		//(name=ID ":")? "navigate" references+=AssociationRoleReference 
		//                    
		//// TODO: Only single reference for now, should become multiple    ( "." references += AssociationRoleReference ) *
		public Group getGroup() { return cGroup; }

		//(name=ID ":")?
		public Group getGroup_0() { return cGroup_0; }

		//name=ID
		public Assignment getNameAssignment_0_0() { return cNameAssignment_0_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0_0() { return cNameIDTerminalRuleCall_0_0_0; }

		//":"
		public Keyword getColonKeyword_0_1() { return cColonKeyword_0_1; }

		//"navigate"
		public Keyword getNavigateKeyword_1() { return cNavigateKeyword_1; }

		//references+=AssociationRoleReference         
		//// TODO: Only single reference for now, should become multiple    ( "." references += AssociationRoleReference ) *
		public Assignment getReferencesAssignment_2() { return cReferencesAssignment_2; }

		//AssociationRoleReference     
		//// TODO: Only single reference for now, should become multiple    ( "." references += AssociationRoleReference ) *
		public RuleCall getReferencesAssociationRoleReferenceParserRuleCall_2_0() { return cReferencesAssociationRoleReferenceParserRuleCall_2_0; }
	}

	public class DtoPropertyReferenceElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DtoPropertyReference");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//DtoPropertyReference:
		//  name=ID;
		public ParserRule getRule() { return rule; }

		//name=ID
		public Assignment getNameAssignment() { return cNameAssignment; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0() { return cNameIDTerminalRuleCall_0; }
	}

	public class AssociationRoleReferenceElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AssociationRoleReference");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//AssociationRoleReference:
		//  name=ID;
		public ParserRule getRule() { return rule; }

		//name=ID
		public Assignment getNameAssignment() { return cNameAssignment; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0() { return cNameIDTerminalRuleCall_0; }
	}

	public class UICallElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UICall");
		private final RuleCall cUIModelElementCallParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//UICall:
		//  UIModelElementCall;
		public ParserRule getRule() { return rule; }

		//UIModelElementCall
		public RuleCall getUIModelElementCallParserRuleCall() { return cUIModelElementCallParserRuleCall; }
	}

	public class UIModelElementCallElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UIModelElementCall");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cDialogueKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final RuleCall cDialogueCallParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cProcessKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cProcessCallParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//UIModelElementCall:
		//  "dialogue" DialogueCall|"process" ProcessCall;
		public ParserRule getRule() { return rule; }

		//"dialogue" DialogueCall|"process" ProcessCall
		public Alternatives getAlternatives() { return cAlternatives; }

		//"dialogue" DialogueCall
		public Group getGroup_0() { return cGroup_0; }

		//"dialogue"
		public Keyword getDialogueKeyword_0_0() { return cDialogueKeyword_0_0; }

		//DialogueCall
		public RuleCall getDialogueCallParserRuleCall_0_1() { return cDialogueCallParserRuleCall_0_1; }

		//"process" ProcessCall
		public Group getGroup_1() { return cGroup_1; }

		//"process"
		public Keyword getProcessKeyword_1_0() { return cProcessKeyword_1_0; }

		//ProcessCall
		public RuleCall getProcessCallParserRuleCall_1_1() { return cProcessCallParserRuleCall_1_1; }
	}
	
	
	public class ProcessTypeElements implements IEnumRuleAccess {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "ProcessType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cNEWEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cNEWNewKeyword_0_0 = (Keyword)cNEWEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cSAVEEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cSAVESaveKeyword_1_0 = (Keyword)cSAVEEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cEDITEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cEDITEditKeyword_2_0 = (Keyword)cEDITEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cREMOVEEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cREMOVERemoveKeyword_3_0 = (Keyword)cREMOVEEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cCANCELEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cCANCELCancelKeyword_4_0 = (Keyword)cCANCELEnumLiteralDeclaration_4.eContents().get(0);
		
		//enum ProcessType:
		//  NEW="new" | SAVE="save" | EDIT="edit" | REMOVE="remove" | CANCEL="Cancel";
		public EnumRule getRule() { return rule; }

		//NEW="new" | SAVE="save" | EDIT="edit" | REMOVE="remove" | CANCEL="Cancel"
		public Alternatives getAlternatives() { return cAlternatives; }

		//NEW="new"
		public EnumLiteralDeclaration getNEWEnumLiteralDeclaration_0() { return cNEWEnumLiteralDeclaration_0; }

		//"new"
		public Keyword getNEWNewKeyword_0_0() { return cNEWNewKeyword_0_0; }

		//SAVE="save"
		public EnumLiteralDeclaration getSAVEEnumLiteralDeclaration_1() { return cSAVEEnumLiteralDeclaration_1; }

		//"save"
		public Keyword getSAVESaveKeyword_1_0() { return cSAVESaveKeyword_1_0; }

		//EDIT="edit"
		public EnumLiteralDeclaration getEDITEnumLiteralDeclaration_2() { return cEDITEnumLiteralDeclaration_2; }

		//"edit"
		public Keyword getEDITEditKeyword_2_0() { return cEDITEditKeyword_2_0; }

		//REMOVE="remove"
		public EnumLiteralDeclaration getREMOVEEnumLiteralDeclaration_3() { return cREMOVEEnumLiteralDeclaration_3; }

		//"remove"
		public Keyword getREMOVERemoveKeyword_3_0() { return cREMOVERemoveKeyword_3_0; }

		//CANCEL="Cancel"
		public EnumLiteralDeclaration getCANCELEnumLiteralDeclaration_4() { return cCANCELEnumLiteralDeclaration_4; }

		//"Cancel"
		public Keyword getCANCELCancelKeyword_4_0() { return cCANCELCancelKeyword_4_0; }
	}

	public class ExpressionTypeElements implements IEnumRuleAccess {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "ExpressionType");
		private final EnumLiteralDeclaration cALLEnumLiteralDeclaration = (EnumLiteralDeclaration)rule.eContents().get(1);
		private final Keyword cALLAllKeyword_0 = (Keyword)cALLEnumLiteralDeclaration.eContents().get(0);
		
		//enum ExpressionType:
		//  ALL="all";
		public EnumRule getRule() { return rule; }

		//ALL="all"
		public EnumLiteralDeclaration getALLEnumLiteralDeclaration() { return cALLEnumLiteralDeclaration; }

		//"all"
		public Keyword getALLAllKeyword_0() { return cALLAllKeyword_0; }
	}
	
	private PresentationModelElements pPresentationModel;
	private ExternalReferenceElements pExternalReference;
	private ModelElementWithContextElements pModelElementWithContext;
	private UIModelElementElements pUIModelElement;
	private DialogueElements pDialogue;
	private ContentFormElements pContentForm;
	private SimpleProcessElements pSimpleProcess;
	private ProcessTypeElements unknownRuleProcessType;
	private CompoundDialogueElements pCompoundDialogue;
	private CollectionDialogueElements pCollectionDialogue;
	private MasterDetailElements pMasterDetail;
	private ProcessElements pProcess;
	private FormElementElements pFormElement;
	private DialogueCallElements pDialogueCall;
	private ExpressionElements pExpression;
	private ProcessCallElements pProcessCall;
	private StandardExpressionElements pStandardExpression;
	private ExpressionTypeElements unknownRuleExpressionType;
	private ServiceExpressionElements pServiceExpression;
	private NavigationExpressionElements pNavigationExpression;
	private DtoPropertyReferenceElements pDtoPropertyReference;
	private AssociationRoleReferenceElements pAssociationRoleReference;
	private UICallElements pUICall;
	private UIModelElementCallElements pUIModelElementCall;
	
	private final GrammarProvider grammarProvider;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public PresentationGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammarProvider = grammarProvider;
		this.gaTerminals = gaTerminals;
	}
	
	public Grammar getGrammar() {	
		return grammarProvider.getGrammar(this);
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//PresentationModel:
	//  description=STRING? "presentation" name=ID ";" externalReferences+=ExternalReference
	//  * elements+=ModelElementWithContext*; 
	//
	////IMPORTANT: You should change the property 'overwrite.pluginresources=true' in the properties file to 'overwrite.pluginresources=false' AFTER first generation
	public PresentationModelElements getPresentationModelAccess() {
		return (pPresentationModel != null) ? pPresentationModel : (pPresentationModel = new PresentationModelElements());
	}
	
	public ParserRule getPresentationModelRule() {
		return getPresentationModelAccess().getRule();
	}

	//ExternalReference:
	//  "from" modelName=ID "import" name=ID ";";
	public ExternalReferenceElements getExternalReferenceAccess() {
		return (pExternalReference != null) ? pExternalReference : (pExternalReference = new ExternalReferenceElements());
	}
	
	public ParserRule getExternalReferenceRule() {
		return getExternalReferenceAccess().getRule();
	}

	//ModelElementWithContext:
	//  UIModelElement; 
	//	
	//  
	//	  //| Link
	public ModelElementWithContextElements getModelElementWithContextAccess() {
		return (pModelElementWithContext != null) ? pModelElementWithContext : (pModelElementWithContext = new ModelElementWithContextElements());
	}
	
	public ParserRule getModelElementWithContextRule() {
		return getModelElementWithContextAccess().getRule();
	}

	//UIModelElement:
	//  Dialogue|Process;
	public UIModelElementElements getUIModelElementAccess() {
		return (pUIModelElement != null) ? pUIModelElement : (pUIModelElement = new UIModelElementElements());
	}
	
	public ParserRule getUIModelElementRule() {
		return getUIModelElementAccess().getRule();
	}

	//Dialogue:
	//  ContentForm|CompoundDialogue;
	public DialogueElements getDialogueAccess() {
		return (pDialogue != null) ? pDialogue : (pDialogue = new DialogueElements());
	}
	
	public ParserRule getDialogueRule() {
		return getDialogueAccess().getRule();
	}

	//ContentForm:
	//  description=STRING? (isCollection?="ListForm"|"ContentForm") name=ID "context"
	//  contextRef=[ExternalReference] "[" ("readonly" (readonly?="true"|"false") ";")?
	//  formElements+=FormElement* ("actions" "[" (actions+=SimpleProcess ";")* "]")? (
	//  "processes" "[" (processes+=ProcessCall ";")* "]")? "]";
	public ContentFormElements getContentFormAccess() {
		return (pContentForm != null) ? pContentForm : (pContentForm = new ContentFormElements());
	}
	
	public ParserRule getContentFormRule() {
		return getContentFormAccess().getRule();
	}

	//SimpleProcess returns Process:
	//  description=STRING? name=ID type=ProcessType? ("use" processElements+=DialogueCall)?
	//;
	public SimpleProcessElements getSimpleProcessAccess() {
		return (pSimpleProcess != null) ? pSimpleProcess : (pSimpleProcess = new SimpleProcessElements());
	}
	
	public ParserRule getSimpleProcessRule() {
		return getSimpleProcessAccess().getRule();
	}

	//enum ProcessType:
	//  NEW="new" | SAVE="save" | EDIT="edit" | REMOVE="remove" | CANCEL="Cancel";
	public ProcessTypeElements getProcessTypeAccess() {
		return (unknownRuleProcessType != null) ? unknownRuleProcessType : (unknownRuleProcessType = new ProcessTypeElements());
	}
	
	public EnumRule getProcessTypeRule() {
		return getProcessTypeAccess().getRule();
	}

	//CompoundDialogue:
	//  description=STRING? "CompoundDialogue" name=ID "context" contextRef=[
	//  ExternalReference] ("readonly" (readonly?="true"|"false") ";")? ("dialogues" "[" (
	//  dialogues+=DialogueCall ";")* "]")? ("processes" "[" (processes+=ProcessCall ";")* "]")
	//  ?|CollectionDialogue|MasterDetail;
	public CompoundDialogueElements getCompoundDialogueAccess() {
		return (pCompoundDialogue != null) ? pCompoundDialogue : (pCompoundDialogue = new CompoundDialogueElements());
	}
	
	public ParserRule getCompoundDialogueRule() {
		return getCompoundDialogueAccess().getRule();
	}

	//CollectionDialogue:
	//  description=STRING? "CollectionDialogue" name=ID "context" contextRef=[
	//  ExternalReference] "[" ("readonly" (readonly?="true"|"false") ";")? ("dialogues" "[" (
	//  dialogues+=DialogueCall ";")* "]")? ("processes" "[" (processes+=ProcessCall ";")* "]")
	//  ? "]";
	public CollectionDialogueElements getCollectionDialogueAccess() {
		return (pCollectionDialogue != null) ? pCollectionDialogue : (pCollectionDialogue = new CollectionDialogueElements());
	}
	
	public ParserRule getCollectionDialogueRule() {
		return getCollectionDialogueAccess().getRule();
	}

	//MasterDetail:
	//  description=STRING? "MasterDetail" name=ID "context" contextRef=[ExternalReference] (
	//  "readonly" (readonly?="true"|"false") ";")? "master" master=DialogueCall ";" "detail"
	//  detail=DialogueCall ";" ("processes" "[" (processes+=ProcessCall ";")* "]")?;
	public MasterDetailElements getMasterDetailAccess() {
		return (pMasterDetail != null) ? pMasterDetail : (pMasterDetail = new MasterDetailElements());
	}
	
	public ParserRule getMasterDetailRule() {
		return getMasterDetailAccess().getRule();
	}

	//Process:
	//  description=STRING? "Process" name=ID "context" contextRef=[ExternalReference] root?=
	//  "start"? type=ProcessType? ("step" "[" (processElements+=DialogueCall ";") "]")?; 
	//
	//  
	//	  
	//	              
	//	    
	//	
	//	            
	////	("steps" "[" (processElements += UICall ";")* "]")?
	public ProcessElements getProcessAccess() {
		return (pProcess != null) ? pProcess : (pProcess = new ProcessElements());
	}
	
	public ParserRule getProcessRule() {
		return getProcessAccess().getRule();
	}

	//FormElement:
	//  description=STRING? "element" references=DtoPropertyReference "label" label=ID (
	//  "readonly" (readonly?="true"|"false"))? ";"; 
	//	
	//  
	//	  
	//	 
	////	("navigate" LinkRef "to")?
	public FormElementElements getFormElementAccess() {
		return (pFormElement != null) ? pFormElement : (pFormElement = new FormElementElements());
	}
	
	public ParserRule getFormElementRule() {
		return getFormElementAccess().getRule();
	}

	//DialogueCall:
	//  (contextExp=Expression "to")? name=ID ("alias" alias=ID)? ("(" arguments+=Expression (
	//  "," arguments+=Expression)* ")")?;
	public DialogueCallElements getDialogueCallAccess() {
		return (pDialogueCall != null) ? pDialogueCall : (pDialogueCall = new DialogueCallElements());
	}
	
	public ParserRule getDialogueCallRule() {
		return getDialogueCallAccess().getRule();
	}

	//Expression:
	//  ServiceExpression|NavigationExpression|StandardExpression;
	public ExpressionElements getExpressionAccess() {
		return (pExpression != null) ? pExpression : (pExpression = new ExpressionElements());
	}
	
	public ParserRule getExpressionRule() {
		return getExpressionAccess().getRule();
	}

	//ProcessCall:
	//  (contextExp=Expression "to")? name=ID ("alias" alias=ID)? ("(" arguments+=Expression (
	//  "," arguments+=Expression)* ")")?;
	public ProcessCallElements getProcessCallAccess() {
		return (pProcessCall != null) ? pProcessCall : (pProcessCall = new ProcessCallElements());
	}
	
	public ParserRule getProcessCallRule() {
		return getProcessCallAccess().getRule();
	}

	//StandardExpression:
	//  type=ExpressionType;
	public StandardExpressionElements getStandardExpressionAccess() {
		return (pStandardExpression != null) ? pStandardExpression : (pStandardExpression = new StandardExpressionElements());
	}
	
	public ParserRule getStandardExpressionRule() {
		return getStandardExpressionAccess().getRule();
	}

	//enum ExpressionType:
	//  ALL="all";
	public ExpressionTypeElements getExpressionTypeAccess() {
		return (unknownRuleExpressionType != null) ? unknownRuleExpressionType : (unknownRuleExpressionType = new ExpressionTypeElements());
	}
	
	public EnumRule getExpressionTypeRule() {
		return getExpressionTypeAccess().getRule();
	}

	//ServiceExpression:
	//  (name=ID ":")? "call" serviceName=ID "." serviceMethod=ID;
	public ServiceExpressionElements getServiceExpressionAccess() {
		return (pServiceExpression != null) ? pServiceExpression : (pServiceExpression = new ServiceExpressionElements());
	}
	
	public ParserRule getServiceExpressionRule() {
		return getServiceExpressionAccess().getRule();
	}

	//NavigationExpression:
	//  (name=ID ":")? "navigate" references+=AssociationRoleReference; 
	//
	//  
	//                    
	//// TODO: Only single reference for now, should become multiple    ( "." references += AssociationRoleReference ) *
	public NavigationExpressionElements getNavigationExpressionAccess() {
		return (pNavigationExpression != null) ? pNavigationExpression : (pNavigationExpression = new NavigationExpressionElements());
	}
	
	public ParserRule getNavigationExpressionRule() {
		return getNavigationExpressionAccess().getRule();
	}

	//DtoPropertyReference:
	//  name=ID;
	public DtoPropertyReferenceElements getDtoPropertyReferenceAccess() {
		return (pDtoPropertyReference != null) ? pDtoPropertyReference : (pDtoPropertyReference = new DtoPropertyReferenceElements());
	}
	
	public ParserRule getDtoPropertyReferenceRule() {
		return getDtoPropertyReferenceAccess().getRule();
	}

	//AssociationRoleReference:
	//  name=ID;
	public AssociationRoleReferenceElements getAssociationRoleReferenceAccess() {
		return (pAssociationRoleReference != null) ? pAssociationRoleReference : (pAssociationRoleReference = new AssociationRoleReferenceElements());
	}
	
	public ParserRule getAssociationRoleReferenceRule() {
		return getAssociationRoleReferenceAccess().getRule();
	}

	//UICall:
	//  UIModelElementCall;
	public UICallElements getUICallAccess() {
		return (pUICall != null) ? pUICall : (pUICall = new UICallElements());
	}
	
	public ParserRule getUICallRule() {
		return getUICallAccess().getRule();
	}

	//UIModelElementCall:
	//  "dialogue" DialogueCall|"process" ProcessCall;
	public UIModelElementCallElements getUIModelElementCallAccess() {
		return (pUIModelElementCall != null) ? pUIModelElementCall : (pUIModelElementCall = new UIModelElementCallElements());
	}
	
	public ParserRule getUIModelElementCallRule() {
		return getUIModelElementCallAccess().getRule();
	}

	//terminal ID:
	//  "^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//  "0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//  "\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" |
	//  "t" | "n" | "f" | "r" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//  "/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//  "//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//  (" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//  .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
