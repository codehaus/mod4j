/*
* generated by Xtext
*/
grammar InternalPresentation;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.mod4j.dsl.presentation.xtext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.mod4j.dsl.presentation.xtext.parser.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.xtext.conversion.ValueConverterException;
import org.mod4j.dsl.presentation.xtext.services.PresentationGrammarAccess;

}

@parser::members {
 
 	private PresentationGrammarAccess grammarAccess;
 	
    public InternalPresentationParser(TokenStream input, IAstFactory factory, PresentationGrammarAccess grammarAccess) {
        this(input);
        this.factory = factory;
        registerRules(grammarAccess.getGrammar());
        this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected InputStream getTokenFile() {
    	ClassLoader classLoader = getClass().getClassLoader();
    	return classLoader.getResourceAsStream("org/mod4j/dsl/presentation/xtext/parser/antlr/internal/InternalPresentation.tokens");
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "PresentationModel";	
   	} 
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRulePresentationModel
entryRulePresentationModel returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getPresentationModelRule(), currentNode); }
	 iv_rulePresentationModel=rulePresentationModel 
	 { $current=$iv_rulePresentationModel.current; } 
	 EOF 
;

// Rule PresentationModel
rulePresentationModel returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getPresentationModelAccess().getApplicationModelParserRuleCall_0(), currentNode); 
    }
    this_ApplicationModel_0=ruleApplicationModel
    { 
        $current = $this_ApplicationModel_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getPresentationModelAccess().getFormsAndProcessesParserRuleCall_1(), currentNode); 
    }
    this_FormsAndProcesses_1=ruleFormsAndProcesses
    { 
        $current = $this_FormsAndProcesses_1.current; 
        currentNode = currentNode.getParent();
    }
);





// Entry rule entryRuleApplicationModel
entryRuleApplicationModel returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getApplicationModelRule(), currentNode); }
	 iv_ruleApplicationModel=ruleApplicationModel 
	 { $current=$iv_ruleApplicationModel.current; } 
	 EOF 
;

// Rule ApplicationModel
ruleApplicationModel returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	
	
	    lv_description_0=	RULE_STRING
	{
		createLeafNode(grammarAccess.getApplicationModelAccess().getDescriptionSTRINGTerminalRuleCall_0_0(), "description"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getApplicationModelRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "description", lv_description_0, "STRING", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)?'application' 
    {
        createLeafNode(grammarAccess.getApplicationModelAccess().getApplicationKeyword_1(), null); 
    }
(	
	
	    lv_name_2=	RULE_ID
	{
		createLeafNode(grammarAccess.getApplicationModelAccess().getNameIDTerminalRuleCall_2_0(), "name"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getApplicationModelRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "name", lv_name_2, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)';' 
    {
        createLeafNode(grammarAccess.getApplicationModelAccess().getSemicolonKeyword_3(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getApplicationModelAccess().getExternalReferencesExternalReferenceParserRuleCall_4_0(), currentNode); 
	    }
	    lv_externalReferences_4=ruleExternalReference 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getApplicationModelRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "externalReferences", lv_externalReferences_4, "ExternalReference", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)*(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getApplicationModelAccess().getMainMenuMenuParserRuleCall_5_0(), currentNode); 
	    }
	    lv_mainMenu_5=ruleMenu 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getApplicationModelRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "mainMenu", lv_mainMenu_5, "Menu", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
));





// Entry rule entryRuleFormsAndProcesses
entryRuleFormsAndProcesses returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getFormsAndProcessesRule(), currentNode); }
	 iv_ruleFormsAndProcesses=ruleFormsAndProcesses 
	 { $current=$iv_ruleFormsAndProcesses.current; } 
	 EOF 
;

// Rule FormsAndProcesses
ruleFormsAndProcesses returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	
	
	    lv_description_0=	RULE_STRING
	{
		createLeafNode(grammarAccess.getFormsAndProcessesAccess().getDescriptionSTRINGTerminalRuleCall_0_0(), "description"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFormsAndProcessesRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "description", lv_description_0, "STRING", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)?'presentation' 
    {
        createLeafNode(grammarAccess.getFormsAndProcessesAccess().getPresentationKeyword_1(), null); 
    }
(	
	
	    lv_name_2=	RULE_ID
	{
		createLeafNode(grammarAccess.getFormsAndProcessesAccess().getNameIDTerminalRuleCall_2_0(), "name"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFormsAndProcessesRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "name", lv_name_2, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)';' 
    {
        createLeafNode(grammarAccess.getFormsAndProcessesAccess().getSemicolonKeyword_3(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getFormsAndProcessesAccess().getExternalReferencesExternalReferenceParserRuleCall_4_0(), currentNode); 
	    }
	    lv_externalReferences_4=ruleExternalReference 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFormsAndProcessesRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "externalReferences", lv_externalReferences_4, "ExternalReference", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)*(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getFormsAndProcessesAccess().getElementsModelElementWithContextParserRuleCall_5_0(), currentNode); 
	    }
	    lv_elements_5=ruleModelElementWithContext 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFormsAndProcessesRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "elements", lv_elements_5, "ModelElementWithContext", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)*);





// Entry rule entryRuleMenu
entryRuleMenu returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getMenuRule(), currentNode); }
	 iv_ruleMenu=ruleMenu 
	 { $current=$iv_ruleMenu.current; } 
	 EOF 
;

// Rule Menu
ruleMenu returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
('menu' 
    {
        createLeafNode(grammarAccess.getMenuAccess().getMenuKeyword_0(), null); 
    }
'[' 
    {
        createLeafNode(grammarAccess.getMenuAccess().getLeftSquareBracketKeyword_1(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getMenuAccess().getStartActionsMenuActionParserRuleCall_2_0(), currentNode); 
	    }
	    lv_startActions_2=ruleMenuAction 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMenuRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "startActions", lv_startActions_2, "MenuAction", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)*']' 
    {
        createLeafNode(grammarAccess.getMenuAccess().getRightSquareBracketKeyword_3(), null); 
    }
);





// Entry rule entryRuleExternalReference
entryRuleExternalReference returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getExternalReferenceRule(), currentNode); }
	 iv_ruleExternalReference=ruleExternalReference 
	 { $current=$iv_ruleExternalReference.current; } 
	 EOF 
;

// Rule ExternalReference
ruleExternalReference returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getExternalReferenceAccess().getDtoReferenceParserRuleCall_0(), currentNode); 
    }
    this_DtoReference_0=ruleDtoReference
    { 
        $current = $this_DtoReference_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getExternalReferenceAccess().getPageReferenceParserRuleCall_1(), currentNode); 
    }
    this_PageReference_1=rulePageReference
    { 
        $current = $this_PageReference_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getExternalReferenceAccess().getServiceReferenceParserRuleCall_2(), currentNode); 
    }
    this_ServiceReference_2=ruleServiceReference
    { 
        $current = $this_ServiceReference_2.current; 
        currentNode = currentNode.getParent();
    }
);





// Entry rule entryRuleDtoReference
entryRuleDtoReference returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getDtoReferenceRule(), currentNode); }
	 iv_ruleDtoReference=ruleDtoReference 
	 { $current=$iv_ruleDtoReference.current; } 
	 EOF 
;

// Rule DtoReference
ruleDtoReference returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
('from' 
    {
        createLeafNode(grammarAccess.getDtoReferenceAccess().getFromKeyword_0(), null); 
    }
(	
	
	    lv_modelName_1=	RULE_ID
	{
		createLeafNode(grammarAccess.getDtoReferenceAccess().getModelNameIDTerminalRuleCall_1_0(), "modelName"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDtoReferenceRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "modelName", lv_modelName_1, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)'dto' 
    {
        createLeafNode(grammarAccess.getDtoReferenceAccess().getDtoKeyword_2(), null); 
    }
(	
	
	    lv_name_3=	RULE_ID
	{
		createLeafNode(grammarAccess.getDtoReferenceAccess().getNameIDTerminalRuleCall_3_0(), "name"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDtoReferenceRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "name", lv_name_3, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)';' 
    {
        createLeafNode(grammarAccess.getDtoReferenceAccess().getSemicolonKeyword_4(), null); 
    }
);





// Entry rule entryRulePageReference
entryRulePageReference returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getPageReferenceRule(), currentNode); }
	 iv_rulePageReference=rulePageReference 
	 { $current=$iv_rulePageReference.current; } 
	 EOF 
;

// Rule PageReference
rulePageReference returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
('from' 
    {
        createLeafNode(grammarAccess.getPageReferenceAccess().getFromKeyword_0(), null); 
    }
(	
	
	    lv_modelName_1=	RULE_ID
	{
		createLeafNode(grammarAccess.getPageReferenceAccess().getModelNameIDTerminalRuleCall_1_0(), "modelName"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPageReferenceRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "modelName", lv_modelName_1, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)'page' 
    {
        createLeafNode(grammarAccess.getPageReferenceAccess().getPageKeyword_2(), null); 
    }
(	
	
	    lv_name_3=	RULE_ID
	{
		createLeafNode(grammarAccess.getPageReferenceAccess().getNameIDTerminalRuleCall_3_0(), "name"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPageReferenceRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "name", lv_name_3, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)';' 
    {
        createLeafNode(grammarAccess.getPageReferenceAccess().getSemicolonKeyword_4(), null); 
    }
);





// Entry rule entryRuleServiceReference
entryRuleServiceReference returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getServiceReferenceRule(), currentNode); }
	 iv_ruleServiceReference=ruleServiceReference 
	 { $current=$iv_ruleServiceReference.current; } 
	 EOF 
;

// Rule ServiceReference
ruleServiceReference returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
('from' 
    {
        createLeafNode(grammarAccess.getServiceReferenceAccess().getFromKeyword_0(), null); 
    }
(	
	
	    lv_modelName_1=	RULE_ID
	{
		createLeafNode(grammarAccess.getServiceReferenceAccess().getModelNameIDTerminalRuleCall_1_0(), "modelName"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getServiceReferenceRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "modelName", lv_modelName_1, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)'service' 
    {
        createLeafNode(grammarAccess.getServiceReferenceAccess().getServiceKeyword_2(), null); 
    }
(	
	
	    lv_name_3=	RULE_ID
	{
		createLeafNode(grammarAccess.getServiceReferenceAccess().getNameIDTerminalRuleCall_3_0(), "name"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getServiceReferenceRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "name", lv_name_3, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)';' 
    {
        createLeafNode(grammarAccess.getServiceReferenceAccess().getSemicolonKeyword_4(), null); 
    }
);





// Entry rule entryRuleModelElementWithContext
entryRuleModelElementWithContext returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getModelElementWithContextRule(), currentNode); }
	 iv_ruleModelElementWithContext=ruleModelElementWithContext 
	 { $current=$iv_ruleModelElementWithContext.current; } 
	 EOF 
;

// Rule ModelElementWithContext
ruleModelElementWithContext returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:

    { 
        currentNode=createCompositeNode(grammarAccess.getModelElementWithContextAccess().getUIModelElementParserRuleCall(), currentNode); 
    }
    this_UIModelElement_0=ruleUIModelElement
    { 
        $current = $this_UIModelElement_0.current; 
        currentNode = currentNode.getParent();
    }
;





// Entry rule entryRuleUIModelElement
entryRuleUIModelElement returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getUIModelElementRule(), currentNode); }
	 iv_ruleUIModelElement=ruleUIModelElement 
	 { $current=$iv_ruleUIModelElement.current; } 
	 EOF 
;

// Rule UIModelElement
ruleUIModelElement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:

    { 
        currentNode=createCompositeNode(grammarAccess.getUIModelElementAccess().getAbstractDialogueParserRuleCall(), currentNode); 
    }
    this_AbstractDialogue_0=ruleAbstractDialogue
    { 
        $current = $this_AbstractDialogue_0.current; 
        currentNode = currentNode.getParent();
    }
;





// Entry rule entryRuleAbstractDialogue
entryRuleAbstractDialogue returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getAbstractDialogueRule(), currentNode); }
	 iv_ruleAbstractDialogue=ruleAbstractDialogue 
	 { $current=$iv_ruleAbstractDialogue.current; } 
	 EOF 
;

// Rule AbstractDialogue
ruleAbstractDialogue returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getAbstractDialogueAccess().getViewParserRuleCall_0(), currentNode); 
    }
    this_View_0=ruleView
    { 
        $current = $this_View_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getAbstractDialogueAccess().getPageParserRuleCall_1(), currentNode); 
    }
    this_Page_1=rulePage
    { 
        $current = $this_Page_1.current; 
        currentNode = currentNode.getParent();
    }
);





// Entry rule entryRuleView
entryRuleView returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getViewRule(), currentNode); }
	 iv_ruleView=ruleView 
	 { $current=$iv_ruleView.current; } 
	 EOF 
;

// Rule View
ruleView returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	
	
	    lv_description_0=	RULE_STRING
	{
		createLeafNode(grammarAccess.getViewAccess().getDescriptionSTRINGTerminalRuleCall_0_0(), "description"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getViewRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "description", lv_description_0, "STRING", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)?'panel' 
    {
        createLeafNode(grammarAccess.getViewAccess().getPanelKeyword_1(), null); 
    }
(	
	
	    lv_name_2=	RULE_ID
	{
		createLeafNode(grammarAccess.getViewAccess().getNameIDTerminalRuleCall_2_0(), "name"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getViewRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "name", lv_name_2, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)(('extends' 
    {
        createLeafNode(grammarAccess.getViewAccess().getExtendsKeyword_3_0_0(), null); 
    }
(	
	
		
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getViewRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getViewAccess().getBaseViewViewCrossReference_3_0_1_0(), "baseView"); 
	}

		// TODO assign feature to currentNode
	
)'[' 
    {
        createLeafNode(grammarAccess.getViewAccess().getLeftSquareBracketKeyword_3_0_2(), null); 
    }
('actions' 
    {
        createLeafNode(grammarAccess.getViewAccess().getActionsKeyword_3_0_3_0(), null); 
    }
'[' 
    {
        createLeafNode(grammarAccess.getViewAccess().getLeftSquareBracketKeyword_3_0_3_1(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getViewAccess().getActionsActionParserRuleCall_3_0_3_2_0(), currentNode); 
	    }
	    lv_actions_8=ruleAction 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getViewRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "actions", lv_actions_8, "Action", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)*']' 
    {
        createLeafNode(grammarAccess.getViewAccess().getRightSquareBracketKeyword_3_0_3_3(), null); 
    }
)?']' 
    {
        createLeafNode(grammarAccess.getViewAccess().getRightSquareBracketKeyword_3_0_4(), null); 
    }
)
    |('context' 
    {
        createLeafNode(grammarAccess.getViewAccess().getContextKeyword_3_1_0(), null); 
    }
(	
	
	    lv_collectionContext_12='list' 
    {
        createLeafNode(grammarAccess.getViewAccess().getCollectionContextListKeyword_3_1_1_0(), "collectionContext"); 
    }

 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getViewRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "collectionContext", true, "list", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)?(	
	
		
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getViewRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getViewAccess().getContextRefDtoReferenceCrossReference_3_1_2_0(), "contextRef"); 
	}

		// TODO assign feature to currentNode
	
)'[' 
    {
        createLeafNode(grammarAccess.getViewAccess().getLeftSquareBracketKeyword_3_1_3(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getViewAccess().getFormElementsFormElementParserRuleCall_3_1_4_0(), currentNode); 
	    }
	    lv_formElements_15=ruleFormElement 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getViewRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "formElements", lv_formElements_15, "FormElement", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)*('actions' 
    {
        createLeafNode(grammarAccess.getViewAccess().getActionsKeyword_3_1_5_0(), null); 
    }
'[' 
    {
        createLeafNode(grammarAccess.getViewAccess().getLeftSquareBracketKeyword_3_1_5_1(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getViewAccess().getActionsActionParserRuleCall_3_1_5_2_0(), currentNode); 
	    }
	    lv_actions_18=ruleAction 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getViewRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "actions", lv_actions_18, "Action", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)*']' 
    {
        createLeafNode(grammarAccess.getViewAccess().getRightSquareBracketKeyword_3_1_5_3(), null); 
    }
)?']' 
    {
        createLeafNode(grammarAccess.getViewAccess().getRightSquareBracketKeyword_3_1_6(), null); 
    }
)));





// Entry rule entryRuleMenuAction
entryRuleMenuAction returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getMenuActionRule(), currentNode); }
	 iv_ruleMenuAction=ruleMenuAction 
	 { $current=$iv_ruleMenuAction.current; } 
	 EOF 
;

// Rule MenuAction
ruleMenuAction returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	
	
	    lv_description_0=	RULE_STRING
	{
		createLeafNode(grammarAccess.getMenuActionAccess().getDescriptionSTRINGTerminalRuleCall_0_0(), "description"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMenuActionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "description", lv_description_0, "STRING", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)?(	
	
	    lv_name_1=	RULE_ID
	{
		createLeafNode(grammarAccess.getMenuActionAccess().getNameIDTerminalRuleCall_1_0(), "name"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMenuActionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "name", lv_name_1, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)('label' 
    {
        createLeafNode(grammarAccess.getMenuActionAccess().getLabelKeyword_2_0(), null); 
    }
(	
	
	    lv_label_3=	RULE_STRING
	{
		createLeafNode(grammarAccess.getMenuActionAccess().getLabelSTRINGTerminalRuleCall_2_1_0(), "label"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMenuActionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "label", lv_label_3, "STRING", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
))?':' 
    {
        createLeafNode(grammarAccess.getMenuActionAccess().getColonKeyword_3(), null); 
    }
(((	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getMenuActionAccess().getTypeProcessTypeEnumRuleCall_4_0_0_0(), currentNode); 
	    }
	    lv_type_5=ruleProcessType 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMenuActionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "type", lv_type_5, "ProcessType", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)
    |((	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getMenuActionAccess().getTypeProcessTypeLinkEnumRuleCall_4_0_1_0_0(), currentNode); 
	    }
	    lv_type_6=ruleProcessTypeLink 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMenuActionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "type", lv_type_6, "ProcessTypeLink", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getMenuActionAccess().getContextExpNavigationExpressionParserRuleCall_4_0_1_1_0(), currentNode); 
	    }
	    lv_contextExp_7=ruleNavigationExpression 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMenuActionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "contextExp", lv_contextExp_7, "NavigationExpression", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)))
    |(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getMenuActionAccess().getContextExpExpressionParserRuleCall_4_1_0(), currentNode); 
	    }
	    lv_contextExp_8=ruleExpression 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMenuActionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "contextExp", lv_contextExp_8, "Expression", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
))('-->' 
    {
        createLeafNode(grammarAccess.getMenuActionAccess().getHyphenMinusHyphenMinusGreaterThanSignKeyword_5_0(), null); 
    }
'page' 
    {
        createLeafNode(grammarAccess.getMenuActionAccess().getPageKeyword_5_1(), null); 
    }
(	
	
		
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getMenuActionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getMenuActionAccess().getNextPagePageCrossReference_5_2_0(), "nextPage"); 
	}

		// TODO assign feature to currentNode
	
))?';' 
    {
        createLeafNode(grammarAccess.getMenuActionAccess().getSemicolonKeyword_6(), null); 
    }
);





// Entry rule entryRuleAction
entryRuleAction returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getActionRule(), currentNode); }
	 iv_ruleAction=ruleAction 
	 { $current=$iv_ruleAction.current; } 
	 EOF 
;

// Rule Action
ruleAction returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	
	
	    lv_description_0=	RULE_STRING
	{
		createLeafNode(grammarAccess.getActionAccess().getDescriptionSTRINGTerminalRuleCall_0_0(), "description"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getActionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "description", lv_description_0, "STRING", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)?(	
	
	    lv_name_1=	RULE_ID
	{
		createLeafNode(grammarAccess.getActionAccess().getNameIDTerminalRuleCall_1_0(), "name"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getActionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "name", lv_name_1, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)('label' 
    {
        createLeafNode(grammarAccess.getActionAccess().getLabelKeyword_2_0(), null); 
    }
(	
	
	    lv_label_3=	RULE_STRING
	{
		createLeafNode(grammarAccess.getActionAccess().getLabelSTRINGTerminalRuleCall_2_1_0(), "label"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getActionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "label", lv_label_3, "STRING", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
))?':' 
    {
        createLeafNode(grammarAccess.getActionAccess().getColonKeyword_3(), null); 
    }
(((	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getActionAccess().getTypeProcessTypeEnumRuleCall_4_0_0_0(), currentNode); 
	    }
	    lv_type_5=ruleProcessType 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getActionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "type", lv_type_5, "ProcessType", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)
    |((	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getActionAccess().getTypeProcessTypeLinkEnumRuleCall_4_0_1_0_0(), currentNode); 
	    }
	    lv_type_6=ruleProcessTypeLink 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getActionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "type", lv_type_6, "ProcessTypeLink", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getActionAccess().getContextExpNavigationExpressionParserRuleCall_4_0_1_1_0(), currentNode); 
	    }
	    lv_contextExp_7=ruleNavigationExpression 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getActionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "contextExp", lv_contextExp_7, "NavigationExpression", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)))
    |(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getActionAccess().getContextExpExpressionParserRuleCall_4_1_0(), currentNode); 
	    }
	    lv_contextExp_8=ruleExpression 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getActionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "contextExp", lv_contextExp_8, "Expression", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
))('-->' 
    {
        createLeafNode(grammarAccess.getActionAccess().getHyphenMinusHyphenMinusGreaterThanSignKeyword_5_0(), null); 
    }
'page' 
    {
        createLeafNode(grammarAccess.getActionAccess().getPageKeyword_5_1(), null); 
    }
(	
	
		
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getActionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getActionAccess().getNextPagePageCrossReference_5_2_0(), "nextPage"); 
	}

		// TODO assign feature to currentNode
	
))?(	
	
	    lv_collectionContext_12='collection' 
    {
        createLeafNode(grammarAccess.getActionAccess().getCollectionContextCollectionKeyword_6_0(), "collectionContext"); 
    }

 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getActionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "collectionContext", true, "collection", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)?';' 
    {
        createLeafNode(grammarAccess.getActionAccess().getSemicolonKeyword_7(), null); 
    }
);





// Entry rule entryRulePage
entryRulePage returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getPageRule(), currentNode); }
	 iv_rulePage=rulePage 
	 { $current=$iv_rulePage.current; } 
	 EOF 
;

// Rule Page
rulePage returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
('page' 
    {
        createLeafNode(grammarAccess.getPageAccess().getPageKeyword_0(), null); 
    }
(	
	
	    lv_name_1=	RULE_ID
	{
		createLeafNode(grammarAccess.getPageAccess().getNameIDTerminalRuleCall_1_0(), "name"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPageRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "name", lv_name_1, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)'shows' 
    {
        createLeafNode(grammarAccess.getPageAccess().getShowsKeyword_2(), null); 
    }
(	
	
		
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getPageRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getPageAccess().getDialogueViewCrossReference_3_0(), "dialogue"); 
	}

		// TODO assign feature to currentNode
	
)';' 
    {
        createLeafNode(grammarAccess.getPageAccess().getSemicolonKeyword_4(), null); 
    }
);





// Entry rule entryRuleFormElement
entryRuleFormElement returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getFormElementRule(), currentNode); }
	 iv_ruleFormElement=ruleFormElement 
	 { $current=$iv_ruleFormElement.current; } 
	 EOF 
;

// Rule FormElement
ruleFormElement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	
	
	    lv_description_0=	RULE_STRING
	{
		createLeafNode(grammarAccess.getFormElementAccess().getDescriptionSTRINGTerminalRuleCall_0_0(), "description"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFormElementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "description", lv_description_0, "STRING", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)?(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getFormElementAccess().getReferencesDtoPropertyReferenceParserRuleCall_1_0(), currentNode); 
	    }
	    lv_references_1=ruleDtoPropertyReference 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFormElementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "references", lv_references_1, "DtoPropertyReference", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)('label' 
    {
        createLeafNode(grammarAccess.getFormElementAccess().getLabelKeyword_2_0(), null); 
    }
(	
	
	    lv_label_3=	RULE_STRING
	{
		createLeafNode(grammarAccess.getFormElementAccess().getLabelSTRINGTerminalRuleCall_2_1_0(), "label"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFormElementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "label", lv_label_3, "STRING", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
))?('readonly' 
    {
        createLeafNode(grammarAccess.getFormElementAccess().getReadonlyKeyword_3_0(), null); 
    }
((	
	
	    lv_readonly_5='true' 
    {
        createLeafNode(grammarAccess.getFormElementAccess().getReadonlyTrueKeyword_3_1_0_0(), "readonly"); 
    }

 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFormElementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "readonly", true, "true", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)
    |'false' 
    {
        createLeafNode(grammarAccess.getFormElementAccess().getFalseKeyword_3_1_1(), null); 
    }
))?';' 
    {
        createLeafNode(grammarAccess.getFormElementAccess().getSemicolonKeyword_4(), null); 
    }
);







// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getExpressionRule(), currentNode); }
	 iv_ruleExpression=ruleExpression 
	 { $current=$iv_ruleExpression.current; } 
	 EOF 
;

// Rule Expression
ruleExpression returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getExpressionAccess().getServiceExpressionParserRuleCall_0(), currentNode); 
    }
    this_ServiceExpression_0=ruleServiceExpression
    { 
        $current = $this_ServiceExpression_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getExpressionAccess().getNavigationExpressionParserRuleCall_1(), currentNode); 
    }
    this_NavigationExpression_1=ruleNavigationExpression
    { 
        $current = $this_NavigationExpression_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getExpressionAccess().getStandardExpressionParserRuleCall_2(), currentNode); 
    }
    this_StandardExpression_2=ruleStandardExpression
    { 
        $current = $this_StandardExpression_2.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getExpressionAccess().getOperationExpressionParserRuleCall_3(), currentNode); 
    }
    this_OperationExpression_3=ruleOperationExpression
    { 
        $current = $this_OperationExpression_3.current; 
        currentNode = currentNode.getParent();
    }
);





// Entry rule entryRuleOperationExpression
entryRuleOperationExpression returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getOperationExpressionRule(), currentNode); }
	 iv_ruleOperationExpression=ruleOperationExpression 
	 { $current=$iv_ruleOperationExpression.current; } 
	 EOF 
;

// Rule OperationExpression
ruleOperationExpression returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
('call' 
    {
        createLeafNode(grammarAccess.getOperationExpressionAccess().getCallKeyword_0(), null); 
    }
(	
	
	    lv_name_1=	RULE_ID
	{
		createLeafNode(grammarAccess.getOperationExpressionAccess().getNameIDTerminalRuleCall_1_0(), "name"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getOperationExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "name", lv_name_1, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
));





// Entry rule entryRuleStandardExpression
entryRuleStandardExpression returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getStandardExpressionRule(), currentNode); }
	 iv_ruleStandardExpression=ruleStandardExpression 
	 { $current=$iv_ruleStandardExpression.current; } 
	 EOF 
;

// Rule StandardExpression
ruleStandardExpression returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getStandardExpressionAccess().getTypeExpressionTypeEnumRuleCall_0_0(), currentNode); 
	    }
	    lv_type_0=ruleExpressionType 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getStandardExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "type", lv_type_0, "ExpressionType", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)(	
	
		
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getStandardExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getStandardExpressionAccess().getContextRefDtoReferenceCrossReference_1_0(), "contextRef"); 
	}

		// TODO assign feature to currentNode
	
));





// Entry rule entryRuleServiceExpression
entryRuleServiceExpression returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getServiceExpressionRule(), currentNode); }
	 iv_ruleServiceExpression=ruleServiceExpression 
	 { $current=$iv_ruleServiceExpression.current; } 
	 EOF 
;

// Rule ServiceExpression
ruleServiceExpression returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
('service' 
    {
        createLeafNode(grammarAccess.getServiceExpressionAccess().getServiceKeyword_0(), null); 
    }
(	
	
		
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getServiceExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
	RULE_ID
	{
		createLeafNode(grammarAccess.getServiceExpressionAccess().getServiceServiceReferenceCrossReference_1_0(), "service"); 
	}

		// TODO assign feature to currentNode
	
));





// Entry rule entryRuleNavigationExpression
entryRuleNavigationExpression returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getNavigationExpressionRule(), currentNode); }
	 iv_ruleNavigationExpression=ruleNavigationExpression 
	 { $current=$iv_ruleNavigationExpression.current; } 
	 EOF 
;

// Rule NavigationExpression
ruleNavigationExpression returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
('navigate' 
    {
        createLeafNode(grammarAccess.getNavigationExpressionAccess().getNavigateKeyword_0(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getNavigationExpressionAccess().getReferencesAssociationRoleReferenceParserRuleCall_1_0(), currentNode); 
	    }
	    lv_references_1=ruleAssociationRoleReference 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNavigationExpressionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "references", lv_references_1, "AssociationRoleReference", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
));





// Entry rule entryRuleDtoPropertyReference
entryRuleDtoPropertyReference returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getDtoPropertyReferenceRule(), currentNode); }
	 iv_ruleDtoPropertyReference=ruleDtoPropertyReference 
	 { $current=$iv_ruleDtoPropertyReference.current; } 
	 EOF 
;

// Rule DtoPropertyReference
ruleDtoPropertyReference returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	
	
	    lv_name_0=	RULE_ID
	{
		createLeafNode(grammarAccess.getDtoPropertyReferenceAccess().getNameIDTerminalRuleCall_0_0(), "name"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDtoPropertyReferenceRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "name", lv_name_0, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)('.' 
    {
        createLeafNode(grammarAccess.getDtoPropertyReferenceAccess().getFullStopKeyword_1_0(), null); 
    }
(	
	
	    lv_subname_2=	RULE_ID
	{
		createLeafNode(grammarAccess.getDtoPropertyReferenceAccess().getSubnameIDTerminalRuleCall_1_1_0(), "subname"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDtoPropertyReferenceRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "subname", lv_subname_2, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
))?);





// Entry rule entryRuleAssociationRoleReference
entryRuleAssociationRoleReference returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getAssociationRoleReferenceRule(), currentNode); }
	 iv_ruleAssociationRoleReference=ruleAssociationRoleReference 
	 { $current=$iv_ruleAssociationRoleReference.current; } 
	 EOF 
;

// Rule AssociationRoleReference
ruleAssociationRoleReference returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	
	
	    lv_name_0=	RULE_ID
	{
		createLeafNode(grammarAccess.getAssociationRoleReferenceAccess().getNameIDTerminalRuleCall_0(), "name"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAssociationRoleReferenceRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "name", lv_name_0, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
);





// Rule ProcessType
ruleProcessType returns [Enumerator current=null] 
    @init { setCurrentLookahead(); resetLookahead(); }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	'new' 
	{
        $current = grammarAccess.getProcessTypeAccess().getNEWEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getProcessTypeAccess().getNEWEnumLiteralDeclaration_0(), null); 
    }
)
    |(	'save' 
	{
        $current = grammarAccess.getProcessTypeAccess().getSAVEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getProcessTypeAccess().getSAVEEnumLiteralDeclaration_1(), null); 
    }
)
    |(	'edit' 
	{
        $current = grammarAccess.getProcessTypeAccess().getEDITEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getProcessTypeAccess().getEDITEnumLiteralDeclaration_2(), null); 
    }
)
    |(	'delete' 
	{
        $current = grammarAccess.getProcessTypeAccess().getDELETEEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getProcessTypeAccess().getDELETEEnumLiteralDeclaration_3(), null); 
    }
)
    |(	'cancel' 
	{
        $current = grammarAccess.getProcessTypeAccess().getCANCELEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getProcessTypeAccess().getCANCELEnumLiteralDeclaration_4(), null); 
    }
)
    |(	'removefrom' 
	{
        $current = grammarAccess.getProcessTypeAccess().getREMOVEFROMEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getProcessTypeAccess().getREMOVEFROMEnumLiteralDeclaration_5(), null); 
    }
)
    |(	'addto' 
	{
        $current = grammarAccess.getProcessTypeAccess().getADDTOEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getProcessTypeAccess().getADDTOEnumLiteralDeclaration_6(), null); 
    }
)
    |(	'custom' 
	{
        $current = grammarAccess.getProcessTypeAccess().getCUSTOMEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getProcessTypeAccess().getCUSTOMEnumLiteralDeclaration_7(), null); 
    }
));



// Rule ProcessTypeLink
ruleProcessTypeLink returns [Enumerator current=null] 
    @init { setCurrentLookahead(); resetLookahead(); }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'link' 
	{
        $current = grammarAccess.getProcessTypeLinkAccess().getLINKEnumLiteralDeclaration().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getProcessTypeLinkAccess().getLINKEnumLiteralDeclaration(), null); 
    }
);



// Rule ExpressionType
ruleExpressionType returns [Enumerator current=null] 
    @init { setCurrentLookahead(); resetLookahead(); }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	'all' 
	{
        $current = grammarAccess.getExpressionTypeAccess().getALLEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getExpressionTypeAccess().getALLEnumLiteralDeclaration_0(), null); 
    }
)
    |(	'find' 
	{
        $current = grammarAccess.getExpressionTypeAccess().getFINDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getExpressionTypeAccess().getFINDEnumLiteralDeclaration_1(), null); 
    }
));



RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


