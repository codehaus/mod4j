import datacontractdsl;
import codeassist;
import emf;
import crossx;

extension org::mod4j::dsl::datacontract::xtext::Extensions;
extension org::mod4j::dsl::datacontract::xtext::GenContentAssist reexport;
//extension org::mod4j::dsl::datacontract::xtext::EclipseUtil;
extension org::mod4j::eclipse::xtend::EclipseUtil;
extension org::mod4j::crossx::broker::xtend::Crossx;

/*
 * There are two types of extensions one can define
 *
 * completeMetaType_feature(ModelElement ele, String prefix)
 * This one is called for assignments only. It gets the underlying Modelelement and the current prefix passed in.
 *
 * Note that only proposals with 'Proposal.toInsert.toLowerCase().startsWith(prefix.toLowerCase())' will be proposed in the editor
 * 
 * you can sort and/or filter the proposals by overwriting 'List[Proposal] sortProposals(List[Proposal] proposalsToSort)'
 */

/* proposals for Feature BusinessClassReference::name */
List[Proposal] completeBusinessClassReference_name(emf::EObject ctx, String prefix) :
	findAllFromModel( ((DataContractDsl::BusinessClassReference)ctx).modelname, "BusinessClass").
	          collect(x|newProposal(x)).add(newProposal("empty"));

/* proposals for Feature EnumerationProperty::name */
List[Proposal] completeBusinessClassReference_modelname(emf::EObject ctx, String prefix) :
	findAllModelsInProject( ctx.getProjectName()) .collect(x|newProposal(x)) ;

/* proposals for Feature BusinessClassDto::properties */
List[Proposal] completeBusinessClassDto_propertyReferences(emf::EObject ctx, String prefix) :
    getProposal(ctx).collect(p |  newProposal( p) )
	;
	
List[String] getProposal(emf::EObject ctx) : JAVA
    org.mod4j.dsl.datacontract.xtext.Proposals.getProposal(org.eclipse.emf.ecore.EObject);
    
/* proposals for Feature DtoBooleanProperty::name */
List[Proposal] completeDtoBooleanProperty_dataType(emf::EObject ctx, String prefix) :
	{newProposal("boolean-1")};
/* proposals for Feature DtoBooleanProperty::name */
List[Proposal] completeDtoStringProperty_dataType(emf::EObject ctx, String prefix) :
	{newProposal("string")};
/* proposals for Feature DtoBooleanProperty::name */
List[Proposal] completeDtoIntegerProperty_dataType(emf::EObject ctx, String prefix) :
	{newProposal("integer")};
/* proposals for Feature DtoBooleanProperty::name */
List[Proposal] completeDtoDecimalProperty_dataType(emf::EObject ctx, String prefix) :
	{newProposal("decimal")};
/* proposals for Feature DtoBooleanProperty::name */
List[Proposal] completeDtoDateTimeProperty_dataType(emf::EObject ctx, String prefix) :
	{newProposal("datetime-1")};

	