/**
 * Operations implemented in Java or Xtend
 */
import  DataContractDsl;
import crossx;

extension org::mod4j::crossx::broker::xtend::Crossx;

String javaType(DtoProperty p) :
    JAVA org.mod4j.dsl.datacontract.generator.helpers.DtoHelpers.javaType(org.mod4j.dsl.datacontract.mm.DataContractDsl.DtoProperty);

String javaTranslatorName(String name) :
    JAVA org.mod4j.dsl.datacontract.generator.helpers.DtoHelpers.javaTranslatorName(java.lang.String);
 
String getterPrefix(DtoProperty p) : 
	switch (p.dataType) {
	    case 'boolean' : "is"
	    default : "get"
	};
	
boolean hasAllNonNullables(BusinessClassDto dto) :
    if dto.propertyReferences.isEmpty then (
        true
    )
    else (
	    let symbol = lookupSymbol(dto.base.modelname, dto.base.name, "BusinessClass") :
	    let props = symbol.subSymbols.select(s|s.type.matches("Property")) :
	    let nonNullables = props.select(p | p.getPropertyValue("MandatoryForCreation") == "true") :
        dto.propertyReferences.name.containsAll(nonNullables)
    )
    ;