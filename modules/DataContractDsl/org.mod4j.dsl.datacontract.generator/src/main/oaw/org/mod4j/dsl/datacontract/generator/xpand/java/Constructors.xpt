«REM»
	  Copyright (c) 2009 Ordina and committers to Mod4j
	  All rights reserved. This program and the accompanying materials
	  are made available under the terms of the Eclipse Public License v1.0
	  which accompanies this distribution, and is available at
	  http://www.eclipse.org/legal/epl-v10.html
	 
	  Contributors:
	      Ordina - initial implementation
«ENDREM»
«IMPORT DataContractDsl»
«IMPORT Crossx»

«EXTENSION org::mod4j::dslcommon::xtend::generatorutil»
«EXTENSION org::mod4j::dsl::datacontract::generator::xtend::Dto»

«DEFINE addDefaultNoArgConstructor FOR Dto»
    /**
     * Default no-argument constructor for «javaClassName(name)» 
     */
     public  «javaClassName(name) -» () {
         super();
     }
«ENDDEFINE»

«DEFINE addDefaultNoArgSetDefaultsConstructor FOR Dto»
    /**
     * Default no-argument constructor.
     * Contstructs a «javaClassName(name)» initialized with default values. 
     */
     public  «javaClassName(name) -» () {
         super();
         setDefaults();
     }
«ENDDEFINE»

«DEFINE addDefaultsSwitchConstructor FOR Dto»
    /**
     * Constructs a «javaClassName(name)» with or without initializing default values.
     * @param setDefaults 
     */
     public «javaClassName(name)-» (boolean setDefaults) {
         super();
         if (setDefaults){
             setDefaults();
         }
     }
«ENDDEFINE»

«DEFINE addIdConstructor FOR Dto»
    /**
     * Constructor taking an id for «javaClassName(name)» 
     */
     public  «javaClassName(name)-» (Long id) {
         super();
         this.id = id;
     }
«ENDDEFINE»

«DEFINE addConstructorArgumentsList  FOR BusinessClassDto -»
«LET getConstructArguments() AS args -»
    «FOREACH properties.select(e|e.mandatoryForCreation).sortBy(e|args.indexOf(e.name)) AS prop ITERATOR propIter SEPARATOR "," -»
        «EXPAND addArgument FOR prop -»
    «ENDFOREACH»
«ENDLET -»
«ENDDEFINE»

«DEFINE addArgument FOR DtoProperty -»
    source.«getterPrefix()»«name.toFirstUpper()»()
«ENDDEFINE»

«DEFINE addArgument FOR DtoEnumerationProperty -»
    «name»Translator.fromDto(source.get«javaClassName(name)»())
«ENDDEFINE»
