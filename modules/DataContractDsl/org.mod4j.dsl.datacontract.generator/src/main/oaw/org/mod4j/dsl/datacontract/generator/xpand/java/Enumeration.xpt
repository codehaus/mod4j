«REM»
	  Copyright (c) 2009 Ordina and committers to Mod4j
	  All rights reserved. This program and the accompanying materials
	  are made available under the terms of the Eclipse Public License v1.0
	  which accompanies this distribution, and is available at
	  http://www.eclipse.org/legal/epl-v10.html
	 
	  Contributors:
	      Ordina - initial implementation
«ENDREM»
«IMPORT DataContractDsl»
«IMPORT org::mod4j::dslcommon::xpand::java»

«EXTENSION org::mod4j::dslcommon::xtend::generatorutil»
«EXTENSION org::mod4j::dslcommon::xtend::ProjectProperties»
«EXTENSION org::mod4j::common::xtend::NameMapper»
«EXTENSION org::mod4j::dsl::datacontract::generator::xtend::Dto»

«DEFINE createEnumDto FOR EnumerationDto»
    «EXPAND JavaComments::regenerationWarningHeader ("Mod4j DatcontractDsl generator: Enumeration.xpt") FOR this»
    package «getDtoPackage()»;
    
    «EXPAND Imports::addImports FOR this»
            
   /**
    * «description»
    *
    * Generated at: «timestamp()»
    */
   public enum «javaClassName(name)» {
    
        «FOREACH literals AS enumlit ITERATOR enumlitIter SEPARATOR "," »
            «EXPAND enumlit FOR enumlit -»
        «ENDFOREACH»;
        
        private static final Map<«enumerationLiteralType()», «javaClassName(name)»> lookup = new HashMap<«enumerationLiteralType()», «javaClassName(name)»>();
        static {
            for(«javaClassName(name)» s : EnumSet.allOf(«javaClassName(name)».class))
                   lookup.put(s.id(), s);
            }

            private «enumerationLiteralType()» id;
            
            private «javaClassName(name)»(«enumerationLiteralType()» id) {
            this.id = id;
        }
        
        public «enumerationLiteralType()» id() {
            return id;
        }
        
        public static «javaClassName(name)» value(«enumerationLiteralType()» id) {
            return lookup.get(id); 
        }                  
    }
«ENDDEFINE»

«DEFINE enumlit FOR EnumerationDtoLiteral»
«REM»EnumerationDtoLiteral is abstract«ENDREM»
«ENDDEFINE»

«DEFINE enumlit FOR EnumerationDtoIntegerLiteral -»
            «name.toUpperCase()»(«value»)
«ENDDEFINE»

«DEFINE enumlit FOR EnumerationDtoStringLiteral -»
            «name.toUpperCase()»("«value»")
«ENDDEFINE»