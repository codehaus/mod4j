«REM»
	  Copyright (c) 2009 Ordina and committers to Mod4j
	  All rights reserved. This program and the accompanying materials
	  are made available under the terms of the Eclipse Public License v1.0
	  which accompanies this distribution, and is available at
	  http://www.eclipse.org/legal/epl-v10.html
	 
	  Contributors:
	      Ordina - initial implementation
«ENDREM»
«IMPORT ServiceDsl»
«IMPORT crossx»
«IMPORT org::mod4j::dslcommon::xpand::xml»

«EXTENSION org::mod4j::dsl::service::mm::xtend::ServiceMethod»
«EXTENSION org::mod4j::dslcommon::xtend::generatorutil»
«EXTENSION org::mod4j::common::xtend::NameMapper»
«EXTENSION org::mod4j::dslcommon::xtend::ProjectProperties»
«EXTENSION org::mod4j::common::xtend::FileTracker»
«EXTENSION org::mod4j::crossx::broker::xtend::Crossx»

«DEFINE GenBusinessLayerContextImplBase FOR ServiceModel»
«LET findAllSymbols(getProject(),  "Service") AS allServices»
<?xml version="1.0" encoding="UTF-8"?>
«EXPAND XmlComments::regenerationWarningHeader ("Mod4j ServiceDsl generator: BusinessLayerContext.xpt") FOR this»
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop">

    <!--  AOP configuration for cross cutting concern Logging -->
    «FOREACH allServices AS service»
    <aop:config>
        <aop:pointcut id="«service.name»BusinessMethods"
            expression="execution(* «javaDomainServiceClassPath(service.name)».*(..))" />
        <aop:aspect ref="loggingAspect">
            <aop:before pointcut-ref="«service.name»BusinessMethods" method="logBefore" />
            <aop:after pointcut-ref="«service.name»BusinessMethods" method="logAfter" />
        </aop:aspect>
        <aop:aspect ref="timingAspect">
            <aop:around pointcut-ref="«service.name»BusinessMethods" method="time" />
        </aop:aspect>
    </aop:config>
    «ENDFOREACH»

    «FOREACH allServices AS service»
    <bean id="«service.name.toFirstLower()»DomainService"
        class="«javaDomainServiceClassPath(service.name)»">
        «LET service.getPropertyValue("UniqueBusinessClasses") AS uniqueClasses»
        «IF (uniqueClasses != null) && ( uniqueClasses.trim() != "" ) »
	        «FOREACH uniqueClasses.split(",") AS cls»
	        <property name="«javaDaoInterface(cls).toFirstLower()»" ref="«javaDaoInterface(cls).toFirstLower()»" />
	        «ENDFOREACH»
	    «ELSE»
	        <!-- no classes defined in the application -->
	    «ENDIF»
        «ENDLET»
    </bean>
    «ENDFOREACH»

</beans>
«ENDLET»
«ENDDEFINE»
