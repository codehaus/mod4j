«REM»
	  Copyright (c) 2009 Ordina and committers to Mod4j
	  All rights reserved. This program and the accompanying materials
	  are made available under the terms of the Eclipse Public License v1.0
	  which accompanies this distribution, and is available at
	  http://www.eclipse.org/legal/epl-v10.html
	 
	  Contributors:
	      Ordina - initial implementation
«ENDREM»
«IMPORT ServiceDsl»
«IMPORT org::mod4j::dsl::service::generator::xpand::java»
«IMPORT org::mod4j::dsl::service::generator::xpand::maven»
«IMPORT org::mod4j::dsl::service::generator::xpand::spring»

«EXTENSION org::mod4j::dslcommon::xtend::generatorutil»
«EXTENSION org::mod4j::common::xtend::FileTracker»
«EXTENSION org::mod4j::dslcommon::xtend::ProjectProperties»
«EXTENSION org::mod4j::common::xtend::NameMapper»

«DEFINE Generate FOR ServiceModel»
	«print("MOD4J INFO: Running Service Business generator on model [" + this.name + "]")»
	«IF shouldRegenerate(fullExtendPath(getBusinessModuleName(), javaPathFileName(javaDomainServiceInterfacePath(name))))»
		«FILE extend(getBusinessModuleName(), javaPathFileName(javaDomainServiceInterfacePath(name)))»
		    «EXPAND BusinessService::BusinessService FOR this»
		«ENDFILE»
	«ELSE»
	    «retain(getBusinessModuleName(), javaPathFileName(javaDomainServiceInterfacePath(name)) )»
	«ENDIF»
	
	«FILE generate(getBusinessModuleName(), javaPathFileName(javaDomainServiceBaseInterfacePath(name)))»
	    «EXPAND BusinessServiceBase::BusinessServiceBase FOR this»
	«ENDFILE»
	
	«FILE generate(getBusinessModuleName(), javaDomainServiceBaseClassPath(name).javaPathFileName())»
	  	«EXPAND BusinessServiceImplBase::BusinessServiceImplBase FOR this»
	«ENDFILE»
	
	«IF shouldRegenerate(fullExtendPath(getBusinessModuleName(), javaPathFileName(javaDomainServiceClassPath(name))))»
	 	«FILE extend(getBusinessModuleName(), javaPathFileName(javaDomainServiceClassPath(name)))» 
		  	«EXPAND BusinessServiceImpl::BusinessServiceImpl FOR this»
		«ENDFILE»
	«ELSE»
	    «retain(getBusinessModuleName(), javaPathFileName(javaDomainServiceClassPath(name)) )»
	«ENDIF»

	«FILE generate(getBusinessModuleName(), getBusinessRootPackageAsPath() + "/beanRefContext.xml")»
	    «EXPAND  BusinessLayerBeanRefContext::GenBeanRefContext FOR this» 
	«ENDFILE»
	
    «FILE generate(getBusinessModuleName(), getBusinessRootPackageAsPath() + "/applicationContext.xml")»
	    «EXPAND  BusinessLayerContextImplBase::GenBusinessLayerContextImplBase FOR this» 
	«ENDFILE»
	
«ENDDEFINE»

«REM»
	Generation of Maven configuration files. 
«ENDREM»
«DEFINE generateMavenConfiguration FOR ServiceModel»
	«print("MOD4J INFO: Running Service maven generator on model [" + this.name + "]")»
    «IF shouldRegenerate(getBusinessModulePath() + "/pom.xml")»
        «FILE extend( getBusinessModuleName(), "pom.xml" )-»
		  	«EXPAND BusinessModulePom::createBusinessModulePom»
		«ENDFILE»
	«ELSE»
		«retain(getBusinessModuleName(), "pom.xml" )»
	«ENDIF»
«ENDDEFINE»
