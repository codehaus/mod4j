«IMPORT ServiceDsl»
«IMPORT crossx»
«IMPORT org::mod4j::dslcommon::xpand::java»

«EXTENSION org::mod4j::dsl::service::mm::xtend::ServiceMethod»
«EXTENSION org::mod4j::dslcommon::xtend::generatorutil»
«EXTENSION org::mod4j::dslcommon::xtend::ProjectProperties»
«EXTENSION org::mod4j::common::xtend::NameMapper»
«EXTENSION org::mod4j::common::xtend::FileTracker»
«EXTENSION org::mod4j::crossx::broker::xtend::Crossx» 


«DEFINE BusinessServiceImpl FOR ServiceModel»
«IF fileExist(fullExtendPath(getBusinessModuleName(), javaPathFileName(javaDomainServiceClassPath(name))))»
    «extend(getBusinessModuleName(), javaPathFileName(javaDomainServiceClassPath(name)) )»
«ELSE»
 	«FILE extend(getBusinessModuleName(), javaPathFileName(javaDomainServiceClassPath(name)))» 
    /**
     * Generated by Mod4j Service DSL: BusinessServiceImpl::BusinessServiceImpl at: «timestamp()»
     * from model «this.name»
     */
	package «getBusinessRootPackage()»;

«REM»Import the business cl;as  and dao for aech base of each BusinessClassDto. 
     Ensure that doules are removed.
«ENDREM»	
	«FOREACH this.uniqueBusinessClasses() AS cls -»
	    import «javaDomainClassPath(cls)»;  
		import «javaDaoInterfacePath(cls)»; 
	«ENDFOREACH»

	/**
	 * @author Generated by Mod4j, use as extension point to implement custom business services
	 */
	public class «javaDomainServiceClass(name)» extends «javaDomainServiceBaseClass(name)» 
	                                            implements «javaDomainServiceInterface(name)»
	{


	}
    «ENDFILE»
«ENDIF»
«ENDDEFINE»
