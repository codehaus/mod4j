«IMPORT ServiceDsl»
«IMPORT crossx»

«EXTENSION org::mod4j::dsl::service::generator::xtend::ServiceMethod»
«EXTENSION org::mod4j::dslcommon::xtend::generatorutil»
«EXTENSION org::mod4j::common::xtend::NameMapper»
«EXTENSION org::mod4j::dslcommon::xtend::ProjectProperties»
«EXTENSION org::mod4j::common::xtend::FileTracker»
«EXTENSION org::mod4j::crossx::broker::xtend::Crossx» 

«DEFINE LocalServiceImpl FOR ServiceModel»
	«FILE generate(javaPathFileName(javaLocalServiceClassPath(name)))»
    /**
     * Generated by Mod4j Service DSL: LocalServiceImpl::LocalServiceImpl at: «timestamp()»
     * from model «this.name»
     */
	package «getServiceRootPackage()»;

	import java.util.List;

	import «javaDomainServiceInterface(name)»;
	import «javaLocalServiceBaseClassPath(name)»;
	«FOREACH this.dtoReferences AS dto -»
	import «getDtoPackage()».«javaClassName(dto.name)»;
	«ENDFOREACH»

	«FOREACH this.dtoReferences.select(dto|dto.businessClass() != "void") AS dto -»
	import «javaMapperClassPath(dto.businessClass())»;
	import «javaDomainClassPath(dto.businessClass())»;
	«ENDFOREACH»
	
	/**
	 * @author Generated by Mod4j
	 */
	public class «javaLocalServiceClass(name)» extends  «javaLocalServiceBaseClass(name)» {

	«FOREACH this.methods.typeSelect(CustomMethod) AS method»
		/**
	     * @params «method.inParameters.name»
	     * @return «method.output.name»
	     */
	    public «(method == null) ? "void" : JavaType(method.output)» «method.name»(«EXPAND Parameter FOREACH method.inParameters SEPARATOR  ", "») {
	        «IF method.output == null »
	        // TODO Mod4j: implement this service method manually
	        «ENDIF»
	        «IF method.output != null »
	        // TODO Mod4j: implement this service method manually
	        return null;
	        «ENDIF»
	    }
	«ENDFOREACH»	
    }
    «ENDFILE»
«ENDDEFINE»

«DEFINE Parameter FOR Parameter»
«JavaType(type)»  «this.name»
«ENDDEFINE»

