<?xml version="1.0" encoding="windows-1252"?>

<workflow>

    <property file="workflow.properties" />

    <bean class="org.eclipse.mwe.emf.StandaloneSetup"/>
    <bean class="org.mod4j.businessdomain.xtext.MetaModelRegistration"/>
    <bean id="bm" class="oaw.type.emf.EmfMetaModel">
		<metaModelPackage value="BusinessDomainDsl.BusinessDomainDslPackage" />  
	</bean>
    
    <!--
        Parse the BusinessDomain model file and validate syntax and model constraints
    -->
	<component id="BusinessDomainWorkflow-Parser" class="org.mod4j.businessdomain.xtext.parser.ParserComponent">
		<modelFile value="${modelFile}"/>
		<outputSlot value="${outputSlot}"/>
	</component>
    <component id="BusinessDomainWorkflow-XtextChecks" class="org.openarchitectureware.check.CheckComponent">
        <metaModel idRef="bm" />
        <checkFile value="org::mod4j::businessdomain::xtext::GenChecks" />
        <emfAllChildrenSlot value="${outputSlot}" />
    </component>
    <component id="BusinessDomainWorkflow-ModelChecks" class="org.openarchitectureware.check.CheckComponent">
        <metaModel idRef="bm" />
        <checkFile value="BusinessDomainDsl::validation::BusinessModelChecks" />
        <emfAllChildrenSlot value="${outputSlot}" />
    </component>

    <!--
        Cleaning of output directories before generation.
    -->
    <component id="BusinessDomainWorkflow-DirCleaner" class="org.openarchitectureware.workflow.common.DirectoryCleaner">
        <directories value="${domainModulePath}/${srcGenPath}, ${dataModulePath}/${srcGenPath}"/>
    </component>

    <!--
        Generation of domain sources and resources
    -->
    <component id="BusinessDomainWorkflow-DomainGenerator" class="org.openarchitectureware.xpand2.Generator">
        <metaModel idRef="bm" />
        <expand value="BusinessDomain::Root('${domainRootPackage}') FOR ${outputSlot}" />
        <outlet path="${domainModulePath}/${srcGenPath}/">
            <postprocessor class="org.openarchitectureware.xpand2.output.JavaBeautifier" />
            <postprocessor class="org.openarchitectureware.xpand2.output.XmlBeautifier" />
        </outlet>
        <globalVarDef name="appPropFilePath" value="'${appPropFilePath}'" />
    </component>

    <!-- 
        Generation of Extions Points for domain sources
    -->
    <component id="BusinessDomainWorkflow-DomainEextensionPointsGenerator" class="org.openarchitectureware.xpand2.Generator">
        <metaModel idRef="bm" />
        <expand value="BusinessDomain::ExtensionPointGeneration('${domainModulePath}/${srcManPath}','${domainRootPackage}') FOR ${outputSlot}" />
        <outlet path="${domainModulePath}/${srcManPath}/">
            <postprocessor class="org.openarchitectureware.xpand2.output.JavaBeautifier" />
            <postprocessor class="org.openarchitectureware.xpand2.output.XmlBeautifier" />
        </outlet>
        <globalVarDef name="appPropFilePath" value="'${appPropFilePath}'" />
    </component>

    <!-- 
        Generation of Hibernate resources.
    -->  
     <component id="BusinessDomainWorkflow-DataLayerResourcesGenerator" class="org.openarchitectureware.xpand2.Generator">
        <metaModel idRef="bm" />
        <expand value="Datalayer::genResources FOR ${outputSlot}" />
        <outlet path="${dataModulePath}/${resourceGenPath}/">
            <postprocessor class="org.openarchitectureware.xpand2.output.JavaBeautifier" />
            <postprocessor class="org.openarchitectureware.xpand2.output.XmlBeautifier" />
        </outlet>
         <globalVarDef name="appPropFilePath" value="'${appPropFilePath}'" />
    </component>

    <!-- 
        Generation of Dao sources.
    -->  
    <component id="BusinessDomainWorkflow-DataLayerDaoGenerator" class="org.openarchitectureware.xpand2.Generator">
        <metaModel idRef="bm" />
        <expand value="Datalayer::genDao FOR ${outputSlot}" />
        <outlet path="${dataModulePath}/${srcGenPath}/">
            <postprocessor class="org.openarchitectureware.xpand2.output.JavaBeautifier" />
            <postprocessor class="org.openarchitectureware.xpand2.output.XmlBeautifier" />
        </outlet>
         <globalVarDef name="appPropFilePath" value="'${appPropFilePath}'" />
    </component>

    <!-- 
        Generation of Extention Points for Dao's.
    -->  
    <component id="BusinessDomainWorkflow-DataLayerExtentionPointsGenerator" class="org.openarchitectureware.xpand2.Generator">
        <metaModel idRef="bm" />
        <expand value="Datalayer::genDaoExtensions FOR ${outputSlot}" />
        <outlet path="${dataModulePath}/${srcManPath}/">
            <postprocessor class="org.openarchitectureware.xpand2.output.JavaBeautifier" />
            <postprocessor class="org.openarchitectureware.xpand2.output.XmlBeautifier" />
        </outlet>
         <globalVarDef name="appPropFilePath" value="'${appPropFilePath}'" />
    </component>

    <!-- 
        Generation of Maven configuration files.
    -->  
    <component id="BusinessDomainWorkflow-MavenConfigGenerator" class="org.openarchitectureware.xpand2.Generator">
        <metaModel idRef="bm" />
        <expand value="BusinessDomain::CreateMavenConfiguration FOR ${outputSlot}"/>
        <outlet path="${applicationPath}">
            <postprocessor class="org.openarchitectureware.xpand2.output.XmlBeautifier" />
        </outlet>
         <globalVarDef name="appPropFilePath" value="'${appPropFilePath}'" />
    </component>
 
</workflow>