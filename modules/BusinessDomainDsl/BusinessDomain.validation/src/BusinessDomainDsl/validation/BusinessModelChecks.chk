/*******************************************************************************
 * Copyright (c) 2008 Ordina and committers to Mod4j
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     Ordina - initial implementation
 *******************************************************************************/
import BusinessDomainDsl;

extension BusinessDomainDsl::validation::javautils;
extension BusinessDomainDsl::validation::crossxutils;
// extension org::mod4j::businessdomain::xtext::Extensions;
// extension org::mod4j::businessdomain::xtext::javautils;
/*
 * This check file is used by the parser
 * and by the editor. Add your constraints here!
 */

context BusinessClass ERROR "Name of BusinessClass [" + this.name + "] is not unique" :
   ((BusinessDomainDsl::BusinessDomainModel)this.eContainer).types.forAll(e|
     e != this implies e.name != this.name) ;

context BusinessClass ERROR "Name of BusinessClass should not be empty" :
    this.name.trim().length > 0;

context BusinessClass ERROR "BusinessClass [" + this.name + "] inherits itself" :
    ! circularInheritance(this);

context Property ERROR "Name of Attribute [" + this.name + "] is not unique":
   ((BusinessDomainDsl::BusinessClass)this.eContainer).properties.forAll(e|
     e != this implies e.name != this.name) ;

context Property ERROR "The dataType of property [" + this.name + "] is not specified.":
    this.metaType == EnumerationProperty
    ?    true
    :    dataType.length > 1;

context Property ERROR "The name of Property ["+ name + "] must be more than one character long." :
    name.length > 1;
 
context IntegerProperty ERROR "The minimal value of Property ["+ name + "] must be smaller that the maximum value." :
    minValue <= maxValue;

context IntegerProperty ERROR "The default value of Property ["+ name + "] must be  greater than the minimum values." :
    (hasDefault && (minValue != -2147483648) ) ? defaultValue >= minValue : true ;
 
context IntegerProperty ERROR "The default value of Property ["+ name + "] must be between less than the maximum values." :
    (hasDefault && (maxValue != -2147483648) ) ? defaultValue <= maxValue : true ;
 
context StringProperty ERROR "The lenght of the default value of Property ["+ name + "] must be greater than the minimum lenght." :
    (hasDefault && (minLength != -1) ) ? defaultValue.length >= minLength : true ;
 
context StringProperty ERROR "The lenght of the default value of Property ["+ name + "] must be less than the maximum lenght." :
    (hasDefault && (maxLength != -1) ) ? defaultValue.length <= maxLength : true ;
 
context StringProperty ERROR "The minimum lenght of Property ["+ name + "] must be less or equal to the maximum lenght." :
    ((minLength != -1) && (maxLength != -1) ) ? minLength <= maxLength : true ;
 
// context EnumerationProperty ERROR "The default value of Property ["+ name + "] must be an enumeration literal of [" + type.name + "]." :
//    (hasDefault ? this.type.enumerationLiterals.name.contains(defaultValue) : true);
 
context Enumeration ERROR "Enumeration literals must be unique" :
      enumerationLiterals.forAll(e1 | 
         enumerationLiterals.forAll( e2 | e1 != e2 implies e1.name != e2.name) );

context Enumeration ERROR "Enumeration numeric values must be unique" :
      enumerationLiterals.forAll(e1 | 
         enumerationLiterals.forAll( e2 | e1 != e2 implies e1.persistedValue!= e2.persistedValue) );

context Association ERROR "Bi-directional many to many associations are not supported yet" :
    !( (sourceMultiplicity == Multiplicity::ZeroMany || sourceMultiplicity == Multiplicity::OneMany)
       && 
       (targetMultiplicity == Multiplicity::ZeroMany || targetMultiplicity == Multiplicity::OneMany) 
       &&
       (bidirectional));

context EnumerationProperty ERROR "Default value [" + this.defaultValueAsString + "] is not a literal of enumeration " + type.name :
    this.hasDefault implies this.type.enumerationLiterals.exists(lit | lit.name == this.defaultValueAsString);

context BusinessRule ERROR "Name of BusinessRule [" + this.name + "] must be unique" :
    ((BusinessDomainDsl::BusinessClass)this.eContainer).businessRules.forAll(e|
      e != this implies e.name != this.name)
	;

context UniqueRule ERROR "All properties of a unique rule must belong to the containing class" :
    this.properties.forAll( p |  ((BusinessDomainDsl::BusinessClass)this.eContainer).properties.contains(p) );

context UniqueRule ERROR "Any property can be part of just one unique rule" :
    let constrainedProperties = ((BusinessDomainDsl::BusinessClass)this.eContainer).businessRules.typeSelect(UniqueRule).properties :
    constrainedProperties.size == constrainedProperties.toSet().size;
 