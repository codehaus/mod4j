«IMPORT BusinessDomainDsl»

«EXTENSION BusinessClass»
«EXTENSION org::mod4j::dslcommon::xtend::generatorutil»
«EXTENSION org::mod4j::dslcommon::xtend::ProjectProperties»
«EXTENSION org::mod4j::common::xtend::FileTracker»
«EXTENSION org::mod4j::common::xtend::NameMapper»

«DEFINE daoInterfaceBase  FOR BusinessDomainDsl::BusinessClass»
«FILE generate(getDataModuleName(), javaPathFileName(javaDaoBaseInterfacePath(this.name) ))»
/** 
 * Generated by Mod4j at «timestamp()»
 */
package «getDaoPackage()»;

import java.util.List;

import «getDomainRootPackage()».«javaClassName(this)»;

/**
 * «daoInterfaceBaseName(this)» Data Access Object (DAO). Responsible for accessing database.
 * 
 * @author Mod4j generated
 * 
 */
public interface «daoInterfaceBaseName(this)» {

    /**
     * Retrieves a «javaClassName(this)» by its ID from the database.
     * 
     * @param id id of the «javaClassName(this)» to retrieve.
     * @return «javaClassName(this)» retrieved or null when no «javaClassName(this)» was found.
     */
    «javaClassName(this)» retrieve(long id);

    /**
     * Adds a new «javaClassName(this)» to the database
     * 
     * @param «javaVarName(this)»
     *                the «javaClassName(this)» to add to the database.
     * @return the stored «this.name».
     */
    «javaClassName(this)» add(«javaClassName(this)» «javaVarName(this)»);

    /**
     * Stores/Updates the «this.name» in the database. Inclusive all its posts.
     * 
     * @param «javaVarName(this)»
     *                the «javaClassName(this)» to store/update
     * @return
     */
    «javaClassName(this)» update(«javaClassName(this)» «javaVarName(this)»);

    /**
     * Deletes a «this.name» from the database.
     * 
     * @param «javaVarName(this)»
     *                the «javaClassName(this)» to delete
     */
    void delete(«javaClassName(this)» «javaVarName(this)»);

    /**
     * Selects all «javaClassName(this)»s from the database.
     * 
     * @return a List of all «javaClassName(this)» objects.
     */
    List<«javaClassName(this)»> listAll«javaClassName(this)»s();
}
«ENDFILE»
«ENDDEFINE»
