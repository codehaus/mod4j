«REM»
 Copyright (c) 2009 Ordina and committers to Mod4j
 All rights reserved. This program and the accompanying materials
 are made available under the terms of the Eclipse Public License v1.0
 which accompanies this distribution, and is available at
 http://www.eclipse.org/legal/epl-v10.html
  Contributors:
     Ordina - initial implementation
«ENDREM»
«IMPORT BusinessDomainDsl»


«EXTENSION BusinessRule»
«EXTENSION BusinessClass»
«EXTENSION org::mod4j::dslcommon::xtend::ProjectProperties»
«EXTENSION org::mod4j::dslcommon::xtend::generatorutil»
«EXTENSION org::mod4j::common::xtend::NameMapper»
«EXTENSION org::mod4j::common::xtend::FileTracker»

«DEFINE BeanClassImplBase FOR AbstractType»
«FILE generate(getDomainModuleName(), javaPathFileName(javaDomainBaseClassPath(this.name) ))»
	    /**
         * DO NOT MODIFY THIS FILE, CHANGES WILL BE AUTOMATICALLY OVERWRITTEN 
         *
         * Generated by Mod4j BusinessDomain DSL by BeanClassImplBase<AstractType> in JavaBean.xpt at: «timestamp()»
         */
		package «getDomainRootPackage()»;
		
        «REM»Add import statements for Attributes. If a dataType occurs more then once, the import statement will be added just once.«ENDREM»
        «FOREACH properties.dataType.toSet() AS dataType»
            «EXPAND Imports::addImports FOR properties.selectFirst(e|e.dataType == dataType)»
        «ENDFOREACH»
		/**
		 * «description»
		 *
		 * @author Generated by Mod4j BusinessDomain DSL
		 */
«REM»    public class «name» {  «ENDREM»
         public class «javaDomainBaseClass(name)»
        	«EXPAND Attributes::addAttribute FOREACH properties»
 			«EXPAND Attributes::addGetter FOREACH properties»
 			«EXPAND Attributes::addSetter FOREACH properties» 		
        }
	«ENDFILE»
«ENDDEFINE»

«DEFINE BeanClassImplBase FOR BusinessClass»
    «FILE generate(getDomainModuleName(), javaPathFileName(javaDomainBaseClassPath(this.name) ))»
        /**
         * DO NOT MODIFY THIS FILE, CHANGES WILL BE AUTOMATICALLY OVERWRITTEN 
         *
         * Generated by Mod4j BusinessDomain DSL by BeanClassImplBase in JavaBean.xpt at: «timestamp()»
         */
		package «getDomainRootPackage()»;
		
		«IF superclass == null »
		    «EXPAND Imports::addTopLevelClassImports FOR this»
		«ENDIF»
		«EXPAND Imports::addImports»
		«REM»Add import statements for Attributes. If a dataType occurs more then once, the import statement will be added just once.«ENDREM»
        «FOREACH this.getAllProperties().dataType.toSet() AS dataType»
            «EXPAND Imports::addImports FOR this.getAllProperties().selectFirst(e|e.dataType == dataType)»
        «ENDFOREACH»
        «FOREACH businessRules.typeSelect(BusinessRule) AS br»
            import «javaBusinessRuleClassPath(br.name)»;
        «ENDFOREACH»
		
        /**
         * «description»
         *
         * @author Generated by Mod4j BusinessDomain DSL
         */
«REM»        public abstract class «implBaseClassName()» «IF superclass != null -»extends «superclass.name» «ENDIF»implements java.io.Serializable {«ENDREM»
        @SuppressWarnings("serial")
        public abstract class «javaDomainBaseClass(name)» «IF superclass != null -»extends «javaDomainClass(superclass.name)» «ENDIF»implements java.io.Serializable {
            
            «IF superclass == null »
                «EXPAND ValidationSupport::addValidationInstance FOR this»
                «EXPAND Attributes::addIdAttribute FOR this»	
                «EXPAND Attributes::addIdAccessors FOR this»
            «ENDIF»
 			«EXPAND Attributes::addAttribute FOREACH properties»
 			«EXPAND Associations::addToReferenceVariable FOREACH associationsTo»
            «EXPAND Associations::addFromReferenceVariable FOREACH associationsFrom.select(e|e.bidirectional)»
            «IF !properties.reject(e|e.nullable || e.hasDefault).isEmpty»
                «EXPAND Constructors::addDefaultImplBaseConstructor FOR this»
            «ENDIF»
            «EXPAND Constructors::addMinimalConstructor FOR this»
 			«EXPAND Attributes::addGetter FOREACH properties»
 			«EXPAND Attributes::addSetter FOREACH properties»
 			«EXPAND ValidationSupport::addValidationSwitch FOR this»
        }
	«ENDFILE»
«ENDDEFINE»

«DEFINE BeanClassExtensionPoint FOR AbstractType»
	«REM»No generation of AbstracTypes other then BusinessClasses«ENDREM»
«ENDDEFINE»

«DEFINE BeanClassExtensionPoint FOR BusinessClass»
	«IF fileExist(fullExtendPath(getDomainModuleName(), javaPathFileName(javaDomainClassPath(this.name) )))»
		«extend(getDomainModuleName(), javaPathFileName(javaDomainClassPath(this.name) ))»
	«ELSE»
		«FILE extend(getDomainModuleName(), javaPathFileName(javaDomainClassPath(this.name) ))»
	        /**
	         * Extension point generated initially by Mod4j BusinessDomain DSL by BeanClassExtensionPoint in JavaBean.xpt at: «timestamp()»
	         */
			package «getDomainRootPackage()»;
			
			«REM»Add import statements for Attributes. If a dataType occurs more then once, the import statement will be added just once.«ENDREM»
			«FOREACH this.getAllProperties().dataType.toSet() AS dataType»
			     «EXPAND Imports::addImports FOR this.getAllProperties().selectFirst(e|e.dataType == dataType)»
			«ENDFOREACH»
            /**
             * «description»
             *
             * @author Generated by Mod4j BusinessDomain DSL
             */
        	public class «javaDomainClass(this.name)» extends «javaDomainBaseClass(this.name)» {
                        
            «IF !properties.reject(e|e.nullable || e.hasDefault).isEmpty» 
                «EXPAND Constructors::addDefaultConstructor FOR this»    
            «ENDIF»
            «EXPAND Constructors::addCallToSuperOnlyMinimalConstructor ("") FOR this»
 			}	
		«ENDFILE»
    «ENDIF»
«ENDDEFINE»

«DEFINE BeanClassQueryExample FOR BusinessClass»
    «FILE generate(getDomainModuleName(), javaPathFileName(javaDomainExampleClassPath(this.name) ))»
        /**
         * DO NOT MODIFY THIS FILE, CHANGES WILL BE AUTOMATICALLY OVERWRITTEN 
         *
         * Generated by Mod4j BusinessDomain DSL by BeanClassQueryExample in QueryExample.xpt at: «timestamp()»
         */
        package «getDomainRootPackage()»;
        
        /**
         * A subclass of «javaDomainClass(name)» to be used as example object
         * in Query-by-Example (QBE) queries. It turns off validation in the
         * no-argument constructor.
         *
         * @author Generated by Mod4j BusinessDomain DSL
         */
        public final class «javaDomainExampleClass(name)» extends «javaDomainClass(name)» {
            
            public «javaDomainExampleClass(name)»() {
                activateValidation(false);
                «EXPAND addNullSetters FOR this -»
            }
        }
    «ENDFILE»
«ENDDEFINE»

«DEFINE addNullSetters FOR BusinessClass -»
    «IF superclass != null -»
        «EXPAND addNullSetters FOR superclass -»
    «ENDIF -»
    «FOREACH this.properties.select(p|p.hasDefault) AS p -»
        «p.name» = null;
    «ENDFOREACH -»
«ENDDEFINE»