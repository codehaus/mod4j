«IMPORT BusinessDomainDsl»

«EXTENSION BusinessClass»
«EXTENSION BusinessRule»
«EXTENSION org::mod4j::dslcommon::xtend::generatorutil»
«EXTENSION org::mod4j::dslcommon::xtend::ProjectProperties»

«DEFINE BeanClassImplBase FOR AbstractType»
	«FILE getDomainRootPackageAsPath() + "/" + name + ".java"»
	    /**
         * Generated by Mod4j BusinessDomain DSL by BeanClassImplBase in JavaBean.xpt at: «timestamp()»
         */
		package «getDomainRootPackage()»;
		
        «REM»Add import statements for Attributes. If a dataType occurs more then once, the import statement will be added just once.«ENDREM»
        «FOREACH properties.dataType.toSet() AS dataType»
            «EXPAND Imports::addImports FOR properties.selectFirst(e|e.dataType == dataType)»
        «ENDFOREACH»
		/**
		 * «description»
		 *
		 * @author Generated by Mod4j BusinessDomain DSL
		 */
        public class «name» {
        
        	«EXPAND Attributes::addAttribute FOREACH properties»
 			«EXPAND Attributes::addGetter FOREACH properties»
 			«EXPAND Attributes::addSetter FOREACH properties» 		
        }
	«ENDFILE»
«ENDDEFINE»

«DEFINE BeanClassImplBase FOR BusinessClass»
	«FILE getDomainRootPackageAsPath() + "/" + implBaseClassName() +  ".java"»
        /**
         * Generated by Mod4j BusinessDomain DSL by BeanClassImplBase in JavaBean.xpt at: «timestamp()»
         */
		package «getDomainRootPackage()»;
		
		«IF superclass == null »
		    «EXPAND Imports::addTopLevelClassImports FOR this»
		«ENDIF»
		«EXPAND Imports::addImports»
		«REM»Add import statements for Attributes. If a dataType occurs more then once, the import statement will be added just once.«ENDREM»
        «FOREACH properties.dataType.toSet() AS dataType»
            «EXPAND Imports::addImports FOR properties.selectFirst(e|e.dataType == dataType)»
        «ENDFOREACH»
        «FOREACH businessRules.typeSelect(BusinessRule) AS br»
            import «getBusinessRulesPackage()».«javaClassName(br)»;
        «ENDFOREACH»
		
        /**
         * «description»
         *
         * @author Generated by Mod4j BusinessDomain DSL
         */
        public abstract class «implBaseClassName()» «IF superclass != null -»extends «superclass.name» «ENDIF»implements java.io.Serializable {
            
            «IF superclass == null »
                protected BusinessRuleValidationSupport validation = new BusinessRuleValidationSupport(this);
                «EXPAND Attributes::addIdAttribute FOR this»	
                «EXPAND Attributes::addIdAccessors FOR this»
            «ENDIF»
 			«EXPAND Attributes::addAttribute FOREACH properties»
 			«EXPAND Associations::addToReferenceVariable FOREACH associationsTo»
            «EXPAND Associations::addFromReferenceVariable FOREACH associationsFrom.select(e|e.bidirectional)»
            «IF !properties.reject(e|e.nullable || e.hasDefault).isEmpty»
                «EXPAND Constructors::addDefaultImplBaseConstructor FOR this»
            «ENDIF»
            «EXPAND Constructors::addMinimalConstructor FOR this»
 			«EXPAND Attributes::addGetter FOREACH properties»
 			«EXPAND Attributes::addSetter FOREACH properties»
        }
	«ENDFILE»
«ENDDEFINE»

«DEFINE BeanClassExtensionPoint FOR AbstractType»
	«REM»No generation of AbstracTypes other then BusinessClasses«ENDREM»
«ENDDEFINE»

«DEFINE BeanClassExtensionPoint FOR BusinessClass»
    «IF !fileExist(getDomainModulePath() + "/" + getSrcManPath() + "/" + getDomainRootPackageAsPath() + "/" + javaClassName() + ".java")»
		«FILE getDomainRootPackageAsPath() + "/" + javaClassName() + ".java"»
	        /**
	         * Extension point generated initially by Mod4j BusinessDomain DSL by BeanClassExtensionPoint in JavaBean.xpt at: «timestamp()»
	         */
			package «getDomainRootPackage()»;
			
			«REM»Add import statements for Attributes. If a dataType occurs more then once, the import statement will be added just once.«ENDREM»
			«FOREACH properties.dataType.toSet() AS dataType»
			     «EXPAND Imports::addImports FOR properties.selectFirst(e|e.dataType == dataType)»
			«ENDFOREACH»
            /**
             * «description»
             *
             * @author Generated by Mod4j BusinessDomain DSL
             */
        	public class «javaClassName()» extends «implBaseClassName()» {
                        
            «IF !properties.reject(e|e.nullable || e.hasDefault).isEmpty» 
                «EXPAND Constructors::addDefaultConstructor FOR this»    
            «ENDIF»
            «EXPAND Constructors::addCallToSuperOnlyMinimalConstructor ("") FOR this»
 			}	
		«ENDFILE»
    «ENDIF»
«ENDDEFINE»